{"version":3,"file":"Artalk.cjs","sources":["../src/api/v2.ts","../src/api/fetch.ts","../src/api/index.ts","../../../node_modules/.pnpm/marked@12.0.2/node_modules/marked/lib/marked.esm.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/she.js","../../../node_modules/.pnpm/assignment@2.0.0/node_modules/assignment/assignment.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/lowercase.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/toMap.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/attributes.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/elements.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/parser.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/sanitizer.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/insane.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/defaults.js","../src/lib/sanitizer.ts","../../../node_modules/.pnpm/hanabi@0.4.0/node_modules/hanabi/dist/hanabi.js","../src/lib/highlight.ts","../src/lib/marked-renderer.ts","../src/lib/marked.ts","../src/lib/merge-deep.ts","../src/data.ts","../src/lib/utils.ts","../src/i18n/en.ts","../src/i18n/external.ts","../src/i18n/index.ts","../src/i18n/zh-CN.ts","../src/lib/event-manager.ts","../src/defaults.ts","../src/config.ts","../src/lib/watch-conf.ts","../src/context.ts","../src/api/handler.ts","../src/lib/ui.ts","../src/components/checker/captcha-renders.ts","../src/components/checker/captcha.ts","../src/components/checker/admin.ts","../src/components/dialog.ts","../src/components/checker/index.ts","../src/lib/component.ts","../src/editor/editor.html?raw","../src/editor/ui.ts","../src/plugins/editor/_plug.ts","../src/plugins/editor/mover.ts","../src/editor/state.ts","../src/editor/editor.ts","../src/layer/sidebar-layer.ts","../src/layer/sidebar-layer.html?raw","../src/list/layout/nest.ts","../src/list/nest.ts","../src/list/layout/flat.ts","../src/list/layout/index.ts","../src/comment/height-limit.ts","../src/comment/renders/header.ts","../src/components/action-btn.ts","../src/comment/renders/actions.ts","../src/comment/renders/index.ts","../src/comment/renders/avatar.ts","../src/comment/renders/content.ts","../src/comment/renders/reply-at.ts","../src/comment/renders/reply-to.ts","../src/comment/renders/pending.ts","../src/comment/render.ts","../src/comment/comment.html?raw","../src/comment/actions.ts","../src/comment/comment-node.ts","../src/lib/detect.ts","../src/components/read-more-btn.ts","../src/list/paginator/read-more.ts","../src/components/pagination.ts","../src/list/paginator/up-down.ts","../src/list/page.ts","../src/list/list.ts","../src/list/list.html?raw","../src/list/comment.ts","../src/layer/scrollbar-helper.ts","../src/layer/layer.ts","../src/layer/wrap.ts","../src/layer/layer-manager.ts","../src/lib/user.ts","../src/service.ts","../src/plugins/stat.ts","../src/plugins/markdown.ts","../src/plugins/editor/local-storage.ts","../src/plugins/editor/submit-add.ts","../src/plugins/editor/submit.ts","../src/plugins/editor/emoticons.ts","../src/plugins/editor/upload.ts","../src/plugins/editor/preview.ts","../src/plugins/editor/index.ts","../src/plugins/editor/header-event.ts","../src/plugins/editor/header-user.ts","../src/plugins/editor/textarea.ts","../src/plugins/editor/submit-btn.ts","../src/plugins/editor/state-reply.ts","../src/plugins/editor/state-edit.ts","../src/plugins/editor/closable.ts","../src/plugins/editor/_kit.ts","../src/plugins/editor-kit.ts","../src/plugins/list/goto-focus.ts","../src/components/error-dialog.ts","../src/plugins/version-check.ts","../src/plugins/dark-mode.ts","../src/plugins/index.ts","../src/plugins/admin-only-elem.ts","../src/plugins/list/index.ts","../src/plugins/list/fetch.ts","../src/plugins/list/loading.ts","../src/plugins/list/unread.ts","../src/plugins/list/with-editor.ts","../src/plugins/list/count.ts","../src/plugins/list/unread-badge.ts","../src/plugins/list/dropdown.ts","../src/plugins/list/goto-dispatcher.ts","../src/plugins/list/no-comment.ts","../src/plugins/list/copyright.ts","../src/plugins/list/time-ticking.ts","../src/plugins/list/error-dialog.ts","../src/plugins/list/reach-bottom.ts","../src/plugins/list/goto-first.ts","../src/plugins/notifies.ts","../src/load.ts","../src/artalk.ts","../src/main.ts"],"sourcesContent":["/* eslint-disable */\r\n/* tslint:disable */\r\n/*\r\n * ---------------------------------------------------------------\r\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\r\n * ##                                                           ##\r\n * ## AUTHOR: acacode                                           ##\r\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\r\n * ---------------------------------------------------------------\r\n */\r\n\r\nexport interface AuthAuthProviderInfo {\r\n  icon: string\r\n  label: string\r\n  name: string\r\n  path?: string\r\n}\r\n\r\nexport interface CommonApiVersionData {\r\n  app: string\r\n  commit_hash: string\r\n  version: string\r\n}\r\n\r\nexport interface CommonConfData {\r\n  frontend_conf: CommonMap\r\n  version: CommonApiVersionData\r\n}\r\n\r\nexport interface CommonJSONResult {\r\n  /** Data */\r\n  data: any\r\n  /** Message */\r\n  msg: string\r\n}\r\n\r\nexport type CommonMap = Record<string, any>\r\n\r\nexport interface EntityCookedComment {\r\n  badge_color: string\r\n  badge_name: string\r\n  content: string\r\n  content_marked: string\r\n  date: string\r\n  email_encrypted: string\r\n  id: number\r\n  ip_region: string\r\n  is_allow_reply: boolean\r\n  is_collapsed: boolean\r\n  is_pending: boolean\r\n  is_pinned: boolean\r\n  is_verified: boolean\r\n  link: string\r\n  nick: string\r\n  page_key: string\r\n  page_url: string\r\n  rid: number\r\n  site_name: string\r\n  ua: string\r\n  user_id: number\r\n  visible: boolean\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface EntityCookedNotify {\r\n  comment_id: number\r\n  id: number\r\n  is_emailed: boolean\r\n  is_read: boolean\r\n  read_link: string\r\n  user_id: number\r\n}\r\n\r\nexport interface EntityCookedPage {\r\n  admin_only: boolean\r\n  date: string\r\n  id: number\r\n  key: string\r\n  pv: number\r\n  site_name: string\r\n  title: string\r\n  url: string\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface EntityCookedSite {\r\n  first_url: string\r\n  id: number\r\n  name: string\r\n  urls: string[]\r\n  urls_raw: string\r\n}\r\n\r\nexport interface EntityCookedUser {\r\n  badge_color: string\r\n  badge_name: string\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface EntityCookedUserForAdmin {\r\n  badge_color: string\r\n  badge_name: string\r\n  comment_count: number\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  is_in_conf: boolean\r\n  last_ip: string\r\n  last_ua: string\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport type HandlerMap = Record<string, any>\r\n\r\nexport interface HandlerParamsCaptchaVerify {\r\n  /** The captcha value to check */\r\n  value: string\r\n}\r\n\r\nexport interface HandlerParamsCommentCreate {\r\n  /** The comment content */\r\n  content: string\r\n  /** The comment email */\r\n  email: string\r\n  /** The comment link */\r\n  link?: string\r\n  /** The comment name */\r\n  name: string\r\n  /** The comment page_key */\r\n  page_key: string\r\n  /** The comment page_title */\r\n  page_title?: string\r\n  /** The comment rid */\r\n  rid?: number\r\n  /** The site name of your content scope */\r\n  site_name: string\r\n  /** The comment ua */\r\n  ua?: string\r\n}\r\n\r\nexport interface HandlerParamsCommentUpdate {\r\n  /** The comment content */\r\n  content: string\r\n  /** The comment email */\r\n  email?: string\r\n  /** The comment ip */\r\n  ip?: string\r\n  /** The comment is_collapsed */\r\n  is_collapsed: boolean\r\n  /** The comment is_pending */\r\n  is_pending: boolean\r\n  /** The comment is_pinned */\r\n  is_pinned: boolean\r\n  /** The comment link */\r\n  link?: string\r\n  /** The comment nick */\r\n  nick?: string\r\n  /** The comment page_key */\r\n  page_key: string\r\n  /** The comment rid */\r\n  rid: number\r\n  /** The site name of your content scope */\r\n  site_name: string\r\n  /** The comment ua */\r\n  ua?: string\r\n}\r\n\r\nexport interface HandlerParamsEmailSend {\r\n  /** The body of email */\r\n  body: string\r\n  /** The subject of email */\r\n  subject: string\r\n  /** The email address of the receiver */\r\n  to_addr: string\r\n}\r\n\r\nexport interface HandlerParamsNotifyReadAll {\r\n  /** The user email */\r\n  email: string\r\n  /** The username */\r\n  name: string\r\n}\r\n\r\nexport interface HandlerParamsPageFetchAll {\r\n  /** If not empty, only fetch pages of this site */\r\n  site_name?: string\r\n}\r\n\r\nexport interface HandlerParamsPagePV {\r\n  /** The page key */\r\n  page_key: string\r\n  /** The page title */\r\n  page_title?: string\r\n  /** The site name of your content scope */\r\n  site_name?: string\r\n}\r\n\r\nexport interface HandlerParamsPageUpdate {\r\n  /** Updated page admin_only option */\r\n  admin_only: boolean\r\n  /** Updated page key */\r\n  key: string\r\n  /** The site name of your content scope */\r\n  site_name: string\r\n  /** Updated page title */\r\n  title: string\r\n}\r\n\r\nexport interface HandlerParamsSettingApply {\r\n  /** The content of the config file in YAML format */\r\n  yaml: string\r\n}\r\n\r\nexport interface HandlerParamsSiteCreate {\r\n  /** The site name */\r\n  name: string\r\n  /** The site urls */\r\n  urls: string[]\r\n}\r\n\r\nexport interface HandlerParamsSiteUpdate {\r\n  /** Updated site name */\r\n  name: string\r\n  /** Updated site urls */\r\n  urls: string[]\r\n}\r\n\r\nexport interface HandlerParamsTransferImport {\r\n  /** Automatically answer yes for all questions */\r\n  assumeyes?: boolean\r\n  /** The JSON data */\r\n  json_data?: string\r\n  /** The JSON file path */\r\n  json_file?: string\r\n  /** The target site name */\r\n  target_site_name?: string\r\n  /** The target site url */\r\n  target_site_url?: string\r\n  /** Keep domain */\r\n  url_keep_domain?: boolean\r\n  /** Enable URL resolver */\r\n  url_resolver?: boolean\r\n}\r\n\r\nexport interface HandlerParamsUserCreate {\r\n  /** The user badge color (hex format) */\r\n  badge_color?: string\r\n  /** The user badge name */\r\n  badge_name?: string\r\n  /** The user email */\r\n  email: string\r\n  /** The user is an admin */\r\n  is_admin: boolean\r\n  /** The user link */\r\n  link?: string\r\n  /** The user name */\r\n  name: string\r\n  /** The user password */\r\n  password?: string\r\n  /** The user receive email */\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerParamsUserLogin {\r\n  /** The user email */\r\n  email: string\r\n  /** The username */\r\n  name?: string\r\n  /** The user password */\r\n  password: string\r\n}\r\n\r\nexport interface HandlerParamsUserUpdate {\r\n  /** The user badge color (hex format) */\r\n  badge_color?: string\r\n  /** The user badge name */\r\n  badge_name?: string\r\n  /** The user email */\r\n  email: string\r\n  /** The user is an admin */\r\n  is_admin: boolean\r\n  /** The user link */\r\n  link?: string\r\n  /** The user name */\r\n  name: string\r\n  /** The user password */\r\n  password?: string\r\n  /** The user receive email */\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerParamsVote {\r\n  /** The user email */\r\n  email?: string\r\n  /** The username */\r\n  name?: string\r\n}\r\n\r\nexport interface HandlerRequestAuthDataMergeApply {\r\n  user_name: string\r\n}\r\n\r\nexport interface HandlerRequestAuthEmailLogin {\r\n  code?: string\r\n  email: string\r\n  password?: string\r\n}\r\n\r\nexport interface HandlerRequestAuthEmailRegister {\r\n  code: string\r\n  email: string\r\n  link?: string\r\n  name?: string\r\n  password: string\r\n}\r\n\r\nexport interface HandlerRequestAuthEmailSend {\r\n  email: string\r\n}\r\n\r\nexport interface HandlerResponseAdminUserList {\r\n  count: number\r\n  users: EntityCookedUserForAdmin[]\r\n}\r\n\r\nexport interface HandlerResponseAuthDataMergeApply {\r\n  deleted_user_count: number\r\n  update_comments_count: number\r\n  update_notifies_count: number\r\n  update_votes_count: number\r\n  /** Empty if login user is target user no need to re-login */\r\n  user_token: string\r\n}\r\n\r\nexport interface HandlerResponseAuthDataMergeCheck {\r\n  need_merge: boolean\r\n  user_names: string[]\r\n}\r\n\r\nexport interface HandlerResponseCaptchaGet {\r\n  img_data: string\r\n}\r\n\r\nexport interface HandlerResponseCaptchaStatus {\r\n  is_pass: boolean\r\n}\r\n\r\nexport interface HandlerResponseCommentCreate {\r\n  badge_color: string\r\n  badge_name: string\r\n  content: string\r\n  content_marked: string\r\n  date: string\r\n  email_encrypted: string\r\n  id: number\r\n  ip_region: string\r\n  is_allow_reply: boolean\r\n  is_collapsed: boolean\r\n  is_pending: boolean\r\n  is_pinned: boolean\r\n  is_verified: boolean\r\n  link: string\r\n  nick: string\r\n  page_key: string\r\n  page_url: string\r\n  rid: number\r\n  site_name: string\r\n  ua: string\r\n  user_id: number\r\n  visible: boolean\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponseCommentGet {\r\n  /** The comment detail */\r\n  comment: EntityCookedComment\r\n  /** The reply comment if exists (like reply) */\r\n  reply_comment: EntityCookedComment\r\n}\r\n\r\nexport interface HandlerResponseCommentList {\r\n  comments: EntityCookedComment[]\r\n  count: number\r\n  page: EntityCookedPage\r\n  roots_count: number\r\n}\r\n\r\nexport interface HandlerResponseCommentUpdate {\r\n  badge_color: string\r\n  badge_name: string\r\n  content: string\r\n  content_marked: string\r\n  date: string\r\n  email_encrypted: string\r\n  id: number\r\n  ip_region: string\r\n  is_allow_reply: boolean\r\n  is_collapsed: boolean\r\n  is_pending: boolean\r\n  is_pinned: boolean\r\n  is_verified: boolean\r\n  link: string\r\n  nick: string\r\n  page_key: string\r\n  page_url: string\r\n  rid: number\r\n  site_name: string\r\n  ua: string\r\n  user_id: number\r\n  visible: boolean\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponseConfAuthProviders {\r\n  anonymous: boolean\r\n  providers: AuthAuthProviderInfo[]\r\n}\r\n\r\nexport interface HandlerResponseConfDomain {\r\n  /** Is the domain trusted */\r\n  is_trusted: boolean\r\n  /** The origin of the domain */\r\n  origin: string\r\n}\r\n\r\nexport interface HandlerResponseNotifyList {\r\n  count: number\r\n  notifies: EntityCookedNotify[]\r\n}\r\n\r\nexport interface HandlerResponsePageFetch {\r\n  admin_only: boolean\r\n  date: string\r\n  id: number\r\n  key: string\r\n  pv: number\r\n  site_name: string\r\n  title: string\r\n  url: string\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponsePageFetchStatus {\r\n  /** The number of pages that have been fetched */\r\n  done: number\r\n  /** If the task is in progress */\r\n  is_progress: boolean\r\n  /** The message of the task status */\r\n  msg: string\r\n  /** The total number of pages */\r\n  total: number\r\n}\r\n\r\nexport interface HandlerResponsePageList {\r\n  count: number\r\n  pages: EntityCookedPage[]\r\n}\r\n\r\nexport interface HandlerResponsePagePV {\r\n  pv: number\r\n}\r\n\r\nexport interface HandlerResponsePageUpdate {\r\n  admin_only: boolean\r\n  date: string\r\n  id: number\r\n  key: string\r\n  pv: number\r\n  site_name: string\r\n  title: string\r\n  url: string\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponseSettingGet {\r\n  yaml: string\r\n}\r\n\r\nexport interface HandlerResponseSettingTemplate {\r\n  yaml: string\r\n}\r\n\r\nexport interface HandlerResponseSiteCreate {\r\n  first_url: string\r\n  id: number\r\n  name: string\r\n  urls: string[]\r\n  urls_raw: string\r\n}\r\n\r\nexport interface HandlerResponseSiteList {\r\n  count: number\r\n  sites: EntityCookedSite[]\r\n}\r\n\r\nexport interface HandlerResponseSiteUpdate {\r\n  first_url: string\r\n  id: number\r\n  name: string\r\n  urls: string[]\r\n  urls_raw: string\r\n}\r\n\r\nexport interface HandlerResponseTransferExport {\r\n  /** The exported data which is a JSON string */\r\n  artrans: string\r\n}\r\n\r\nexport interface HandlerResponseTransferUpload {\r\n  /** The uploaded file name which can be used to import */\r\n  filename: string\r\n}\r\n\r\nexport interface HandlerResponseUpload {\r\n  file_name: string\r\n  file_type: string\r\n  public_url: string\r\n}\r\n\r\nexport interface HandlerResponseUserCreate {\r\n  badge_color: string\r\n  badge_name: string\r\n  comment_count: number\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  is_in_conf: boolean\r\n  last_ip: string\r\n  last_ua: string\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerResponseUserInfo {\r\n  is_login: boolean\r\n  notifies: EntityCookedNotify[]\r\n  notifies_count: number\r\n  user: EntityCookedUser\r\n}\r\n\r\nexport interface HandlerResponseUserLogin {\r\n  token: string\r\n  user: EntityCookedUser\r\n}\r\n\r\nexport interface HandlerResponseUserStatus {\r\n  is_admin: boolean\r\n  is_login: boolean\r\n}\r\n\r\nexport interface HandlerResponseUserUpdate {\r\n  badge_color: string\r\n  badge_name: string\r\n  comment_count: number\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  is_in_conf: boolean\r\n  last_ip: string\r\n  last_ua: string\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerResponseVote {\r\n  down: number\r\n  up: number\r\n}\r\n\r\nexport type QueryParamsType = Record<string | number, any>\r\nexport type ResponseFormat = keyof Omit<Body, 'body' | 'bodyUsed'>\r\n\r\nexport interface FullRequestParams extends Omit<RequestInit, 'body'> {\r\n  /** set parameter to `true` for call `securityWorker` for this request */\r\n  secure?: boolean\r\n  /** request path */\r\n  path: string\r\n  /** content type of request body */\r\n  type?: ContentType\r\n  /** query params */\r\n  query?: QueryParamsType\r\n  /** format of response (i.e. response.json() -> format: \"json\") */\r\n  format?: ResponseFormat\r\n  /** request body */\r\n  body?: unknown\r\n  /** base url */\r\n  baseUrl?: string\r\n  /** request cancellation token */\r\n  cancelToken?: CancelToken\r\n}\r\n\r\nexport type RequestParams = Omit<FullRequestParams, 'body' | 'method' | 'query' | 'path'>\r\n\r\nexport interface ApiConfig<SecurityDataType = unknown> {\r\n  baseUrl?: string\r\n  baseApiParams?: Omit<RequestParams, 'baseUrl' | 'cancelToken' | 'signal'>\r\n  securityWorker?: (\r\n    securityData: SecurityDataType | null,\r\n  ) => Promise<RequestParams | void> | RequestParams | void\r\n  customFetch?: typeof fetch\r\n}\r\n\r\nexport interface HttpResponse<D extends unknown, E extends unknown = unknown> extends Response {\r\n  data: D\r\n  error: E\r\n}\r\n\r\ntype CancelToken = Symbol | string | number\r\n\r\nexport enum ContentType {\r\n  Json = 'application/json',\r\n  FormData = 'multipart/form-data',\r\n  UrlEncoded = 'application/x-www-form-urlencoded',\r\n  Text = 'text/plain',\r\n}\r\n\r\nexport class HttpClient<SecurityDataType = unknown> {\r\n  public baseUrl: string = '/api/v2'\r\n  private securityData: SecurityDataType | null = null\r\n  private securityWorker?: ApiConfig<SecurityDataType>['securityWorker']\r\n  private abortControllers = new Map<CancelToken, AbortController>()\r\n  private customFetch = (...fetchParams: Parameters<typeof fetch>) => fetch(...fetchParams)\r\n\r\n  private baseApiParams: RequestParams = {\r\n    credentials: 'same-origin',\r\n    headers: {},\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n  }\r\n\r\n  constructor(apiConfig: ApiConfig<SecurityDataType> = {}) {\r\n    Object.assign(this, apiConfig)\r\n  }\r\n\r\n  public setSecurityData = (data: SecurityDataType | null) => {\r\n    this.securityData = data\r\n  }\r\n\r\n  protected encodeQueryParam(key: string, value: any) {\r\n    const encodedKey = encodeURIComponent(key)\r\n    return `${encodedKey}=${encodeURIComponent(typeof value === 'number' ? value : `${value}`)}`\r\n  }\r\n\r\n  protected addQueryParam(query: QueryParamsType, key: string) {\r\n    return this.encodeQueryParam(key, query[key])\r\n  }\r\n\r\n  protected addArrayQueryParam(query: QueryParamsType, key: string) {\r\n    const value = query[key]\r\n    return value.map((v: any) => this.encodeQueryParam(key, v)).join('&')\r\n  }\r\n\r\n  protected toQueryString(rawQuery?: QueryParamsType): string {\r\n    const query = rawQuery || {}\r\n    const keys = Object.keys(query).filter((key) => 'undefined' !== typeof query[key])\r\n    return keys\r\n      .map((key) =>\r\n        Array.isArray(query[key])\r\n          ? this.addArrayQueryParam(query, key)\r\n          : this.addQueryParam(query, key),\r\n      )\r\n      .join('&')\r\n  }\r\n\r\n  protected addQueryParams(rawQuery?: QueryParamsType): string {\r\n    const queryString = this.toQueryString(rawQuery)\r\n    return queryString ? `?${queryString}` : ''\r\n  }\r\n\r\n  private contentFormatters: Record<ContentType, (input: any) => any> = {\r\n    [ContentType.Json]: (input: any) =>\r\n      input !== null && (typeof input === 'object' || typeof input === 'string')\r\n        ? JSON.stringify(input)\r\n        : input,\r\n    [ContentType.Text]: (input: any) =>\r\n      input !== null && typeof input !== 'string' ? JSON.stringify(input) : input,\r\n    [ContentType.FormData]: (input: any) =>\r\n      Object.keys(input || {}).reduce((formData, key) => {\r\n        const property = input[key]\r\n        formData.append(\r\n          key,\r\n          property instanceof Blob\r\n            ? property\r\n            : typeof property === 'object' && property !== null\r\n            ? JSON.stringify(property)\r\n            : `${property}`,\r\n        )\r\n        return formData\r\n      }, new FormData()),\r\n    [ContentType.UrlEncoded]: (input: any) => this.toQueryString(input),\r\n  }\r\n\r\n  protected mergeRequestParams(params1: RequestParams, params2?: RequestParams): RequestParams {\r\n    return {\r\n      ...this.baseApiParams,\r\n      ...params1,\r\n      ...(params2 || {}),\r\n      headers: {\r\n        ...(this.baseApiParams.headers || {}),\r\n        ...(params1.headers || {}),\r\n        ...((params2 && params2.headers) || {}),\r\n      },\r\n    }\r\n  }\r\n\r\n  protected createAbortSignal = (cancelToken: CancelToken): AbortSignal | undefined => {\r\n    if (this.abortControllers.has(cancelToken)) {\r\n      const abortController = this.abortControllers.get(cancelToken)\r\n      if (abortController) {\r\n        return abortController.signal\r\n      }\r\n      return void 0\r\n    }\r\n\r\n    const abortController = new AbortController()\r\n    this.abortControllers.set(cancelToken, abortController)\r\n    return abortController.signal\r\n  }\r\n\r\n  public abortRequest = (cancelToken: CancelToken) => {\r\n    const abortController = this.abortControllers.get(cancelToken)\r\n\r\n    if (abortController) {\r\n      abortController.abort()\r\n      this.abortControllers.delete(cancelToken)\r\n    }\r\n  }\r\n\r\n  public request = async <T = any, E = any>({\r\n    body,\r\n    secure,\r\n    path,\r\n    type,\r\n    query,\r\n    format,\r\n    baseUrl,\r\n    cancelToken,\r\n    ...params\r\n  }: FullRequestParams): Promise<HttpResponse<T, E>> => {\r\n    const secureParams =\r\n      ((typeof secure === 'boolean' ? secure : this.baseApiParams.secure) &&\r\n        this.securityWorker &&\r\n        (await this.securityWorker(this.securityData))) ||\r\n      {}\r\n    const requestParams = this.mergeRequestParams(params, secureParams)\r\n    const queryString = query && this.toQueryString(query)\r\n    const payloadFormatter = this.contentFormatters[type || ContentType.Json]\r\n    const responseFormat = format || requestParams.format\r\n\r\n    return this.customFetch(\r\n      `${baseUrl || this.baseUrl || ''}${path}${queryString ? `?${queryString}` : ''}`,\r\n      {\r\n        ...requestParams,\r\n        headers: {\r\n          ...(requestParams.headers || {}),\r\n          ...(type && type !== ContentType.FormData ? { 'Content-Type': type } : {}),\r\n        },\r\n        signal: (cancelToken ? this.createAbortSignal(cancelToken) : requestParams.signal) || null,\r\n        body: typeof body === 'undefined' || body === null ? null : payloadFormatter(body),\r\n      },\r\n    ).then(async (response) => {\r\n      const r = response as HttpResponse<T, E>\r\n      r.data = null as unknown as T\r\n      r.error = null as unknown as E\r\n\r\n      const data = !responseFormat\r\n        ? r\r\n        : await response[responseFormat]()\r\n            .then((data) => {\r\n              if (r.ok) {\r\n                r.data = data\r\n              } else {\r\n                r.error = data\r\n              }\r\n              return r\r\n            })\r\n            .catch((e) => {\r\n              r.error = e\r\n              return r\r\n            })\r\n\r\n      if (cancelToken) {\r\n        this.abortControllers.delete(cancelToken)\r\n      }\r\n\r\n      if (!response.ok) throw data\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @title Artalk API\r\n * @version 2.0\r\n * @license MIT (https://github.com/ArtalkJS/Artalk/blob/master/LICENSE)\r\n * @baseUrl /api/v2\r\n * @contact API Support <artalkjs@gmail.com> (https://artalk.js.org)\r\n *\r\n * Artalk is a modern comment system based on Golang.\r\n */\r\nexport class Api<SecurityDataType extends unknown> extends HttpClient<SecurityDataType> {\r\n  auth = {\r\n    /**\r\n * @description Login by email with verify code (Need send email verify code first) or password\r\n *\r\n * @tags Auth\r\n * @name LoginByEmail\r\n * @summary Login by email\r\n * @request POST:/auth/email/login\r\n * @response `200` `HandlerResponseUserLogin` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    loginByEmail: (data: HandlerRequestAuthEmailLogin, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserLogin,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/email/login`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Register by email and verify code (if user exists, will update user, like forget password. Need send email verify code first)\r\n *\r\n * @tags Auth\r\n * @name RegisterByEmail\r\n * @summary Register by email\r\n * @request POST:/auth/email/register\r\n * @response `200` `HandlerResponseUserLogin` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    registerByEmail: (data: HandlerRequestAuthEmailRegister, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserLogin,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/email/register`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Send email including verify code to user\r\n *\r\n * @tags Auth\r\n * @name SendVerifyEmail\r\n * @summary Send verify email\r\n * @request POST:/auth/email/send\r\n * @response `200` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    sendVerifyEmail: (data: HandlerRequestAuthEmailSend, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap & {\r\n          msg?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/email/send`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get all users with same email, if there are more than one user with same email, need merge\r\n *\r\n * @tags Auth\r\n * @name CheckDataMerge\r\n * @summary Check data merge\r\n * @request GET:/auth/merge\r\n * @secure\r\n * @response `200` `HandlerResponseAuthDataMergeCheck` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    checkDataMerge: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseAuthDataMergeCheck,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/merge`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description This function is to solve the problem of multiple users with the same email address, should be called after user login and then check, and perform data merge.\r\n *\r\n * @tags Auth\r\n * @name ApplyDataMerge\r\n * @summary Apply data merge\r\n * @request POST:/auth/merge\r\n * @secure\r\n * @response `200` `HandlerResponseAuthDataMergeApply` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    applyDataMerge: (data: HandlerRequestAuthDataMergeApply, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseAuthDataMergeApply,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/merge`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  cache = {\r\n    /**\r\n * @description Flush all cache on the server\r\n *\r\n * @tags Cache\r\n * @name FlushCache\r\n * @summary Flush Cache\r\n * @request POST:/cache/flush\r\n * @secure\r\n * @response `200` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    flushCache: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap & {\r\n          msg?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/cache/flush`,\r\n        method: 'POST',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Cache warming helps you to pre-load the cache to improve the performance of the first request\r\n *\r\n * @tags Cache\r\n * @name WarmUpCache\r\n * @summary Warm-Up Cache\r\n * @request POST:/cache/warm_up\r\n * @secure\r\n * @response `200` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    warmUpCache: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap & {\r\n          msg?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/cache/warm_up`,\r\n        method: 'POST',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  captcha = {\r\n    /**\r\n * @description Get a base64 encoded captcha image or a HTML page to verify for user\r\n *\r\n * @tags Captcha\r\n * @name GetCaptcha\r\n * @summary Get Captcha\r\n * @request GET:/captcha\r\n * @response `200` `HandlerResponseCaptchaGet` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getCaptcha: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCaptchaGet,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/captcha`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get the status of the user's captcha verification\r\n     *\r\n     * @tags Captcha\r\n     * @name GetCaptchaStatus\r\n     * @summary Get Captcha Status\r\n     * @request GET:/captcha/status\r\n     * @response `200` `HandlerResponseCaptchaStatus` OK\r\n     */\r\n    getCaptchaStatus: (params: RequestParams = {}) =>\r\n      this.request<HandlerResponseCaptchaStatus, any>({\r\n        path: `/captcha/status`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Verify user enters correct captcha code\r\n *\r\n * @tags Captcha\r\n * @name VerifyCaptcha\r\n * @summary Verify Captcha\r\n * @request POST:/captcha/verify\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    img_data?: string,\r\n\r\n})` Forbidden\r\n */\r\n    verifyCaptcha: (data: HandlerParamsCaptchaVerify, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          img_data?: string\r\n        }\r\n      >({\r\n        path: `/captcha/verify`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  comments = {\r\n    /**\r\n * @description Get a list of comments by some conditions\r\n *\r\n * @tags Comment\r\n * @name GetComments\r\n * @summary Get Comment List\r\n * @request GET:/comments\r\n * @secure\r\n * @response `200` `HandlerResponseCommentList` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getComments: (\r\n      query: {\r\n        /** The user email */\r\n        email?: string\r\n        /** Enable flat_mode */\r\n        flat_mode?: boolean\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** The username */\r\n        name?: string\r\n        /** The offset for pagination */\r\n        offset?: number\r\n        /** The comment page_key */\r\n        page_key: string\r\n        /** The scope of comments */\r\n        scope?: 'page' | 'user' | 'site'\r\n        /** Search keywords */\r\n        search?: string\r\n        /** The site name of your content scope */\r\n        site_name?: string\r\n        /** Sort by condition */\r\n        sort_by?: 'date_asc' | 'date_desc' | 'vote'\r\n        /** Message center show type */\r\n        type?: 'all' | 'mentions' | 'mine' | 'pending'\r\n        /** Only show comments by admin */\r\n        view_only_admin?: boolean\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseCommentList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Create a new comment\r\n *\r\n * @tags Comment\r\n * @name CreateComment\r\n * @summary Create Comment\r\n * @request POST:/comments\r\n * @secure\r\n * @response `200` `HandlerResponseCommentCreate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    createComment: (comment: HandlerParamsCommentCreate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCommentCreate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments`,\r\n        method: 'POST',\r\n        body: comment,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get the detail of a comment by comment id\r\n *\r\n * @tags Comment\r\n * @name GetComment\r\n * @summary Get a comment\r\n * @request GET:/comments/{id}\r\n * @response `200` `HandlerResponseCommentGet` OK\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getComment: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCommentGet,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments/${id}`,\r\n        method: 'GET',\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Update a specific comment\r\n *\r\n * @tags Comment\r\n * @name UpdateComment\r\n * @summary Update Comment\r\n * @request PUT:/comments/{id}\r\n * @secure\r\n * @response `200` `HandlerResponseCommentUpdate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    updateComment: (id: number, comment: HandlerParamsCommentUpdate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCommentUpdate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments/${id}`,\r\n        method: 'PUT',\r\n        body: comment,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific comment\r\n *\r\n * @tags Comment\r\n * @name DeleteComment\r\n * @summary Delete Comment\r\n * @request DELETE:/comments/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deleteComment: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  conf = {\r\n    /**\r\n     * @description Get System Configs for UI\r\n     *\r\n     * @tags System\r\n     * @name Conf\r\n     * @summary Get System Configs\r\n     * @request GET:/conf\r\n     * @response `200` `CommonConfData` OK\r\n     */\r\n    conf: (params: RequestParams = {}) =>\r\n      this.request<CommonConfData, any>({\r\n        path: `/conf`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get social login providers\r\n *\r\n * @tags System\r\n * @name GetSocialLoginProviders\r\n * @summary Get Social Login Providers\r\n * @request GET:/conf/auth/providers\r\n * @response `200` `HandlerResponseConfAuthProviders` OK\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n */\r\n    getSocialLoginProviders: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseConfAuthProviders,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/conf/auth/providers`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get Domain Info\r\n     *\r\n     * @tags System\r\n     * @name GetDomain\r\n     * @summary Get Domain Info\r\n     * @request GET:/conf/domain\r\n     * @response `200` `HandlerResponseConfDomain` OK\r\n     */\r\n    getDomain: (\r\n      query?: {\r\n        /** Domain URL */\r\n        url?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<HandlerResponseConfDomain, any>({\r\n        path: `/conf/domain`,\r\n        method: 'GET',\r\n        query: query,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  notifies = {\r\n    /**\r\n * @description Get a list of notifies for user\r\n *\r\n * @tags Notify\r\n * @name GetNotifies\r\n * @summary Get Notifies\r\n * @request GET:/notifies\r\n * @response `200` `HandlerResponseNotifyList` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getNotifies: (\r\n      query: {\r\n        /** The user email */\r\n        email: string\r\n        /** The user name */\r\n        name: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseNotifyList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/notifies`,\r\n        method: 'GET',\r\n        query: query,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Mark all notifies as read for user\r\n *\r\n * @tags Notify\r\n * @name MarkAllNotifyRead\r\n * @summary Mark All Notifies as Read\r\n * @request POST:/notifies/read\r\n * @response `200` `HandlerMap` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    markAllNotifyRead: (options: HandlerParamsNotifyReadAll, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/notifies/read`,\r\n        method: 'POST',\r\n        body: options,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Mark specific notification as read for user\r\n *\r\n * @tags Notify\r\n * @name MarkNotifyRead\r\n * @summary Mark Notify as Read\r\n * @request POST:/notifies/{comment_id}/{notify_key}\r\n * @response `200` `HandlerMap` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    markNotifyRead: (commentId: number, notifyKey: string, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/notifies/${commentId}/${notifyKey}`,\r\n        method: 'POST',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  pages = {\r\n    /**\r\n * @description Get a list of pages by some conditions\r\n *\r\n * @tags Page\r\n * @name GetPages\r\n * @summary Get Page List\r\n * @request GET:/pages\r\n * @secure\r\n * @response `200` `HandlerResponsePageList` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    getPages: (\r\n      query?: {\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** The offset for pagination */\r\n        offset?: number\r\n        /** The site name of your content scope */\r\n        site_name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponsePageList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Fetch the data of all pages\r\n *\r\n * @tags Page\r\n * @name FetchAllPages\r\n * @summary Fetch All Pages Data\r\n * @request POST:/pages/fetch\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    fetchAllPages: (options: HandlerParamsPageFetchAll, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/fetch`,\r\n        method: 'POST',\r\n        body: options,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get the status of the task of fetching all pages\r\n     *\r\n     * @tags Page\r\n     * @name GetPageFetchStatus\r\n     * @summary Get Pages Fetch Status\r\n     * @request GET:/pages/fetch/status\r\n     * @secure\r\n     * @response `200` `HandlerResponsePageFetchStatus` OK\r\n     */\r\n    getPageFetchStatus: (params: RequestParams = {}) =>\r\n      this.request<HandlerResponsePageFetchStatus, any>({\r\n        path: `/pages/fetch/status`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Increase and get the number of page views\r\n     *\r\n     * @tags Page\r\n     * @name LogPv\r\n     * @summary Increase Page Views (PV)\r\n     * @request POST:/pages/pv\r\n     * @response `200` `HandlerResponsePagePV` OK\r\n     */\r\n    logPv: (page: HandlerParamsPagePV, params: RequestParams = {}) =>\r\n      this.request<HandlerResponsePagePV, any>({\r\n        path: `/pages/pv`,\r\n        method: 'POST',\r\n        body: page,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Update a specific page\r\n *\r\n * @tags Page\r\n * @name UpdatePage\r\n * @summary Update Page\r\n * @request PUT:/pages/{id}\r\n * @secure\r\n * @response `200` `HandlerResponsePageUpdate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    updatePage: (id: number, page: HandlerParamsPageUpdate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponsePageUpdate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/${id}`,\r\n        method: 'PUT',\r\n        body: page,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific page\r\n *\r\n * @tags Page\r\n * @name DeletePage\r\n * @summary Delete Page\r\n * @request DELETE:/pages/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deletePage: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Fetch the data of a specific page\r\n *\r\n * @tags Page\r\n * @name FetchPage\r\n * @summary Fetch Page Data\r\n * @request POST:/pages/{id}/fetch\r\n * @secure\r\n * @response `200` `HandlerResponsePageFetch` OK\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    fetchPage: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponsePageFetch,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/${id}/fetch`,\r\n        method: 'POST',\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  sendEmail = {\r\n    /**\r\n * @description Send an email to test the email sender\r\n *\r\n * @tags System\r\n * @name SendEmail\r\n * @summary Send Email\r\n * @request POST:/send_email\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `HandlerMap` Internal Server Error\r\n */\r\n    sendEmail: (email: HandlerParamsEmailSend, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        | (HandlerMap & {\r\n            msg?: string\r\n          })\r\n        | HandlerMap\r\n      >({\r\n        path: `/send_email`,\r\n        method: 'POST',\r\n        body: email,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  settings = {\r\n    /**\r\n * @description Get settings from app config file\r\n *\r\n * @tags System\r\n * @name GetSettings\r\n * @summary Get Settings\r\n * @request GET:/settings\r\n * @secure\r\n * @response `200` `HandlerResponseSettingGet` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getSettings: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseSettingGet,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/settings`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Apply settings and restart the server\r\n *\r\n * @tags System\r\n * @name ApplySettings\r\n * @summary Save and apply Settings\r\n * @request PUT:/settings\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    applySettings: (settings: HandlerParamsSettingApply, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/settings`,\r\n        method: 'PUT',\r\n        body: settings,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get config templates in different languages for rendering the settings page in the frontend\r\n     *\r\n     * @tags System\r\n     * @name GetSettingsTemplate\r\n     * @summary Get Settings Template\r\n     * @request GET:/settings/template/{locale}\r\n     * @secure\r\n     * @response `200` `HandlerResponseSettingTemplate` OK\r\n     */\r\n    getSettingsTemplate: (locale: string, params: RequestParams = {}) =>\r\n      this.request<HandlerResponseSettingTemplate, any>({\r\n        path: `/settings/template/${locale}`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  sites = {\r\n    /**\r\n     * @description Get a list of sites by some conditions\r\n     *\r\n     * @tags Site\r\n     * @name GetSites\r\n     * @summary Get Site List\r\n     * @request GET:/sites\r\n     * @secure\r\n     * @response `200` `HandlerResponseSiteList` OK\r\n     */\r\n    getSites: (params: RequestParams = {}) =>\r\n      this.request<HandlerResponseSiteList, any>({\r\n        path: `/sites`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Create a new site\r\n *\r\n * @tags Site\r\n * @name CreateSite\r\n * @summary Create Site\r\n * @request POST:/sites\r\n * @secure\r\n * @response `200` `HandlerResponseSiteCreate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    createSite: (site: HandlerParamsSiteCreate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseSiteCreate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/sites`,\r\n        method: 'POST',\r\n        body: site,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Update a specific site\r\n     *\r\n     * @tags Site\r\n     * @name UpdateSite\r\n     * @summary Update Site\r\n     * @request PUT:/sites/{id}\r\n     * @secure\r\n     * @response `200` `HandlerResponseSiteUpdate` OK\r\n     */\r\n    updateSite: (id: number, site: HandlerParamsSiteUpdate, params: RequestParams = {}) =>\r\n      this.request<HandlerResponseSiteUpdate, any>({\r\n        path: `/sites/${id}`,\r\n        method: 'PUT',\r\n        body: site,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific site\r\n *\r\n * @tags Site\r\n * @name DeleteSite\r\n * @summary Site Delete\r\n * @request DELETE:/sites/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deleteSite: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/sites/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  stats = {\r\n    /**\r\n * @description Get the statistics of various data analysis\r\n *\r\n * @tags Statistic\r\n * @name GetStats\r\n * @summary Statistic\r\n * @request GET:/stats/{type}\r\n * @response `200` `CommonJSONResult` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getStats: (\r\n      type:\r\n        | 'latest_comments'\r\n        | 'latest_pages'\r\n        | 'pv_most_pages'\r\n        | 'comment_most_pages'\r\n        | 'page_pv'\r\n        | 'site_pv'\r\n        | 'page_comment'\r\n        | 'site_comment'\r\n        | 'rand_comments'\r\n        | 'rand_pages',\r\n      query?: {\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** multiple page keys separated by commas */\r\n        page_keys?: string\r\n        /** The site name of your content scope */\r\n        site_name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        CommonJSONResult,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/stats/${type}`,\r\n        method: 'GET',\r\n        query: query,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  transfer = {\r\n    /**\r\n * @description Export data from Artalk\r\n *\r\n * @tags Transfer\r\n * @name ExportArtrans\r\n * @summary Export Artrans\r\n * @request GET:/transfer/export\r\n * @secure\r\n * @response `200` `HandlerResponseTransferExport` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    exportArtrans: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseTransferExport,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/transfer/export`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Import data to Artalk\r\n     *\r\n     * @tags Transfer\r\n     * @name ImportArtrans\r\n     * @summary Import Artrans\r\n     * @request POST:/transfer/import\r\n     * @secure\r\n     * @response `200` `string` OK\r\n     */\r\n    importArtrans: (data: HandlerParamsTransferImport, params: RequestParams = {}) =>\r\n      this.request<string, any>({\r\n        path: `/transfer/import`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Upload a file to prepare to import\r\n *\r\n * @tags Transfer\r\n * @name UploadArtrans\r\n * @summary Upload Artrans\r\n * @request POST:/transfer/upload\r\n * @secure\r\n * @response `200` `(HandlerResponseTransferUpload & {\r\n    filename?: string,\r\n\r\n})` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    uploadArtrans: (\r\n      data: {\r\n        /**\r\n         * Upload file in preparation for import task\r\n         * @format binary\r\n         */\r\n        file: File\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseTransferUpload & {\r\n          filename?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/transfer/upload`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.FormData,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  upload = {\r\n    /**\r\n * @description Upload file from this endpoint\r\n *\r\n * @tags Upload\r\n * @name Upload\r\n * @summary Upload\r\n * @request POST:/upload\r\n * @secure\r\n * @response `200` `HandlerResponseUpload` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    upload: (\r\n      data: {\r\n        /**\r\n         * Upload file\r\n         * @format binary\r\n         */\r\n        file: File\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseUpload,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/upload`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.FormData,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  user = {\r\n    /**\r\n * @description Get user info to prepare for login or check current user status\r\n *\r\n * @tags Auth\r\n * @name GetUser\r\n * @summary Get User Info\r\n * @request GET:/user\r\n * @secure\r\n * @response `200` `HandlerResponseUserInfo` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n */\r\n    getUser: (\r\n      query?: {\r\n        /** The user email */\r\n        email?: string\r\n        /** The username */\r\n        name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseUserInfo,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/user`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Login user by name or email\r\n *\r\n * @tags Auth\r\n * @name Login\r\n * @summary Get Access Token\r\n * @request POST:/user/access_token\r\n * @response `200` `HandlerResponseUserLogin` OK\r\n * @response `400` `(HandlerMap & {\r\n    data?: {\r\n    need_name_select?: (string)[],\r\n\r\n},\r\n    msg?: string,\r\n\r\n})` Multiple users with the same email address are matched\r\n * @response `401` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Unauthorized\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    login: (user: HandlerParamsUserLogin, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserLogin,\r\n        | (HandlerMap & {\r\n            data?: {\r\n              need_name_select?: string[]\r\n            }\r\n            msg?: string\r\n          })\r\n        | (HandlerMap & {\r\n            msg?: string\r\n          })\r\n      >({\r\n        path: `/user/access_token`,\r\n        method: 'POST',\r\n        body: user,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get user login status by header Authorization\r\n     *\r\n     * @tags Auth\r\n     * @name GetUserStatus\r\n     * @summary Get Login Status\r\n     * @request GET:/user/status\r\n     * @secure\r\n     * @response `200` `HandlerResponseUserStatus` OK\r\n     */\r\n    getUserStatus: (\r\n      query?: {\r\n        /** The user email */\r\n        email?: string\r\n        /** The username */\r\n        name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<HandlerResponseUserStatus, any>({\r\n        path: `/user/status`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  users = {\r\n    /**\r\n * @description Create a new user\r\n *\r\n * @tags User\r\n * @name CreateUser\r\n * @summary Create User\r\n * @request POST:/users\r\n * @secure\r\n * @response `200` `HandlerResponseUserCreate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    createUser: (user: HandlerParamsUserCreate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserCreate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users`,\r\n        method: 'POST',\r\n        body: user,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Update a specific user\r\n *\r\n * @tags User\r\n * @name UpdateUser\r\n * @summary Update User\r\n * @request PUT:/users/{id}\r\n * @secure\r\n * @response `200` `HandlerResponseUserUpdate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    updateUser: (id: number, user: HandlerParamsUserUpdate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserUpdate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users/${id}`,\r\n        method: 'PUT',\r\n        body: user,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific user\r\n *\r\n * @tags User\r\n * @name DeleteUser\r\n * @summary Delete User\r\n * @request DELETE:/users/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deleteUser: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get a list of users by some conditions\r\n *\r\n * @tags User\r\n * @name GetUsers\r\n * @summary Get User List\r\n * @request GET:/users/{type}\r\n * @secure\r\n * @response `200` `HandlerResponseAdminUserList` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    getUsers: (\r\n      type?: 'all' | 'admin' | 'in_conf',\r\n      query?: {\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** The offset for pagination */\r\n        offset?: number\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseAdminUserList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users/${type}`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  version = {\r\n    /**\r\n     * @description Get the version of Artalk\r\n     *\r\n     * @tags System\r\n     * @name GetVersion\r\n     * @summary Get Version Info\r\n     * @request GET:/version\r\n     * @response `200` `CommonApiVersionData` OK\r\n     */\r\n    getVersion: (params: RequestParams = {}) =>\r\n      this.request<CommonApiVersionData, any>({\r\n        path: `/version`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  votes = {\r\n    /**\r\n * @description Sync the number of votes in the `comments` or `pages` data tables to keep them the same as the `votes` table\r\n *\r\n * @tags Vote\r\n * @name SyncVotes\r\n * @summary Sync Vote Data\r\n * @request POST:/votes/sync\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    syncVotes: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/votes/sync`,\r\n        method: 'POST',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Vote for a specific comment or page\r\n *\r\n * @tags Vote\r\n * @name Vote\r\n * @summary Vote\r\n * @request POST:/votes/{type}/{target_id}\r\n * @response `200` `HandlerResponseVote` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    vote: (\r\n      type: 'comment_up' | 'comment_down' | 'page_up' | 'page_down',\r\n      targetId: number,\r\n      vote: HandlerParamsVote,\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseVote,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/votes/${type}/${targetId}`,\r\n        method: 'POST',\r\n        body: vote,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n}\r\n","import { ApiOptions } from './options'\r\nimport { FetchError } from '@/types'\r\n\r\nexport const Fetch = async (\r\n  opts: ApiOptions,\r\n  input: string | URL | Request,\r\n  init?: RequestInit,\r\n) => {\r\n  const apiToken = opts.getApiToken && opts.getApiToken()\r\n\r\n  const headers = new Headers({\r\n    Authorization: apiToken ? `Bearer ${apiToken}` : '',\r\n    ...init?.headers,\r\n  })\r\n\r\n  if (!headers.get('Authorization')) headers.delete('Authorization')\r\n\r\n  // 请求操作\r\n  const resp = await fetch(input, {\r\n    ...init,\r\n    headers,\r\n  })\r\n\r\n  if (!resp.ok) {\r\n    // Deserialize response body (if it is JSON, otherwise returns `{}`)\r\n    const json: any = (await resp.json().catch(() => {})) || {}\r\n\r\n    let retry = false\r\n    opts.handlers &&\r\n      (await opts.handlers.get().reduce(async (promise, item) => {\r\n        await promise\r\n        if (json[item.action] === true) {\r\n          await item.handler(json)\r\n          retry = true\r\n        }\r\n      }, Promise.resolve()))\r\n\r\n    if (retry) return Fetch(opts, input, init)\r\n    throw createError(resp.status, json)\r\n  }\r\n\r\n  return resp\r\n}\r\n\r\nexport class FetchException extends Error implements FetchError {\r\n  code: number = 0\r\n  message: string = 'fetch error'\r\n  data?: any\r\n}\r\n\r\nfunction createError(code: number, data: any): FetchException {\r\n  const err = new FetchException()\r\n  err.message = data.msg || data.message || 'fetch error'\r\n  err.code = code\r\n  err.data = data\r\n  console.error(err)\r\n  return err\r\n}\r\n","import { ApiOptions } from './options'\r\nimport { Api as ApiV2 } from './v2'\r\nimport { Fetch } from './fetch'\r\n\r\nexport * from './options'\r\nexport * from './handler'\r\n\r\nexport class Api extends ApiV2<void> {\r\n  private _opts: ApiOptions\r\n\r\n  constructor(opts: ApiOptions) {\r\n    super({\r\n      baseUrl: opts.baseURL,\r\n      customFetch: (input, init) => Fetch(opts, input, init),\r\n    })\r\n\r\n    this._opts = opts\r\n  }\r\n\r\n  /**\r\n   * Get user info as params for request\r\n   *\r\n   * @returns Request params with user info\r\n   */\r\n  getUserFields() {\r\n    const user = this._opts.userInfo\r\n    if (!user?.name || !user?.email) return undefined\r\n    return { name: user.name, email: user.email }\r\n  }\r\n}\r\n","/**\n * marked v12.0.2 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            // precede setext continuation with 4 spaces so it isn't a setext\n            let text = cap[0].replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1');\n            text = rtrim(text.replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (const header of headers) {\n            item.header.push({\n                text: header,\n                tokens: this.lexer.inline(header)\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map(cell => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell)\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, / {4}/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}\\\\p{S}';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(lang)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","'use strict';\n\nvar escapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nvar unescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\nvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\nvar runescaped = /[&<>\"']/g;\n\nfunction escapeHtmlChar (match) {\n  return escapes[match];\n}\nfunction unescapeHtmlChar (match) {\n  return unescapes[match];\n}\n\nfunction escapeHtml (text) {\n  return text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n}\n\nfunction unescapeHtml (html) {\n  return html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n}\n\nescapeHtml.options = unescapeHtml.options = {};\n\nmodule.exports = {\n  encode: escapeHtml,\n  escape: escapeHtml,\n  decode: unescapeHtml,\n  unescape: unescapeHtml,\n  version: '1.0.0-browser'\n};\n","'use strict';\n\nfunction assignment (result) {\n  var stack = Array.prototype.slice.call(arguments, 1);\n  var item;\n  var key;\n  while (stack.length) {\n    item = stack.shift();\n    for (key in item) {\n      if (item.hasOwnProperty(key)) {\n        if (Object.prototype.toString.call(result[key]) === '[object Object]') {\n          result[key] = assignment(result[key], item[key]);\n        } else {\n          result[key] = item[key];\n        }\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = assignment;\n","'use strict';\n\nmodule.exports = function lowercase (string) {\n  return typeof string === 'string' ? string.toLowerCase() : string;\n};\n","'use strict';\n\nfunction toMap (list) {\n  return list.reduce(asKey, {});\n}\n\nfunction asKey (accumulator, item) {\n  accumulator[item] = true;\n  return accumulator;\n}\n\nmodule.exports = toMap;\n","'use strict';\n\nvar toMap = require('./toMap');\nvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\nmodule.exports = {\n  uris: toMap(uris) // attributes that have an href and hence need to be sanitized\n};\n","'use strict';\n\nvar toMap = require('./toMap');\nvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\nmodule.exports = {\n  voids: toMap(voids)\n};\n","'use strict';\n\nvar he = require('he');\nvar lowercase = require('./lowercase');\nvar attributes = require('./attributes');\nvar elements = require('./elements');\nvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\nvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\nvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\nvar rtag = /^</;\nvar rtagend = /^<\\s*\\//;\n\nfunction createStack () {\n  var stack = [];\n  stack.lastItem = function lastItem () {\n    return stack[stack.length - 1];\n  };\n  return stack;\n}\n\nfunction parser (html, handler) {\n  var stack = createStack();\n  var last = html;\n  var chars;\n\n  while (html) {\n    parsePart();\n  }\n  parseEndTag(); // clean up any remaining tags\n\n  function parsePart () {\n    chars = true;\n    parseTag();\n\n    var same = html === last;\n    last = html;\n\n    if (same) { // discard, because it's invalid\n      html = '';\n    }\n  }\n\n  function parseTag () {\n    if (html.substr(0, 4) === '<!--') { // comments\n      parseComment();\n    } else if (rtagend.test(html)) {\n      parseEdge(rend, parseEndTag);\n    } else if (rtag.test(html)) {\n      parseEdge(rstart, parseStartTag);\n    }\n    parseTagDecode();\n  }\n\n  function parseEdge (regex, parser) {\n    var match = html.match(regex);\n    if (match) {\n      html = html.substring(match[0].length);\n      match[0].replace(regex, parser);\n      chars = false;\n    }\n  }\n\n  function parseComment () {\n    var index = html.indexOf('-->');\n    if (index >= 0) {\n      if (handler.comment) {\n        handler.comment(html.substring(4, index));\n      }\n      html = html.substring(index + 3);\n      chars = false;\n    }\n  }\n\n  function parseTagDecode () {\n    if (!chars) {\n      return;\n    }\n    var text;\n    var index = html.indexOf('<');\n    if (index >= 0) {\n      text = html.substring(0, index);\n      html = html.substring(index);\n    } else {\n      text = html;\n      html = '';\n    }\n    if (handler.chars) {\n      handler.chars(text);\n    }\n  }\n\n  function parseStartTag (tag, tagName, rest, unary) {\n    var attrs = {};\n    var low = lowercase(tagName);\n    var u = elements.voids[low] || !!unary;\n\n    rest.replace(rattrs, attrReplacer);\n\n    if (!u) {\n      stack.push(low);\n    }\n    if (handler.start) {\n      handler.start(low, attrs, u);\n    }\n\n    function attrReplacer (match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n      if (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n        attrs[name] = void 0; // attribute is like <button disabled></button>\n      } else {\n        attrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n      }\n    }\n  }\n\n  function parseEndTag (tag, tagName) {\n    var i;\n    var pos = 0;\n    var low = lowercase(tagName);\n    if (low) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos] === low) {\n          break; // find the closest opened tag of the same type\n        }\n      }\n    }\n    if (pos >= 0) {\n      for (i = stack.length - 1; i >= pos; i--) {\n        if (handler.end) { // close all the open elements, up the stack\n          handler.end(stack[i]);\n        }\n      }\n      stack.length = pos;\n    }\n  }\n}\n\nmodule.exports = parser;\n","'use strict';\n\nvar he = require('he');\nvar lowercase = require('./lowercase');\nvar attributes = require('./attributes');\nvar elements = require('./elements');\n\nfunction sanitizer (buffer, options) {\n  var last;\n  var context;\n  var o = options || {};\n\n  reset();\n\n  return {\n    start: start,\n    end: end,\n    chars: chars\n  };\n\n  function out (value) {\n    buffer.push(value);\n  }\n\n  function start (tag, attrs, unary) {\n    var low = lowercase(tag);\n\n    if (context.ignoring) {\n      ignore(low); return;\n    }\n    if ((o.allowedTags || []).indexOf(low) === -1) {\n      ignore(low); return;\n    }\n    if (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n      ignore(low); return;\n    }\n\n    out('<');\n    out(low);\n    Object.keys(attrs).forEach(parse);\n    out(unary ? '/>' : '>');\n\n    function parse (key) {\n      var value = attrs[key];\n      var classesOk = (o.allowedClasses || {})[low] || [];\n      var attrsOk = (o.allowedAttributes || {})[low] || [];\n      var valid;\n      var lkey = lowercase(key);\n      if (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n        value = value.split(' ').filter(isValidClass).join(' ').trim();\n        valid = value.length;\n      } else {\n        valid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n      }\n      if (valid) {\n        out(' ');\n        out(key);\n        if (typeof value === 'string') {\n          out('=\"');\n          out(he.encode(value));\n          out('\"');\n        }\n      }\n      function isValidClass (className) {\n        return classesOk && classesOk.indexOf(className) !== -1;\n      }\n    }\n  }\n\n  function end (tag) {\n    var low = lowercase(tag);\n    var allowed = (o.allowedTags || []).indexOf(low) !== -1;\n    if (allowed) {\n      if (context.ignoring === false) {\n        out('</');\n        out(low);\n        out('>');\n      } else {\n        unignore(low);\n      }\n    } else {\n      unignore(low);\n    }\n  }\n\n  function testUrl (text) {\n    var start = text[0];\n    if (start === '#' || start === '/') {\n      return true;\n    }\n    var colon = text.indexOf(':');\n    if (colon === -1) {\n      return true;\n    }\n    var questionmark = text.indexOf('?');\n    if (questionmark !== -1 && colon > questionmark) {\n      return true;\n    }\n    var hash = text.indexOf('#');\n    if (hash !== -1 && colon > hash) {\n      return true;\n    }\n    return o.allowedSchemes.some(matches);\n\n    function matches (scheme) {\n      return text.indexOf(scheme + ':') === 0;\n    }\n  }\n\n  function chars (text) {\n    if (context.ignoring === false) {\n      out(o.transformText ? o.transformText(text) : text);\n    }\n  }\n\n  function ignore (tag) {\n    if (elements.voids[tag]) {\n      return;\n    }\n    if (context.ignoring === false) {\n      context = { ignoring: tag, depth: 1 };\n    } else if (context.ignoring === tag) {\n      context.depth++;\n    }\n  }\n\n  function unignore (tag) {\n    if (context.ignoring === tag) {\n      if (--context.depth <= 0) {\n        reset();\n      }\n    }\n  }\n\n  function reset () {\n    context = { ignoring: false, depth: 0 };\n  }\n}\n\nmodule.exports = sanitizer;\n","'use strict';\n\nvar he = require('he');\nvar assign = require('assignment');\nvar parser = require('./parser');\nvar sanitizer = require('./sanitizer');\nvar defaults = require('./defaults');\n\nfunction insane (html, options, strict) {\n  var buffer = [];\n  var configuration = strict === true ? options : assign({}, defaults, options);\n  var handler = sanitizer(buffer, configuration);\n\n  parser(html, handler);\n\n  return buffer.join('');\n}\n\ninsane.defaults = defaults;\nmodule.exports = insane;\n","'use strict';\n\nvar defaults = {\n  allowedAttributes: {\n    a: ['href', 'name', 'target', 'title', 'aria-label'],\n    iframe: ['allowfullscreen', 'frameborder', 'src'],\n    img: ['src', 'alt', 'title', 'aria-label']\n  },\n  allowedClasses: {},\n  allowedSchemes: ['http', 'https', 'mailto'],\n  allowedTags: [\n    'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n    'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n    'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n  ],\n  filter: null\n};\n\nmodule.exports = defaults;\n","import insane from 'insane'\r\n\r\nconst insaneOptions = {\r\n  allowedClasses: {},\r\n  // @refer CVE-2018-8495\r\n  // @link https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8495\r\n  // @link https://leucosite.com/Microsoft-Edge-RCE/\r\n  // @link https://medium.com/@knownsec404team/analysis-of-the-security-issues-of-url-scheme-in-pc-from-cve-2018-8495-934478a36756\r\n  allowedSchemes: [\r\n    'http',\r\n    'https',\r\n    'mailto',\r\n    'data', // for support base64 encoded image (安全性有待考虑)\r\n  ],\r\n  allowedTags: [\r\n    'a',\r\n    'abbr',\r\n    'article',\r\n    'b',\r\n    'blockquote',\r\n    'br',\r\n    'caption',\r\n    'code',\r\n    'del',\r\n    'details',\r\n    'div',\r\n    'em',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'hr',\r\n    'i',\r\n    'img',\r\n    'ins',\r\n    'kbd',\r\n    'li',\r\n    'main',\r\n    'mark',\r\n    'ol',\r\n    'p',\r\n    'pre',\r\n    'section',\r\n    'span',\r\n    'strike',\r\n    'strong',\r\n    'sub',\r\n    'summary',\r\n    'sup',\r\n    'table',\r\n    'tbody',\r\n    'td',\r\n    'th',\r\n    'thead',\r\n    'tr',\r\n    'u',\r\n    'ul',\r\n  ],\r\n  allowedAttributes: {\r\n    '*': ['title', 'accesskey'],\r\n    a: ['href', 'name', 'target', 'aria-label', 'rel'],\r\n    img: ['src', 'alt', 'title', 'atk-emoticon', 'aria-label', 'data-src', 'class', 'loading'],\r\n    // for code highlight\r\n    code: ['class'],\r\n    span: ['class', 'style'],\r\n  },\r\n  filter: (node) => {\r\n    // class whitelist\r\n    const allowed = [\r\n      ['code', /^hljs\\W+language-(.*)$/],\r\n      ['span', /^(hljs-.*)$/],\r\n      ['img', /^lazyload$/],\r\n    ]\r\n    allowed.forEach(([tag, reg]) => {\r\n      if (node.tag === tag && !!node.attrs.class && !(reg as RegExp).test(node.attrs.class)) {\r\n        delete node.attrs.class\r\n      }\r\n    })\r\n\r\n    // allow <span> set color sty\r\n    if (\r\n      node.tag === 'span' &&\r\n      !!node.attrs.style &&\r\n      !/^color:(\\W+)?#[0-9a-f]{3,6};?$/i.test(node.attrs.style)\r\n    ) {\r\n      delete node.attrs.style\r\n    }\r\n\r\n    return true\r\n  },\r\n}\r\n\r\nexport function sanitize(content: string): string {\r\n  // @link https://github.com/markedjs/marked/discussions/1232\r\n  // @link https://gist.github.com/lionel-rowe/bb384465ba4e4c81a9c8dada84167225\r\n  return insane(content, insaneOptions)\r\n}\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.hanabi = factory());\n}(this, (function () { 'use strict';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar index$1 = createCommonjsModule(function (module) {\n'use strict';\n\nvar comment = module.exports = function () {\n\treturn new RegExp('(?:' + comment.line().source + ')|(?:' + comment.block().source + ')', 'gm');\n};\n\ncomment.line = function () {\n\treturn /(?:^|\\s)\\/\\/(.+?)$/gm;\n};\n\ncomment.block = function () {\n\treturn /\\/\\*([\\S\\s]*?)\\*\\//gm;\n};\n});\n\nvar defaultColors = ['23AC69', '91C132', 'F19726', 'E8552D', '1AAB8E', 'E1147F', '2980C1', '1BA1E6', '9FA0A0', 'F19726', 'E30B20', 'E30B20', 'A3338B'];\n\nvar index = function (input, ref) {\n  if ( ref === void 0 ) ref = {};\n  var colors = ref.colors; if ( colors === void 0 ) colors = defaultColors;\n\n  var index = 0;\n  var cache = {};\n  var wordRe = /[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af\\u0400-\\u04FF]+|\\w+/;\n  var leftAngleRe = /</;\n\n  var re = new RegExp((\"(\" + (wordRe.source) + \"|\" + (leftAngleRe.source) + \")|(\" + (index$1().source) + \")\"), 'gmi');\n  return input\n  .replace(re, function (m, word, cm) {\n    if (cm) {\n      return toComment(cm)\n    }\n\n    if (word === '<') {\n      return '&lt;'\n    }\n    var color;\n    if (cache[word]) {\n      color = cache[word];\n    } else {\n      color = colors[index];\n      cache[word] = color;\n    }\n\n    var out = \"<span style=\\\"color: #\" + color + \"\\\">\" + word + \"</span>\";\n    index = ++index % colors.length;\n    return out\n  })\n};\n\nfunction toComment(cm) {\n  return (\"<span style=\\\"color: slategray\\\">\" + cm + \"</span>\")\n}\n\nreturn index;\n\n})));\n","import hanabi from 'hanabi'\r\n\r\nexport function renderCode(code: string) {\r\n  return hanabi(code)\r\n}\r\n","import { marked } from 'marked'\r\nimport { renderCode } from './highlight'\r\nimport type { ArtalkConfig } from '@/types'\r\n\r\nexport interface RendererOptions {\r\n  imgLazyLoad: ArtalkConfig['imgLazyLoad']\r\n}\r\n\r\nexport function getRenderer(options: RendererOptions) {\r\n  const renderer = new marked.Renderer()\r\n  renderer.link = markedLinkRenderer(renderer, renderer.link)\r\n  renderer.code = markedCodeRenderer()\r\n  renderer.image = markedImageRenderer(renderer, renderer.image, options)\r\n  return renderer\r\n}\r\n\r\nconst markedLinkRenderer =\r\n  (renderer: any, orgLinkRenderer: (href: string, title: string, text: string) => string) =>\r\n  (href: string, title: string, text: string): string => {\r\n    const getLinkOrigin = (link: string) => {\r\n      try {\r\n        return new URL(link).origin\r\n      } catch {\r\n        return ''\r\n      }\r\n    }\r\n    const isSameOriginLink = getLinkOrigin(href) === window.location.origin\r\n    const html = orgLinkRenderer.call(renderer, href, title, text)\r\n    return html.replace(\r\n      /^<a /,\r\n      `<a target=\"_blank\" ${!isSameOriginLink ? `rel=\"noreferrer noopener nofollow\"` : ''} `,\r\n    )\r\n  }\r\n\r\nconst markedCodeRenderer =\r\n  () =>\r\n  (block: string, lang: string | undefined): string => {\r\n    // Colorize the block only if the language is known to highlight.js\r\n    const realLang = !lang ? 'plaintext' : lang\r\n    let colorized = block\r\n    if ((window as any).hljs) {\r\n      if (realLang && (window as any).hljs.getLanguage(realLang)) {\r\n        colorized = (window as any).hljs.highlight(realLang, block).value\r\n      }\r\n    } else {\r\n      colorized = renderCode(block)\r\n    }\r\n\r\n    return (\r\n      `<pre rel=\"${realLang}\">\\n` +\r\n      `<code class=\"hljs language-${realLang}\">${colorized.replace(/&amp;/g, '&')}</code>\\n` +\r\n      `</pre>`\r\n    )\r\n  }\r\n\r\nconst markedImageRenderer =\r\n  (\r\n    renderer: any,\r\n    orgImageRenderer: (href: string, title: string | null, text: string) => string,\r\n    { imgLazyLoad }: RendererOptions,\r\n  ) =>\r\n  (href: string, title: string | null, text: string): string => {\r\n    const html = orgImageRenderer.call(renderer, href, title, text)\r\n    if (!imgLazyLoad) return html\r\n    if (imgLazyLoad === 'native' || (imgLazyLoad as any) === true)\r\n      return html.replace(/^<img /, '<img class=\"lazyload\" loading=\"lazy\" ')\r\n    if (imgLazyLoad === 'data-src')\r\n      return html.replace(/^<img /, '<img class=\"lazyload\" ').replace('src=', 'data-src=')\r\n    return html\r\n  }\r\n","import { marked as libMarked, MarkedOptions } from 'marked'\r\n\r\nimport { sanitize } from './sanitizer'\r\nimport { renderCode } from './highlight'\r\nimport { getRenderer } from './marked-renderer'\r\nimport type { ArtalkConfig } from '@/types'\r\n\r\ntype Replacer = (raw: string) => string\r\n\r\nlet instance: typeof libMarked | undefined\r\nlet replacers: Replacer[] = []\r\n\r\nconst markedOptions: MarkedOptions = {\r\n  gfm: true,\r\n  breaks: true,\r\n  async: false,\r\n}\r\n\r\n/** Get Marked instance */\r\nexport function getInstance() {\r\n  return instance\r\n}\r\n\r\nexport function setReplacers(arr: Replacer[]) {\r\n  replacers = arr\r\n}\r\n\r\nexport interface MarkedInitOptions {\r\n  markedOptions: ArtalkConfig['markedOptions']\r\n  imgLazyLoad: ArtalkConfig['imgLazyLoad']\r\n}\r\n\r\n/** 初始化 marked */\r\nexport function initMarked(options: MarkedInitOptions) {\r\n  try {\r\n    if (!libMarked.name) return\r\n  } catch {\r\n    return\r\n  }\r\n\r\n  // @see https://github.com/markedjs/marked/blob/4afb228d956a415624c4e5554bb8f25d047676fe/src/Tokenizer.js#L329\r\n  libMarked.setOptions({\r\n    renderer: getRenderer({\r\n      imgLazyLoad: options.imgLazyLoad,\r\n    }),\r\n    ...markedOptions,\r\n    ...options.markedOptions,\r\n  })\r\n\r\n  instance = libMarked\r\n}\r\n\r\n/** 解析 markdown */\r\nexport default function marked(src: string): string {\r\n  let markedContent = getInstance()?.parse(src) as string\r\n  if (!markedContent) {\r\n    // 无 Markdown 模式简单处理\r\n    markedContent = simpleMarked(src)\r\n  }\r\n\r\n  let dest = sanitize(markedContent)\r\n\r\n  // 内容替换器\r\n  replacers.forEach((replacer) => {\r\n    if (typeof replacer === 'function') dest = replacer(dest)\r\n  })\r\n\r\n  return dest\r\n}\r\n\r\nfunction simpleMarked(src: string) {\r\n  return (\r\n    src\r\n      // .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(\r\n        /```\\s*([^]+?.*?[^]+?[^]+?)```/g,\r\n        (_, code) => `<pre><code>${renderCode(code)}</code></pre>`,\r\n      )\r\n      // .replace(/`([^`]+?)`/g, '<code>$1</code>')\r\n      .replace(/!\\[(.*?)\\]\\((.*?)\\)/g, (_, alt, imgSrc) => `<img src=\"${imgSrc}\" alt=\"${alt}\" />`)\r\n      .replace(\r\n        /\\[(.*?)\\]\\((.*?)\\)/g,\r\n        (_, text, link) => `<a href=\"${link}\" target=\"_blank\">${text}</a>`,\r\n      )\r\n      .replace(/\\n/g, '<br>')\r\n  )\r\n}\r\n","/**\r\n * Performs a deep merge of objects and returns new object.\r\n * Does not modify objects (immutable) and merges arrays via concatenation.\r\n *\r\n * @param objects - Objects to merge\r\n * @returns New object with merged key/values\r\n */\r\nexport function mergeDeep<T>(...objects: any[]): T {\r\n  const isObject = (obj: any) => obj && typeof obj === 'object' && obj.constructor === Object\r\n\r\n  return objects.reduce((prev, obj) => {\r\n    Object.keys(obj ?? {}).forEach((key) => {\r\n      // Avoid prototype pollution\r\n      if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\r\n        return\r\n      }\r\n\r\n      const pVal = prev[key]\r\n      const oVal = obj[key]\r\n\r\n      if (Array.isArray(pVal) && Array.isArray(oVal)) {\r\n        prev[key] = pVal.concat(...oVal)\r\n      } else if (isObject(pVal) && isObject(oVal)) {\r\n        prev[key] = mergeDeep(pVal, oVal)\r\n      } else {\r\n        prev[key] = oVal\r\n      }\r\n    })\r\n\r\n    return prev\r\n  }, {})\r\n}\r\n","import EventManager from './lib/event-manager'\r\nimport type {\r\n  NotifyData,\r\n  PageData,\r\n  CommentData,\r\n  DataManagerApi,\r\n  ListFetchParams,\r\n  ListLastFetchData,\r\n  EventPayloadMap,\r\n} from '@/types'\r\n\r\nexport class DataManager implements DataManagerApi {\r\n  private loading: boolean = false\r\n  private listLastFetch?: ListLastFetchData\r\n  private comments: CommentData[] = [] // Note: 无层级结构 + 无须排列\r\n  private notifies: NotifyData[] = []\r\n  private page?: PageData\r\n\r\n  constructor(protected events: EventManager<EventPayloadMap>) {}\r\n\r\n  getLoading() {\r\n    return this.loading\r\n  }\r\n\r\n  setLoading(val: boolean) {\r\n    this.loading = val\r\n  }\r\n\r\n  getListLastFetch() {\r\n    return this.listLastFetch\r\n  }\r\n\r\n  setListLastFetch(val: ListLastFetchData) {\r\n    this.listLastFetch = val\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  //  Comments\r\n  // -------------------------------------------------------------------\r\n  getComments() {\r\n    return this.comments\r\n  }\r\n\r\n  fetchComments(params: Partial<ListFetchParams>) {\r\n    this.events.trigger('list-fetch', params)\r\n  }\r\n\r\n  findComment(id: number) {\r\n    return this.comments.find((c) => c.id === id)\r\n  }\r\n\r\n  clearComments() {\r\n    this.comments = []\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  loadComments(partialComments: CommentData[]) {\r\n    this.events.trigger('list-load', partialComments)\r\n\r\n    this.comments.push(...partialComments)\r\n\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  insertComment(comment: CommentData) {\r\n    this.comments.push(comment)\r\n\r\n    this.events.trigger('comment-inserted', comment)\r\n    this.events.trigger('list-loaded', this.comments) // list-loaded should always keep the last\r\n  }\r\n\r\n  updateComment(comment: CommentData) {\r\n    this.comments = this.comments.map((c) => {\r\n      if (c.id === comment.id) return comment\r\n      return c\r\n    })\r\n\r\n    this.events.trigger('comment-updated', comment)\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  deleteComment(id: number) {\r\n    const comment = this.comments.find((c) => c.id === id)\r\n    if (!comment) throw new Error(`Comment ${id} not found`)\r\n    this.comments = this.comments.filter((c) => c.id !== id)\r\n\r\n    this.events.trigger('comment-deleted', comment)\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  //  Notifies\r\n  // -------------------------------------------------------------------\r\n  getNotifies() {\r\n    return this.notifies\r\n  }\r\n\r\n  updateNotifies(notifies: NotifyData[]) {\r\n    this.notifies = notifies\r\n\r\n    this.events.trigger('notifies-updated', this.notifies)\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  // Page\r\n  // -------------------------------------------------------------------\r\n  getPage() {\r\n    return this.page\r\n  }\r\n\r\n  updatePage(pageData: PageData) {\r\n    this.page = pageData\r\n\r\n    this.events.trigger('page-loaded', pageData)\r\n  }\r\n}\r\n","export function createElement<E extends HTMLElement = HTMLElement>(htmlStr: string = ''): E {\r\n  const div = document.createElement('div')\r\n  div.innerHTML = htmlStr.trim()\r\n  return (div.firstElementChild || div) as E\r\n}\r\n\r\nexport function getHeight(el: HTMLElement): number {\r\n  const num = parseFloat(getComputedStyle(el, null).height.replace('px', ''))\r\n  return num || 0 // NaN -> 0\r\n}\r\n\r\nexport function htmlEncode(str: string) {\r\n  const temp = document.createElement('div')\r\n  temp.innerText = str\r\n  const output = temp.innerHTML\r\n  return output\r\n}\r\n\r\nexport function htmlDecode(str: string) {\r\n  const temp = document.createElement('div')\r\n  temp.innerHTML = str\r\n  const output = temp.innerText\r\n  return output\r\n}\r\n\r\nexport function getQueryParam(name: string) {\r\n  const match = RegExp(`[?&]${name}=([^&]*)`).exec(window.location.search)\r\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '))\r\n}\r\n\r\nexport function getOffset(el: HTMLElement, relativeTo?: HTMLElement) {\r\n  const getOffsetRecursive = (element: HTMLElement): { top: number; left: number } => {\r\n    const rect = element.getBoundingClientRect()\r\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop\r\n    return {\r\n      top: rect.top + scrollTop,\r\n      left: rect.left + scrollLeft,\r\n    }\r\n  }\r\n\r\n  const elOffset = getOffsetRecursive(el)\r\n  if (!relativeTo) return elOffset\r\n\r\n  const relativeToOffset = getOffsetRecursive(relativeTo)\r\n\r\n  return {\r\n    top: elOffset.top - relativeToOffset.top,\r\n    left: elOffset.left - relativeToOffset.left,\r\n  }\r\n}\r\n\r\nexport function padWithZeros(vNumber: number, width: number) {\r\n  let numAsString = vNumber.toString()\r\n  while (numAsString.length < width) {\r\n    numAsString = `0${numAsString}`\r\n  }\r\n  return numAsString\r\n}\r\n\r\nexport function dateFormat(date: Date) {\r\n  const vDay = padWithZeros(date.getDate(), 2)\r\n  const vMonth = padWithZeros(date.getMonth() + 1, 2)\r\n  const vYear = padWithZeros(date.getFullYear(), 2)\r\n  // var vHour = padWithZeros(date.getHours(), 2);\r\n  // var vMinute = padWithZeros(date.getMinutes(), 2);\r\n  // var vSecond = padWithZeros(date.getSeconds(), 2);\r\n  return `${vYear}-${vMonth}-${vDay}`\r\n}\r\n\r\nexport function timeAgo(date: Date, $t = (n: any) => n) {\r\n  try {\r\n    const oldTime = date.getTime()\r\n    const currTime = new Date().getTime()\r\n    const diffValue = currTime - oldTime\r\n\r\n    const days = Math.floor(diffValue / (24 * 3600 * 1000))\r\n    if (days === 0) {\r\n      // 计算相差小时数\r\n      const leave1 = diffValue % (24 * 3600 * 1000) // 计算天数后剩余的毫秒数\r\n      const hours = Math.floor(leave1 / (3600 * 1000))\r\n      if (hours === 0) {\r\n        // 计算相差分钟数\r\n        const leave2 = leave1 % (3600 * 1000) // 计算小时数后剩余的毫秒数\r\n        const minutes = Math.floor(leave2 / (60 * 1000))\r\n        if (minutes === 0) {\r\n          // 计算相差秒数\r\n          const leave3 = leave2 % (60 * 1000) // 计算分钟数后剩余的毫秒数\r\n          const seconds = Math.round(leave3 / 1000)\r\n          if (seconds < 10) return $t('now')\r\n          return `${seconds} ${$t('seconds')}`\r\n        }\r\n        return `${minutes} ${$t('minutes')}`\r\n      }\r\n      return `${hours} ${$t('hours')}`\r\n    }\r\n    if (days < 0) return $t('now')\r\n\r\n    if (days < 8) {\r\n      return `${days} ${$t('days')}`\r\n    }\r\n\r\n    return dateFormat(date)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return ' - '\r\n  }\r\n}\r\n\r\nexport function getGravatarURL(opts: { params: string; mirror: string; emailHash: string }) {\r\n  return `${opts.mirror.replace(/\\/$/, '')}/${opts.emailHash}?${opts.params.replace(/^\\?/, '')}`\r\n}\r\n\r\nexport function sleep(ms: number) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\n/** 版本号比较（a < b :-1 | 0 | b < a :1） */\r\nexport function versionCompare(a: string, b: string) {\r\n  const pa = a.split('.')\r\n  const pb = b.split('.')\r\n  for (let i = 0; i < 3; i++) {\r\n    const na = Number(pa[i])\r\n    const nb = Number(pb[i])\r\n    if (na > nb) return 1\r\n    if (nb > na) return -1\r\n    if (!Number.isNaN(na) && Number.isNaN(nb)) return 1\r\n    if (Number.isNaN(na) && !Number.isNaN(nb)) return -1\r\n  }\r\n  return 0\r\n}\r\n\r\n/** 获取修正后的 UserAgent */\r\nexport async function getCorrectUserAgent() {\r\n  const uaRaw = navigator.userAgent\r\n  if (!(navigator as any).userAgentData || !(navigator as any).userAgentData.getHighEntropyValues) {\r\n    return uaRaw\r\n  }\r\n\r\n  // @link https://web.dev/migrate-to-ua-ch/\r\n  // @link https://web.dev/user-agent-client-hints/\r\n  const uaData = (navigator as any).userAgentData\r\n  let uaGot: any = null\r\n  try {\r\n    uaGot = await uaData.getHighEntropyValues(['platformVersion'])\r\n  } catch (err) {\r\n    console.error(err)\r\n    return uaRaw\r\n  }\r\n  const majorPlatformVersion = Number(uaGot.platformVersion.split('.')[0])\r\n\r\n  if (uaData.platform === 'Windows') {\r\n    if (majorPlatformVersion >= 13) {\r\n      // @link https://docs.microsoft.com/en-us/microsoft-edge/web-platform/how-to-detect-win11\r\n      // @date 2022-4-29\r\n      // Win 11 样本：\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36\"\r\n      return uaRaw.replace(/Windows NT 10.0/, 'Windows NT 11.0')\r\n    }\r\n  }\r\n  if (uaData.platform === 'macOS') {\r\n    if (majorPlatformVersion >= 11) {\r\n      // 11 => BigSur\r\n      // @date 2022-4-29\r\n      // (Intel Chip) macOS 12.3 样本：\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\"\r\n      // (Arm Chip) macOS 样本：\"Mozilla/5.0 (Macintosh; ARM Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.2 Safari/605.1.15\"\r\n      return uaRaw.replace(\r\n        /(Mac OS X \\d+_\\d+_\\d+|Mac OS X)/,\r\n        `Mac OS X ${uaGot.platformVersion.replace(/\\./g, '_')}`,\r\n      )\r\n    }\r\n  }\r\n\r\n  return uaRaw\r\n}\r\n\r\n/** 是否为完整的 URL */\r\nexport function isValidURL(urlRaw: string) {\r\n  // @link https://www.rfc-editor.org/rfc/rfc3986\r\n  let url: URL\r\n  try {\r\n    url = new URL(urlRaw)\r\n  } catch (_) {\r\n    return false\r\n  }\r\n  return url.protocol === 'http:' || url.protocol === 'https:'\r\n}\r\n\r\n/** 获取基于 conf.server 的 URL */\r\nexport function getURLBasedOnApi(opts: { base: string; path: string }) {\r\n  return getURLBasedOn(opts.base, opts.path)\r\n}\r\n\r\n/** 获取基于某个 baseURL 的 URL */\r\nexport function getURLBasedOn(baseURL: string, path: string) {\r\n  return `${baseURL.replace(/\\/$/, '')}/${path.replace(/^\\//, '')}`\r\n}\r\n","const en = {\r\n  /* Editor */\r\n  placeholder: 'Leave a comment',\r\n  noComment: 'No Comment',\r\n  send: 'Send',\r\n  signIn: 'Sign in',\r\n  signUp: 'Sign up',\r\n  save: 'Save',\r\n  nick: 'Nickname',\r\n  email: 'Email',\r\n  link: 'Website',\r\n  emoticon: 'Emoji',\r\n  preview: 'Preview',\r\n  uploadImage: 'Upload Image',\r\n  uploadFail: 'Upload Failed',\r\n  commentFail: 'Failed to comment',\r\n  restoredMsg: 'Content has been restored',\r\n  onlyAdminCanReply: 'Only admin can reply',\r\n  uploadLoginMsg: 'Please fill in your name and email to upload',\r\n\r\n  /* List */\r\n  counter: '{count} Comments',\r\n  sortLatest: 'Latest',\r\n  sortOldest: 'Oldest',\r\n  sortBest: 'Best',\r\n  sortAuthor: 'Author',\r\n  openComment: 'Open Comment',\r\n  closeComment: 'Close Comment',\r\n  listLoadFailMsg: 'Failed to load comments',\r\n  listRetry: 'Retry',\r\n  loadMore: 'Load More',\r\n\r\n  /* Comment */\r\n  admin: 'Admin',\r\n  reply: 'Reply',\r\n  voteUp: 'Up',\r\n  voteDown: 'Down',\r\n  voteFail: 'Vote Failed',\r\n  readMore: 'Read More',\r\n  actionConfirm: 'Confirm',\r\n  collapse: 'Collapse',\r\n  collapsed: 'Collapsed',\r\n  collapsedMsg: 'This comment has been collapsed',\r\n  expand: 'Expand',\r\n  approved: 'Approved',\r\n  pending: 'Pending',\r\n  pendingMsg: 'Pending, visible only to commenter.',\r\n  edit: 'Edit',\r\n  editCancel: 'Cancel Edit',\r\n  delete: 'Delete',\r\n  deleteConfirm: 'Confirm',\r\n  pin: 'Pin',\r\n  unpin: 'Unpin',\r\n\r\n  /* Time */\r\n  seconds: 'seconds ago',\r\n  minutes: 'minutes ago',\r\n  hours: 'hours ago',\r\n  days: 'days ago',\r\n  now: 'just now',\r\n\r\n  /* Checker */\r\n  adminCheck: 'Enter admin password:',\r\n  captchaCheck: 'Enter the CAPTCHA to continue:',\r\n  confirm: 'Confirm',\r\n  cancel: 'Cancel',\r\n\r\n  /* Sidebar */\r\n  msgCenter: 'Messages',\r\n  ctrlCenter: 'Admin',\r\n\r\n  /* Auth */\r\n  noAccountPrompt: \"Don't have an account?\",\r\n  haveAccountPrompt: 'Already have an account?',\r\n  forgetPassword: 'Forget Password',\r\n  resetPassword: 'Reset Password',\r\n  verificationCode: 'Verification Code',\r\n  verifySend: 'Verify',\r\n  verifyResend: 'Resend',\r\n  waitSeconds: 'Wait {seconds}s',\r\n  emailVerified: 'Email has been verified',\r\n  password: 'Password',\r\n  username: 'Username',\r\n  nextStep: 'Next Step',\r\n  skipNotVerify: 'Skip, do not verify',\r\n  logoutConfirm: 'Are you sure to logout?',\r\n  accountMergeNotice: 'Your email has multiple accounts with different id.',\r\n  accountMergeSelectOne: 'Please select one you want to merge all the data into it.',\r\n  accountMergeConfirm: 'All data will be merged into one account, the id is {id}.',\r\n  dismiss: 'Dismiss',\r\n  merge: 'Merge',\r\n\r\n  /* General */\r\n  frontend: 'Frontend',\r\n  backend: 'Backend',\r\n  loading: 'Loading',\r\n  loadFail: 'Load Failed',\r\n  editing: 'Editing',\r\n  editFail: 'Edit Failed',\r\n  deleting: 'Deleting',\r\n  deleteFail: 'Delete Failed',\r\n  reqGot: 'Request got',\r\n  reqAborted: 'Request timed out or terminated unexpectedly',\r\n  updateMsg: 'Please update Artalk {name} to get the best experience!',\r\n  currentVersion: 'Current Version',\r\n  ignore: 'Ignore',\r\n  open: 'Open',\r\n  openName: 'Open {name}',\r\n}\r\n\r\nexport type I18n = typeof en\r\nexport type I18nKeys = keyof I18n\r\n\r\nexport default en\r\n","import type { I18n } from '.'\r\n\r\nexport const GLOBAL_LOCALES_KEY = 'ArtalkI18n'\r\n\r\nexport function defineLocaleExternal(lang: string, locale: I18n, aliases?: string[]) {\r\n  if (!window[GLOBAL_LOCALES_KEY]) window[GLOBAL_LOCALES_KEY] = {}\r\n  window[GLOBAL_LOCALES_KEY][lang] = locale\r\n  if (aliases)\r\n    aliases.forEach((l) => {\r\n      window[GLOBAL_LOCALES_KEY][l] = locale\r\n    })\r\n  return locale\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport en, { I18n, I18nKeys } from './en'\r\nimport zhCN from './zh-CN'\r\nimport { GLOBAL_LOCALES_KEY } from './external'\r\n\r\nexport type * from './en'\r\n\r\n// @note the key of language is followed by `ISO 639`\r\n// https://en.wikipedia.org/wiki/ISO_639\r\n// https://datatracker.ietf.org/doc/html/rfc5646#section-2.1\r\nexport const internal = {\r\n  en,\r\n  'en-US': en,\r\n  'zh-CN': zhCN,\r\n}\r\n\r\n/**\r\n * find a locale object by language name\r\n */\r\nexport function findLocaleSet(lang: string): I18n {\r\n  // normalize a key of language to `ISO 639`\r\n  lang = lang.replace(\r\n    /^([a-zA-Z]+)(-[a-zA-Z]+)?$/,\r\n    (_, p1: string, p2: string) => p1.toLowerCase() + (p2 || '').toUpperCase(),\r\n  )\r\n\r\n  // internal finding\r\n  if (internal[lang]) {\r\n    return internal[lang]\r\n  }\r\n\r\n  // external finding\r\n  if (window[GLOBAL_LOCALES_KEY] && window[GLOBAL_LOCALES_KEY][lang]) {\r\n    return window[GLOBAL_LOCALES_KEY][lang]\r\n  }\r\n\r\n  // case when not found:\r\n  // use `en` by default\r\n  return internal.en\r\n}\r\n\r\n/**\r\n * System locale setting\r\n */\r\nlet LocaleConf: I18n | string = 'en'\r\nlet LocaleDict: I18n = findLocaleSet(LocaleConf) // en by default\r\n\r\n/**\r\n * Set system locale\r\n */\r\nexport function setLocale(locale: I18n | string) {\r\n  if (locale === LocaleConf) return\r\n  LocaleConf = locale\r\n  LocaleDict = typeof locale === 'string' ? findLocaleSet(locale) : locale\r\n}\r\n\r\n/**\r\n * Get an i18n message by key\r\n */\r\nexport function t(key: I18nKeys, args: { [key: string]: string } = {}) {\r\n  let str = LocaleDict?.[key] || key\r\n  str = str.replace(/\\{\\s*(\\w+?)\\s*\\}/g, (_, token) => args[token] || '')\r\n\r\n  return Utils.htmlEncode(str)\r\n}\r\n\r\nexport default t\r\n","import type { I18n } from '.'\r\n\r\nconst zhCN: I18n = {\r\n  /* Editor */\r\n  placeholder: '键入内容...',\r\n  noComment: '「此时无声胜有声」',\r\n  send: '发送',\r\n  signIn: '登录',\r\n  signUp: '注册',\r\n  save: '保存',\r\n  nick: '昵称',\r\n  email: '邮箱',\r\n  link: '网址',\r\n  emoticon: '表情',\r\n  preview: '预览',\r\n  uploadImage: '上传图片',\r\n  uploadFail: '上传失败',\r\n  commentFail: '评论失败',\r\n  restoredMsg: '内容已自动恢复',\r\n  onlyAdminCanReply: '仅管理员可评论',\r\n  uploadLoginMsg: '填入你的名字邮箱才能上传哦',\r\n\r\n  /* List */\r\n  counter: '{count} 条评论',\r\n  sortLatest: '最新',\r\n  sortOldest: '最早',\r\n  sortBest: '最热',\r\n  sortAuthor: '作者',\r\n  openComment: '打开评论',\r\n  closeComment: '关闭评论',\r\n  listLoadFailMsg: '无法获取评论列表数据',\r\n  listRetry: '点击重新获取',\r\n  loadMore: '加载更多',\r\n\r\n  /* Comment */\r\n  admin: '管理员',\r\n  reply: '回复',\r\n  voteUp: '赞同',\r\n  voteDown: '反对',\r\n  voteFail: '投票失败',\r\n  readMore: '阅读更多',\r\n  actionConfirm: '确认操作',\r\n  collapse: '折叠',\r\n  collapsed: '已折叠',\r\n  collapsedMsg: '该评论已被系统或管理员折叠',\r\n  expand: '展开',\r\n  approved: '已审',\r\n  pending: '待审',\r\n  pendingMsg: '审核中，仅本人可见。',\r\n  edit: '编辑',\r\n  editCancel: '取消编辑',\r\n  delete: '删除',\r\n  deleteConfirm: '确认删除',\r\n  pin: '置顶',\r\n  unpin: '取消置顶',\r\n\r\n  /* Time */\r\n  seconds: '秒前',\r\n  minutes: '分钟前',\r\n  hours: '小时前',\r\n  days: '天前',\r\n  now: '刚刚',\r\n\r\n  /* Checker */\r\n  adminCheck: '键入密码来验证管理员身份：',\r\n  captchaCheck: '键入验证码继续：',\r\n  confirm: '确认',\r\n  cancel: '取消',\r\n\r\n  /* Sidebar */\r\n  msgCenter: '通知中心',\r\n  ctrlCenter: '控制中心',\r\n\r\n  /* Auth */\r\n  noAccountPrompt: '没有账号？',\r\n  haveAccountPrompt: '已有账号？',\r\n  forgetPassword: '忘记密码',\r\n  resetPassword: '重置密码',\r\n  verificationCode: '验证码',\r\n  verifySend: '发送验证码',\r\n  verifyResend: '重新发送',\r\n  waitSeconds: '等待 {seconds}秒',\r\n  emailVerified: '邮箱已验证',\r\n  password: '密码',\r\n  username: '用户名',\r\n  nextStep: '下一步',\r\n  skipNotVerify: '跳过，不验证',\r\n  logoutConfirm: '确定要退出登录吗？',\r\n  accountMergeNotice: '您的电子邮件下有多个不同 ID 的账户。',\r\n  accountMergeSelectOne: '请选择将所有数据合并到其中的一个。',\r\n  accountMergeConfirm: '所有数据将合并到 ID 为 {id} 的账户中。',\r\n  dismiss: '忽略',\r\n  merge: '合并',\r\n\r\n  /* General */\r\n  frontend: '前端',\r\n  backend: '后端',\r\n  loading: '加载中',\r\n  loadFail: '加载失败',\r\n  editing: '修改中',\r\n  editFail: '修改失败',\r\n  deleting: '删除中',\r\n  deleteFail: '删除失败',\r\n  reqGot: '请求响应',\r\n  reqAborted: '请求超时或意外终止',\r\n  updateMsg: '请更新 Artalk {name} 以获得更好的体验！',\r\n  currentVersion: '当前版本',\r\n  ignore: '忽略',\r\n  open: '打开',\r\n  openName: '打开{name}',\r\n}\r\n\r\nexport default zhCN\r\n","export type EventHandler<T> = (payload: T) => void\r\nexport interface Event<PayloadMap, K extends keyof PayloadMap = keyof PayloadMap>\r\n  extends EventOptions {\r\n  name: K\r\n  handler: EventHandler<PayloadMap[K]>\r\n}\r\nexport interface EventOptions {\r\n  once?: boolean\r\n}\r\n\r\nexport interface EventManagerFuncs<PayloadMap> {\r\n  on<K extends keyof PayloadMap>(\r\n    name: K,\r\n    handler: EventHandler<PayloadMap[K]>,\r\n    opts?: EventOptions,\r\n  ): void\r\n  off<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>): void\r\n  trigger<K extends keyof PayloadMap>(name: K, payload?: PayloadMap[K]): void\r\n}\r\n\r\nexport default class EventManager<PayloadMap> implements EventManagerFuncs<PayloadMap> {\r\n  private events: Event<PayloadMap>[] = []\r\n\r\n  /**\r\n   * Add an event listener for a specific event name\r\n   */\r\n  public on<K extends keyof PayloadMap>(\r\n    name: K,\r\n    handler: EventHandler<PayloadMap[K]>,\r\n    opts: EventOptions = {},\r\n  ) {\r\n    this.events.push({\r\n      name,\r\n      handler: handler as EventHandler<PayloadMap[keyof PayloadMap]>,\r\n      ...opts,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener for a specific event name and handler\r\n   */\r\n  public off<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>) {\r\n    if (!handler) return // not allow remove all events with same name\r\n    this.events = this.events.filter((evt) => !(evt.name === name && evt.handler === handler))\r\n  }\r\n\r\n  /**\r\n   * Trigger an event with an optional payload\r\n   */\r\n  public trigger<K extends keyof PayloadMap>(name: K, payload?: PayloadMap[K]) {\r\n    this.events\r\n      .slice(0) // make a copy, in case listeners are removed while iterating\r\n      .filter((evt) => evt.name === name && typeof evt.handler === 'function')\r\n      .forEach((evt) => {\r\n        if (evt.once) this.off(name, evt.handler)\r\n        evt.handler(payload!)\r\n      })\r\n  }\r\n}\r\n","import type { ArtalkConfig } from '@/types'\r\n\r\nconst defaults: ArtalkConfig = {\r\n  el: '',\r\n  pageKey: '',\r\n  pageTitle: '',\r\n  server: '',\r\n  site: '',\r\n\r\n  placeholder: '',\r\n  noComment: '',\r\n  sendBtn: '',\r\n  darkMode: false,\r\n  editorTravel: true,\r\n\r\n  flatMode: 'auto',\r\n  nestMax: 2,\r\n  nestSort: 'DATE_ASC',\r\n\r\n  emoticons: 'https://cdn.jsdelivr.net/gh/ArtalkJS/Emoticons/grps/default.json',\r\n\r\n  vote: true,\r\n  voteDown: false,\r\n  uaBadge: true,\r\n  listSort: true,\r\n  preview: true,\r\n  countEl: '.artalk-comment-count',\r\n  pvEl: '.artalk-pv-count',\r\n  statPageKeyAttr: 'data-page-key',\r\n\r\n  gravatar: {\r\n    mirror: 'https://www.gravatar.com/avatar/',\r\n    params: 'sha256=1&d=mp&s=240',\r\n  },\r\n\r\n  pagination: {\r\n    pageSize: 20,\r\n    readMore: true,\r\n    autoLoad: true,\r\n  },\r\n\r\n  heightLimit: {\r\n    content: 300,\r\n    children: 400,\r\n    scrollable: false,\r\n  },\r\n\r\n  imgUpload: true,\r\n  reqTimeout: 15000,\r\n  versionCheck: true,\r\n  useBackendConf: true,\r\n\r\n  locale: 'en',\r\n}\r\n\r\nif (ARTALK_LITE) {\r\n  defaults.vote = false\r\n  defaults.uaBadge = false\r\n  defaults.emoticons = false\r\n  defaults.preview = false\r\n}\r\n\r\nexport default defaults\r\n","import type { ApiOptions } from './api/options'\r\nimport { mergeDeep } from './lib/merge-deep'\r\nimport { createApiHandlers } from './api'\r\nimport Defaults from './defaults'\r\nimport type { ArtalkConfig, ContextApi } from '@/types'\r\n\r\n/**\r\n * Handle the custom config which is provided by the user\r\n *\r\n * @param customConf - The custom config object which is provided by the user\r\n * @param full - If `full` is `true`, the return value will be the complete config for Artalk instance creation\r\n * @returns The config for Artalk instance creation\r\n */\r\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full: true): ArtalkConfig\r\nexport function handelCustomConf(\r\n  customConf: Partial<ArtalkConfig>,\r\n  full?: false,\r\n): Partial<ArtalkConfig>\r\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full = false) {\r\n  // 合并默认配置\r\n  const conf: Partial<ArtalkConfig> = full ? mergeDeep(Defaults, customConf) : customConf\r\n\r\n  // 绑定元素\r\n  if (conf.el && typeof conf.el === 'string') {\r\n    try {\r\n      const findEl = document.querySelector<HTMLElement>(conf.el)\r\n      if (!findEl) throw Error(`Target element \"${conf.el}\" was not found.`)\r\n      conf.el = findEl\r\n    } catch (e) {\r\n      console.error(e)\r\n      throw new Error('Please check your Artalk `el` config.')\r\n    }\r\n  }\r\n\r\n  // 默认 pageKey\r\n  if (conf.pageKey === '') conf.pageKey = `${window.location.pathname}` // @link http://bl.ocks.org/abernier/3070589\r\n\r\n  // 默认 pageTitle\r\n  if (conf.pageTitle === '') conf.pageTitle = `${document.title}`\r\n\r\n  // 服务器配置\r\n  if (conf.server) conf.server = conf.server.replace(/\\/$/, '').replace(/\\/api\\/?$/, '')\r\n\r\n  // 自适应语言\r\n  if (conf.locale === 'auto') conf.locale = navigator.language\r\n\r\n  // 自动判断启用平铺模式\r\n  if (conf.flatMode === 'auto') conf.flatMode = window.matchMedia('(max-width: 768px)').matches\r\n\r\n  // flatMode\r\n  if (typeof conf.nestMax === 'number' && Number(conf.nestMax) <= 1) conf.flatMode = true\r\n\r\n  return conf\r\n}\r\n\r\n/**\r\n * Handle the config which is provided by the server\r\n *\r\n * @param conf - The Server response config for control the frontend of Artalk remotely\r\n * @returns The config for Artalk instance creation\r\n */\r\nexport function handleConfFormServer(conf: Partial<ArtalkConfig>) {\r\n  const ExcludedKeys: (keyof ArtalkConfig)[] = [\r\n    'el',\r\n    'pageKey',\r\n    'pageTitle',\r\n    'server',\r\n    'site',\r\n    'pvEl',\r\n    'countEl',\r\n    'statPageKeyAttr',\r\n  ]\r\n  Object.keys(conf).forEach((k) => {\r\n    if (ExcludedKeys.includes(k as any)) delete conf[k]\r\n    if (k === 'darkMode' && conf[k] !== 'auto') delete conf[k]\r\n  })\r\n\r\n  // Patch: `emoticons` config string to json\r\n  if (conf.emoticons && typeof conf.emoticons === 'string') {\r\n    conf.emoticons = conf.emoticons.trim()\r\n    if (conf.emoticons.startsWith('[') || conf.emoticons.startsWith('{')) {\r\n      conf.emoticons = JSON.parse(conf.emoticons) // parse json\r\n    } else if (conf.emoticons === 'false') {\r\n      conf.emoticons = false\r\n    }\r\n  }\r\n\r\n  return conf\r\n}\r\n\r\n/**\r\n * Convert Artalk Config to ApiOptions for Api client\r\n *\r\n * @param conf - Artalk config\r\n * @param ctx - If `ctx` not provided, `checkAdmin` and `checkCaptcha` will be disabled\r\n * @returns ApiOptions for Api client instance creation\r\n */\r\nexport function convertApiOptions(conf: Partial<ArtalkConfig>, ctx?: ContextApi): ApiOptions {\r\n  return {\r\n    baseURL: `${conf.server}/api/v2`,\r\n    siteName: conf.site || '',\r\n    pageKey: conf.pageKey || '',\r\n    pageTitle: conf.pageTitle || '',\r\n    timeout: conf.reqTimeout,\r\n    getApiToken: () => ctx?.get('user').getData().token,\r\n    userInfo: ctx?.get('user').checkHasBasicUserInfo()\r\n      ? {\r\n          name: ctx?.get('user').getData().nick,\r\n          email: ctx?.get('user').getData().email,\r\n        }\r\n      : undefined,\r\n    handlers: ctx?.getApiHandlers(),\r\n  }\r\n}\r\n\r\nexport function createNewApiHandlers(ctx: ContextApi) {\r\n  const h = createApiHandlers()\r\n  h.add('need_captcha', (res) => ctx.checkCaptcha(res))\r\n  h.add('need_login', () => ctx.checkAdmin({}))\r\n\r\n  return h\r\n}\r\n","import type { ArtalkConfig, ContextApi } from '@/types'\r\n\r\nexport function watchConf<T extends (keyof ArtalkConfig)[]>(\r\n  ctx: ContextApi,\r\n  keys: T,\r\n  effect: (conf: Pick<ArtalkConfig, T[number]>) => void,\r\n): void {\r\n  const deepEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b)\r\n  const val = () => {\r\n    const conf = ctx.getConf()\r\n    const res: any = {}\r\n    keys.forEach((key) => {\r\n      res[key] = conf[key]\r\n    })\r\n    return res\r\n  }\r\n  let lastVal: any = null\r\n  const handler = () => {\r\n    const newVal = val()\r\n    const isDiff = lastVal == null || !deepEqual(lastVal, newVal)\r\n    // only trigger when specific keys changed\r\n    if (isDiff) {\r\n      lastVal = newVal\r\n      effect(newVal)\r\n    }\r\n  }\r\n  ctx.on('mounted', handler)\r\n  ctx.on('updated', handler)\r\n}\r\n","import type { TInjectedServices } from './service'\r\nimport { Api, ApiHandlers } from './api'\r\n\r\nimport * as marked from './lib/marked'\r\nimport { mergeDeep } from './lib/merge-deep'\r\nimport { CheckerCaptchaPayload, CheckerPayload } from './components/checker'\r\n\r\nimport { DataManager } from './data'\r\nimport * as I18n from './i18n'\r\n\r\nimport EventManager from './lib/event-manager'\r\nimport { convertApiOptions, createNewApiHandlers, handelCustomConf } from './config'\r\nimport { watchConf } from './lib/watch-conf'\r\n\r\nimport type {\r\n  ArtalkConfig,\r\n  CommentData,\r\n  ListFetchParams,\r\n  ContextApi,\r\n  EventPayloadMap,\r\n  SidebarShowPayload,\r\n} from '@/types'\r\n\r\n// Auto dependency injection\r\ninterface Context extends TInjectedServices {}\r\n\r\n/**\r\n * Artalk Context\r\n */\r\nclass Context implements ContextApi {\r\n  /* 运行参数 */\r\n  conf: ArtalkConfig\r\n  data: DataManager\r\n  $root: HTMLElement\r\n\r\n  /* Event Manager */\r\n  private events = new EventManager<EventPayloadMap>()\r\n  private mounted = false\r\n\r\n  constructor(conf: ArtalkConfig) {\r\n    this.conf = conf\r\n\r\n    this.$root = conf.el as HTMLElement\r\n    this.$root.classList.add('artalk')\r\n    this.$root.innerHTML = ''\r\n\r\n    this.data = new DataManager(this.events)\r\n\r\n    this.on('mounted', () => {\r\n      this.mounted = true\r\n    })\r\n  }\r\n\r\n  inject(depName: string, obj: any) {\r\n    this[depName] = obj\r\n  }\r\n\r\n  get(depName: string) {\r\n    return this[depName]\r\n  }\r\n\r\n  getApi() {\r\n    return new Api(convertApiOptions(this.conf, this))\r\n  }\r\n\r\n  private apiHandlers = <ApiHandlers | null>null\r\n  getApiHandlers() {\r\n    if (!this.apiHandlers) this.apiHandlers = createNewApiHandlers(this)\r\n    return this.apiHandlers\r\n  }\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n  replyComment(commentData: CommentData, $comment: HTMLElement): void {\r\n    this.editor.setReply(commentData, $comment)\r\n  }\r\n\r\n  editComment(commentData: CommentData, $comment: HTMLElement): void {\r\n    this.editor.setEditComment(commentData, $comment)\r\n  }\r\n\r\n  fetch(params: Partial<ListFetchParams>): void {\r\n    this.data.fetchComments(params)\r\n  }\r\n\r\n  reload(): void {\r\n    this.data.fetchComments({ offset: 0 })\r\n  }\r\n\r\n  /* List */\r\n  listGotoFirst(): void {\r\n    this.events.trigger('list-goto-first')\r\n  }\r\n\r\n  getCommentNodes() {\r\n    return this.list.getCommentNodes()\r\n  }\r\n\r\n  getComments() {\r\n    return this.data.getComments()\r\n  }\r\n\r\n  getCommentList = this.getCommentNodes\r\n  getCommentDataList = this.getComments\r\n\r\n  /* Editor */\r\n  editorShowLoading(): void {\r\n    this.editor.showLoading()\r\n  }\r\n\r\n  editorHideLoading(): void {\r\n    this.editor.hideLoading()\r\n  }\r\n\r\n  editorShowNotify(msg, type): void {\r\n    this.editor.showNotify(msg, type)\r\n  }\r\n\r\n  editorResetState(): void {\r\n    this.editor.resetState()\r\n  }\r\n\r\n  /* Sidebar */\r\n  showSidebar(payload?: SidebarShowPayload): void {\r\n    this.sidebarLayer.show(payload)\r\n  }\r\n\r\n  hideSidebar(): void {\r\n    this.sidebarLayer.hide()\r\n  }\r\n\r\n  /* Checker */\r\n  checkAdmin(payload: CheckerPayload): Promise<void> {\r\n    return this.checkerLauncher.checkAdmin(payload)\r\n  }\r\n\r\n  checkCaptcha(payload: CheckerCaptchaPayload): Promise<void> {\r\n    return this.checkerLauncher.checkCaptcha(payload)\r\n  }\r\n\r\n  /* Events */\r\n  on(name: any, handler: any) {\r\n    this.events.on(name, handler)\r\n  }\r\n\r\n  off(name: any, handler: any) {\r\n    this.events.off(name, handler)\r\n  }\r\n\r\n  trigger(name: any, payload?: any) {\r\n    this.events.trigger(name, payload)\r\n  }\r\n\r\n  /* i18n */\r\n  $t(key: I18n.I18nKeys, args: { [key: string]: string } = {}): string {\r\n    return I18n.t(key, args)\r\n  }\r\n\r\n  setDarkMode(darkMode: boolean | 'auto'): void {\r\n    this.updateConf({ darkMode })\r\n  }\r\n\r\n  updateConf(nConf: Partial<ArtalkConfig>): void {\r\n    this.conf = mergeDeep(this.conf, handelCustomConf(nConf, false))\r\n    this.mounted && this.events.trigger('updated', this.conf)\r\n  }\r\n\r\n  getConf(): ArtalkConfig {\r\n    return this.conf\r\n  }\r\n\r\n  getEl(): HTMLElement {\r\n    return this.$root\r\n  }\r\n\r\n  getMarked() {\r\n    return marked.getInstance()\r\n  }\r\n\r\n  watchConf<T extends (keyof ArtalkConfig)[]>(\r\n    keys: T,\r\n    effect: (conf: Pick<ArtalkConfig, T[number]>) => void,\r\n  ): void {\r\n    watchConf(this, keys, effect)\r\n  }\r\n}\r\n\r\nexport default Context\r\n","export interface ApiHandlerPayload {\r\n  need_captcha: { img_data?: string; iframe?: string }\r\n  need_login: object\r\n  need_auth_login: object\r\n}\r\n\r\ntype PayloadKey = keyof ApiHandlerPayload\r\n\r\nexport interface ApiHandler<T extends PayloadKey = PayloadKey> {\r\n  action: T\r\n  handler: (data: ApiHandlerPayload[T]) => Promise<void>\r\n}\r\n\r\nexport interface ApiHandlers {\r\n  add: <T extends PayloadKey>(\r\n    action: T,\r\n    handler: (data: ApiHandlerPayload[T]) => Promise<void>,\r\n  ) => void\r\n  get: () => ApiHandler[]\r\n}\r\n\r\nexport function createApiHandlers(): ApiHandlers {\r\n  const handlers: ApiHandler[] = []\r\n  return {\r\n    add: (action, handler) => {\r\n      handlers.push({ action, handler })\r\n    },\r\n    get: () => handlers,\r\n  }\r\n}\r\n","import * as Utils from './utils'\r\nimport type { NotifyLevel } from '@/types'\r\n\r\n/** 显示加载 */\r\nexport function showLoading(parentElem: HTMLElement, conf?: { transparentBg?: boolean }) {\r\n  // Use :scope https://developer.mozilla.org/en-US/docs/Web/CSS/:scope\r\n  let $loading = parentElem.querySelector<HTMLElement>(':scope > .atk-loading')\r\n  if (!$loading) {\r\n    $loading = Utils.createElement(\r\n      `<div class=\"atk-loading\" style=\"display: none;\">\r\n      <div class=\"atk-loading-spinner\">\r\n        <svg viewBox=\"25 25 50 50\"><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle></svg>\r\n      </div>\r\n    </div>`,\r\n    )\r\n    if (conf?.transparentBg) $loading.style.background = 'transparent'\r\n    parentElem.appendChild($loading)\r\n  }\r\n  $loading.style.display = ''\r\n\r\n  // spinner 延迟显示，若加载等待时间太短，没必要显示（闪一下即可）\r\n  const $spinner = $loading.querySelector<HTMLElement>('.atk-loading-spinner')\r\n  if ($spinner) {\r\n    $spinner.style.display = 'none'\r\n    window.setTimeout(() => {\r\n      if ($spinner.isConnected) $spinner.style.display = ''\r\n    }, 500)\r\n  }\r\n}\r\n\r\n/** 隐藏加载 */\r\nexport function hideLoading(parentElem: HTMLElement) {\r\n  const $loading = parentElem.querySelector<HTMLElement>(':scope > .atk-loading')\r\n  if ($loading) $loading.style.display = 'none'\r\n}\r\n\r\n/** 元素加载动画 */\r\nexport function setLoading(val: boolean, parentElem: HTMLElement) {\r\n  if (val) showLoading(parentElem)\r\n  else hideLoading(parentElem)\r\n}\r\n\r\n/** 元素是否用户可见 */\r\nexport function isVisible(el: HTMLElement, viewport: HTMLElement = document.documentElement) {\r\n  const viewportHeight = viewport.clientHeight\r\n\r\n  const docViewTop = viewport.scrollTop\r\n  const docViewBottom = docViewTop + viewportHeight\r\n\r\n  const rect = el.getBoundingClientRect()\r\n  const elemTop = rect.top + docViewTop\r\n  const elemBottom = elemTop + rect.height\r\n\r\n  return elemBottom <= docViewBottom //&& (elemTop >= docViewTop) 注释因为假如 el 比 viewport 还高就会失效\r\n}\r\n\r\n/** 滚动到元素中心 */\r\nexport function scrollIntoView(\r\n  elem: HTMLElement,\r\n  enableAnim: boolean = true,\r\n  relativeTo?: HTMLElement,\r\n) {\r\n  let top: number\r\n\r\n  if (relativeTo) {\r\n    const containerRect = relativeTo.getBoundingClientRect()\r\n    const elementRect = elem.getBoundingClientRect()\r\n    top =\r\n      elementRect.top -\r\n      containerRect.top +\r\n      relativeTo.scrollTop -\r\n      relativeTo.clientHeight / 2 +\r\n      elem.clientHeight / 2\r\n  } else {\r\n    const rect = elem.getBoundingClientRect()\r\n    const elemTop = rect.top + window.scrollY\r\n    top = elemTop - (window.innerHeight / 2 - rect.height / 2)\r\n  }\r\n\r\n  const scrollOptions: ScrollToOptions = {\r\n    top,\r\n    left: 0,\r\n    // behavior: enableAnim ? 'smooth' : 'instant',\r\n    behavior: 'instant',\r\n  }\r\n\r\n  if (relativeTo) relativeTo.scroll(scrollOptions)\r\n  else window.scroll(scrollOptions)\r\n}\r\n\r\n/** 显示消息 */\r\nexport function showNotify(wrapElem: HTMLElement, msg: string, type: NotifyLevel) {\r\n  const colors = { s: '#57d59f', e: '#ff6f6c', w: '#ffc721', i: '#2ebcfc' }\r\n  const timeout = 3000 // 持续显示时间 ms\r\n\r\n  const notifyElem = Utils.createElement(\r\n    `<div class=\"atk-notify atk-fade-in\" style=\"background-color: ${colors[type]}\"><span class=\"atk-notify-content\"></span></div>`,\r\n  )\r\n  const notifyContentEl = notifyElem.querySelector<HTMLElement>('.atk-notify-content')!\r\n  notifyContentEl.innerHTML = Utils.htmlEncode(msg).replace('\\n', '<br/>')\r\n\r\n  wrapElem.appendChild(notifyElem)\r\n\r\n  const notifyRemove = () => {\r\n    notifyElem.classList.add('atk-fade-out')\r\n    setTimeout(() => {\r\n      notifyElem.remove()\r\n    }, 200)\r\n  }\r\n\r\n  let timeoutFn: number\r\n  if (timeout > 0) {\r\n    timeoutFn = window.setTimeout(() => {\r\n      notifyRemove()\r\n    }, timeout)\r\n  }\r\n\r\n  notifyElem.addEventListener('click', () => {\r\n    notifyRemove()\r\n    window.clearTimeout(timeoutFn)\r\n  })\r\n}\r\n\r\n/** fade 动画 */\r\nexport function playFadeAnim(elem: HTMLElement, after?: () => void, type: 'in' | 'out' = 'in') {\r\n  elem.classList.add(`atk-fade-${type}`)\r\n  // 动画结束清除 class\r\n  const onAnimEnded = () => {\r\n    elem.classList.remove(`atk-fade-${type}`)\r\n    elem.removeEventListener('animationend', onAnimEnded)\r\n    if (after) after()\r\n  }\r\n  elem.addEventListener('animationend', onAnimEnded)\r\n}\r\n\r\n/** 渐入动画 */\r\nexport function playFadeInAnim(elem: HTMLElement, after?: () => void) {\r\n  playFadeAnim(elem, after, 'in')\r\n}\r\n\r\n/** 渐出动画 */\r\nexport function playFadeOutAnim(elem: HTMLElement, after?: () => void) {\r\n  playFadeAnim(elem, after, 'out')\r\n}\r\n\r\n/** 设置全局错误 */\r\nexport function setError(\r\n  parentElem: HTMLElement,\r\n  html: string | HTMLElement | null,\r\n  title: string = '<span class=\"atk-error-title\">Artalk Error</span>',\r\n) {\r\n  let elem = parentElem.querySelector<HTMLElement>('.atk-error-layer')\r\n  if (html === null) {\r\n    if (elem !== null) elem.remove()\r\n    return\r\n  }\r\n  if (!elem) {\r\n    elem = Utils.createElement(\r\n      `<div class=\"atk-error-layer\">${title}<span class=\"atk-error-text\"></span></div>`,\r\n    )\r\n    parentElem.appendChild(elem)\r\n  }\r\n\r\n  const errorTextEl = elem.querySelector<HTMLElement>('.atk-error-text')!\r\n  errorTextEl.innerHTML = ''\r\n  if (html === null) return\r\n\r\n  if (html instanceof HTMLElement) {\r\n    errorTextEl.appendChild(html)\r\n  } else {\r\n    errorTextEl.innerText = html\r\n  }\r\n}\r\n\r\nexport function getScrollBarWidth() {\r\n  const inner = document.createElement('p')\r\n  inner.style.width = '100%'\r\n  inner.style.height = '200px'\r\n\r\n  const outer = document.createElement('div')\r\n  outer.style.position = 'absolute'\r\n  outer.style.top = '0px'\r\n  outer.style.left = '0px'\r\n  outer.style.visibility = 'hidden'\r\n  outer.style.width = '200px'\r\n  outer.style.height = '150px'\r\n  outer.style.overflow = 'hidden'\r\n  outer.appendChild(inner)\r\n\r\n  document.body.appendChild(outer)\r\n  const w1 = inner.offsetWidth\r\n  outer.style.overflow = 'scroll'\r\n  let w2 = inner.offsetWidth\r\n  if (w1 === w2) w2 = outer.clientWidth\r\n\r\n  document.body.removeChild(outer)\r\n\r\n  return w1 - w2\r\n}\r\n","import type { CheckerCtx } from '.'\r\nimport $t from '@/i18n'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\n\r\n/** 图片验证码 */\r\nexport function imgBody(checker: CheckerCtx) {\r\n  // 图片验证方式\r\n  const elem = Utils.createElement(\r\n    `<span><img class=\"atk-captcha-img\" src=\"${checker.get('img_data') || ''}\">${$t('captchaCheck')}</span>`,\r\n  )\r\n\r\n  // 刷新验证码\r\n  elem.querySelector<HTMLElement>('.atk-captcha-img')!.onclick = () => {\r\n    const imgEl = elem.querySelector('.atk-captcha-img')\r\n    checker\r\n      .getApi()\r\n      .captcha.getCaptcha()\r\n      .then((res) => {\r\n        imgEl!.setAttribute('src', res.data.img_data)\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to get captcha image ', err)\r\n      })\r\n  }\r\n  return elem\r\n}\r\n\r\n/** iframe 形式的通用验证服务 */\r\nexport function iframeBody(checker: CheckerCtx) {\r\n  const $iframeWrap = Utils.createElement(`<div class=\"atk-checker-iframe-wrap\"></div>`)\r\n  const $iframe = Utils.createElement<HTMLIFrameElement>(\r\n    `<iframe class=\"atk-fade-in\" referrerpolicy=\"strict-origin-when-cross-origin\"></iframe>`,\r\n  )\r\n  $iframe.style.display = 'none'\r\n  Ui.showLoading($iframeWrap, { transparentBg: true })\r\n  $iframe.src = checker.getOpts().getCaptchaIframeURL()\r\n  $iframe.onload = () => {\r\n    $iframe.style.display = ''\r\n    Ui.hideLoading($iframeWrap)\r\n  }\r\n  $iframeWrap.append($iframe)\r\n\r\n  const $closeBtn = Utils.createElement(\r\n    `<div class=\"atk-close-btn\"><i class=\"atk-icon atk-icon-close\"></i></div>`,\r\n  )\r\n  $iframeWrap.append($closeBtn)\r\n\r\n  checker.hideInteractInput()\r\n\r\n  // 轮询状态\r\n  let stop = false // 打断\r\n  const sleep = (ms: number) =>\r\n    new Promise((resolve) => {\r\n      window.setTimeout(() => {\r\n        resolve(null)\r\n      }, ms)\r\n    })\r\n  ;(async function queryStatus() {\r\n    await sleep(1000)\r\n    if (stop) return\r\n    let isPass = false\r\n    try {\r\n      const resp = await checker.getApi().captcha.getCaptchaStatus()\r\n      isPass = resp.data.is_pass\r\n    } catch {\r\n      isPass = false\r\n    }\r\n    if (isPass) {\r\n      checker.triggerSuccess()\r\n    } else {\r\n      queryStatus()\r\n    }\r\n  })()\r\n\r\n  $closeBtn.onclick = () => {\r\n    stop = true\r\n    checker.cancel()\r\n  }\r\n\r\n  return $iframeWrap\r\n}\r\n","import * as render from './captcha-renders'\r\nimport type { Checker } from '.'\r\n\r\nconst CaptchaChecker: Checker = {\r\n  request(checker, inputVal) {\r\n    return checker.getApi().captcha.verifyCaptcha({\r\n      value: inputVal,\r\n    })\r\n  },\r\n\r\n  body(checker) {\r\n    if (checker.get('iframe')) return render.iframeBody(checker)\r\n    return render.imgBody(checker)\r\n  },\r\n\r\n  onSuccess(checker, data, inputVal, formEl) {\r\n    checker.set('val', inputVal)\r\n  },\r\n\r\n  onError(checker, err, inputVal, formEl) {\r\n    formEl.querySelector<HTMLElement>('.atk-captcha-img')!.click() // 刷新验证码\r\n    formEl.querySelector<HTMLInputElement>('input[type=\"text\"]')!.value = '' // 清空输入框输入\r\n  },\r\n}\r\n\r\nexport default CaptchaChecker\r\n","import type { Checker } from '.'\r\nimport $t from '@/i18n'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nconst AdminChecker: Checker<{ token: string }> = {\r\n  inputType: 'password',\r\n\r\n  async request(checker, inputVal) {\r\n    return (\r\n      await checker.getApi().user.login({\r\n        name: checker.getUser().getData().nick,\r\n        email: checker.getUser().getData().email,\r\n        password: inputVal,\r\n      })\r\n    ).data\r\n  },\r\n\r\n  body(checker) {\r\n    return Utils.createElement(`<span>${$t('adminCheck')}</span>`)\r\n  },\r\n\r\n  onSuccess(checker, res, inputVal, formEl) {\r\n    checker.getUser().update({\r\n      isAdmin: true,\r\n      token: res.token,\r\n    })\r\n    checker.getOpts().onReload()\r\n  },\r\n\r\n  onError(checker, err, inputVal, formEl) {},\r\n}\r\n\r\nexport default AdminChecker\r\n","import * as Utils from '../lib/utils'\r\nimport $t from '@/i18n'\r\n\r\ntype BtnClickHandler = (btnEl: HTMLElement, dialog: Dialog) => boolean | void\r\n\r\n/**\r\n * 对话框\r\n */\r\nexport default class Dialog {\r\n  public $el: HTMLElement\r\n  public $content: HTMLElement\r\n  public $actions: HTMLElement\r\n\r\n  constructor(contentEl: HTMLElement) {\r\n    this.$el = Utils.createElement(\r\n      `<div class=\"atk-layer-dialog-wrap\">\r\n        <div class=\"atk-layer-dialog\">\r\n          <div class=\"atk-layer-dialog-content\"></div>\r\n          <div class=\"atk-layer-dialog-actions\"></div>\r\n        </div>\r\n      </div>`,\r\n    )\r\n\r\n    // 按钮\r\n    this.$actions = this.$el.querySelector<HTMLElement>('.atk-layer-dialog-actions')!\r\n\r\n    // 内容\r\n    this.$content = this.$el.querySelector('.atk-layer-dialog-content')!\r\n    this.$content.appendChild(contentEl)\r\n  }\r\n\r\n  /** 按钮 · 确定 */\r\n  public setYes(handler: BtnClickHandler) {\r\n    const btn = Utils.createElement<HTMLButtonElement>(\r\n      `<button data-action=\"confirm\">${$t('confirm')}</button>`,\r\n    )\r\n    btn.onclick = this.onBtnClick(handler)\r\n    this.$actions.appendChild(btn)\r\n\r\n    return this\r\n  }\r\n\r\n  /** 按钮 · 取消 */\r\n  public setNo(handler: BtnClickHandler) {\r\n    const btn = Utils.createElement<HTMLButtonElement>(\r\n      `<button data-action=\"cancel\">${$t('cancel')}</button>`,\r\n    )\r\n    btn.onclick = this.onBtnClick(handler)\r\n    this.$actions.appendChild(btn)\r\n\r\n    return this\r\n  }\r\n\r\n  private onBtnClick(handler: BtnClickHandler) {\r\n    return (evt: Event) => {\r\n      const re = handler(evt.currentTarget as HTMLElement, this)\r\n      if (re === undefined || re === true) {\r\n        this.$el.remove()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import CaptchaChecker from './captcha'\r\nimport AdminChecker from './admin'\r\nimport type { Api } from '@/api'\r\nimport Dialog from '@/components/dialog'\r\nimport $t from '@/i18n'\r\nimport type { ContextApi } from '@/types'\r\nimport type User from '@/lib/user'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport interface CheckerCaptchaPayload extends CheckerPayload {\r\n  img_data?: string\r\n  iframe?: string\r\n}\r\n\r\nexport interface CheckerPayload {\r\n  onSuccess?: () => void\r\n  onMount?: (dialogEl: HTMLElement) => void\r\n  onCancel?: () => void\r\n}\r\n\r\nexport interface CheckerLauncherOptions {\r\n  getCtx: () => ContextApi\r\n  getApi: () => Api\r\n  getCaptchaIframeURL: () => string\r\n  onReload: () => void\r\n}\r\n\r\nfunction wrapPromise<P extends CheckerPayload = CheckerPayload>(fn: (p: P) => void) {\r\n  return (payload: P) =>\r\n    new Promise<void>((resolve, reject) => {\r\n      const cancelFn = payload.onCancel\r\n      payload.onCancel = () => {\r\n        cancelFn && cancelFn()\r\n        reject(new Error('user canceled the checker'))\r\n      }\r\n      const successFn = payload.onSuccess\r\n      payload.onSuccess = () => {\r\n        successFn && successFn()\r\n        resolve()\r\n      }\r\n      fn(payload)\r\n    })\r\n}\r\n\r\n/**\r\n * Checker 发射台\r\n */\r\nexport default class CheckerLauncher {\r\n  constructor(private opts: CheckerLauncherOptions) {}\r\n\r\n  public checkCaptcha: (payload: CheckerCaptchaPayload) => Promise<void> = wrapPromise((p) => {\r\n    this.fire(CaptchaChecker, p, (ctx) => {\r\n      ctx.set('img_data', p.img_data)\r\n      ctx.set('iframe', p.iframe)\r\n    })\r\n  })\r\n\r\n  public checkAdmin: (payload: CheckerPayload) => Promise<void> = wrapPromise((p) => {\r\n    this.fire(AdminChecker, p)\r\n  })\r\n\r\n  public fire(checker: Checker, payload: CheckerPayload, postFire?: (c: CheckerCtx) => void) {\r\n    // 显示层\r\n    const layer = this.opts.getCtx().get('layerManager').create(`checker-${new Date().getTime()}`)\r\n    layer.show()\r\n\r\n    const close = () => {\r\n      layer.destroy()\r\n    }\r\n\r\n    // 构建 Checker 的上下文\r\n    const checkerStore: CheckerStore = {}\r\n    let hideInteractInput = false\r\n    const checkerCtx: CheckerCtx = {\r\n      set: (key, val) => {\r\n        checkerStore[key] = val\r\n      },\r\n      get: (key) => checkerStore[key],\r\n      getOpts: () => this.opts,\r\n      getUser: () => this.opts.getCtx().get('user'),\r\n      getApi: () => this.opts.getApi(),\r\n      hideInteractInput: () => {\r\n        hideInteractInput = true\r\n      },\r\n      triggerSuccess: () => {\r\n        close()\r\n        if (checker.onSuccess) checker.onSuccess(checkerCtx, '', '', formEl)\r\n        if (payload.onSuccess) payload.onSuccess()\r\n      },\r\n      cancel: () => {\r\n        close()\r\n        if (payload.onCancel) payload.onCancel()\r\n      },\r\n    }\r\n\r\n    if (postFire) postFire(checkerCtx)\r\n\r\n    // 创建表单\r\n    const formEl = Utils.createElement()\r\n    formEl.appendChild(checker.body(checkerCtx))\r\n\r\n    // 输入框\r\n    const $input = Utils.createElement<HTMLInputElement>(\r\n      `<input id=\"check\" type=\"${checker.inputType || 'text'}\" autocomplete=\"off\" required placeholder=\"\">`,\r\n    )\r\n    formEl.appendChild($input)\r\n    setTimeout(() => $input.focus(), 80) // 延迟 Focus\r\n\r\n    // 绑定键盘事件\r\n    $input.onkeyup = (evt) => {\r\n      if (evt.key === 'Enter' || evt.keyCode === 13) {\r\n        // 按下回车键\r\n        evt.preventDefault()\r\n        layer.getEl().querySelector<HTMLButtonElement>('button[data-action=\"confirm\"]')!.click()\r\n      }\r\n    }\r\n\r\n    let btnTextOrg: string | undefined\r\n    const dialog = new Dialog(formEl)\r\n\r\n    // 确认按钮\r\n    dialog.setYes((btnEl) => {\r\n      const inputVal = $input.value.trim()\r\n\r\n      // 按钮操作\r\n      if (!btnTextOrg) btnTextOrg = btnEl.innerText\r\n      const btnTextSet = (btnText: string) => {\r\n        btnEl.innerText = btnText\r\n        btnEl.classList.add('error')\r\n      }\r\n      const btnTextRestore = () => {\r\n        btnEl.innerText = btnTextOrg || ''\r\n        btnEl.classList.remove('error')\r\n      }\r\n\r\n      btnEl.innerText = `${$t('loading')}...`\r\n\r\n      // 发送请求\r\n      checker\r\n        .request(checkerCtx, inputVal)\r\n        .then((data) => {\r\n          // 请求成功\r\n          close()\r\n\r\n          if (checker.onSuccess) checker.onSuccess(checkerCtx, data, inputVal, formEl)\r\n          if (payload.onSuccess) payload.onSuccess()\r\n        })\r\n        .catch((err) => {\r\n          // 请求失败\r\n          btnTextSet(String(err.message || String(err)))\r\n\r\n          if (checker.onError) checker.onError(checkerCtx, err, inputVal, formEl)\r\n\r\n          // 错误显示 3s 后恢复按钮\r\n          const tf = setTimeout(() => btnTextRestore(), 3000)\r\n          $input.onfocus = () => {\r\n            btnTextRestore()\r\n            clearTimeout(tf)\r\n          }\r\n        })\r\n\r\n      return false\r\n    })\r\n\r\n    // 取消按钮\r\n    dialog.setNo(() => {\r\n      close()\r\n      if (payload.onCancel) payload.onCancel()\r\n      return false\r\n    })\r\n\r\n    if (hideInteractInput) {\r\n      $input.style.display = 'none'\r\n      dialog.$el.querySelector<HTMLElement>('.atk-layer-dialog-actions')!.style.display = 'none'\r\n    }\r\n\r\n    // 层装载 dialog 元素\r\n    layer.getEl().append(dialog.$el)\r\n\r\n    // onMount 回调\r\n    if (payload.onMount) payload.onMount(dialog.$el)\r\n  }\r\n}\r\n\r\nexport interface Checker<T = any> {\r\n  el?: HTMLElement\r\n  inputType?: 'password' | 'text'\r\n  body: (checker: CheckerCtx) => HTMLElement\r\n  request: (checker: CheckerCtx, inputVal: string) => Promise<T>\r\n  onSuccess?: (checker: CheckerCtx, respData: T, inputVal: string, formEl: HTMLElement) => void\r\n  onError?: (checker: CheckerCtx, errData: any, inputVal: string, formEl: HTMLElement) => void\r\n}\r\n\r\ninterface CheckerStore {\r\n  val?: string\r\n  img_data?: string\r\n  iframe?: string\r\n}\r\n\r\nexport interface CheckerCtx {\r\n  get<K extends keyof CheckerStore>(key: K): CheckerStore[K]\r\n  set<K extends keyof CheckerStore>(key: K, val: CheckerStore[K]): void\r\n  getOpts(): CheckerLauncherOptions\r\n  getApi(): Api\r\n  getUser(): User\r\n  hideInteractInput(): void\r\n  triggerSuccess(): void\r\n  cancel(): void\r\n}\r\n","import type { ContextApi } from '@/types'\r\n\r\nexport default abstract class Component {\r\n  public $el!: HTMLElement\r\n  public get conf() {\r\n    return this.ctx.conf\r\n  }\r\n\r\n  public constructor(public ctx: ContextApi) {}\r\n\r\n  getEl() {\r\n    return this.$el\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-main-editor\\\">\\r\\n  <div class=\\\"atk-header\\\">\\r\\n    <input name=\\\"nick\\\" class=\\\"atk-nick\\\" type=\\\"text\\\" required=\\\"required\\\" />\\r\\n    <input name=\\\"email\\\" class=\\\"atk-email\\\" type=\\\"email\\\" required=\\\"required\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"atk-textarea-wrap\\\">\\r\\n    <textarea class=\\\"atk-textarea\\\"></textarea>\\r\\n  </div>\\r\\n  <div class=\\\"atk-plug-panel-wrap\\\" style=\\\"display: none\\\"></div>\\r\\n  <div class=\\\"atk-bottom\\\">\\r\\n    <div class=\\\"atk-item atk-bottom-left\\\">\\r\\n      <span class=\\\"atk-state-wrap\\\"></span>\\r\\n      <span class=\\\"atk-plug-btn-wrap\\\"></span>\\r\\n    </div>\\r\\n    <div class=\\\"atk-item\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"atk-send-btn\\\"></button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"atk-notify-wrap\\\"></div>\\r\\n</div>\\r\\n\"","import * as Utils from '../lib/utils'\r\nimport EditorHTML from './editor.html?raw'\r\n\r\nconst Sel = {\r\n  $header: '.atk-header',\r\n  $nick: '.atk-header [name=\"nick\"]',\r\n  $email: '.atk-header [name=\"email\"]',\r\n  $link: '.atk-header [name=\"link\"]',\r\n  $textareaWrap: '.atk-textarea-wrap',\r\n  $textarea: '.atk-textarea',\r\n  $bottom: '.atk-bottom',\r\n  $submitBtn: '.atk-send-btn',\r\n  $notifyWrap: '.atk-notify-wrap',\r\n  $bottomLeft: '.atk-bottom-left',\r\n  $stateWrap: '.atk-state-wrap',\r\n  $plugBtnWrap: '.atk-plug-btn-wrap',\r\n  $plugPanelWrap: '.atk-plug-panel-wrap',\r\n}\r\n\r\nexport interface EditorUI extends Record<keyof typeof Sel, HTMLElement> {\r\n  $el: HTMLElement\r\n  $nick: HTMLInputElement\r\n  $email: HTMLInputElement\r\n  $link: HTMLInputElement\r\n  $textarea: HTMLTextAreaElement\r\n  $submitBtn: HTMLButtonElement\r\n  $sendReplyBtn?: HTMLElement\r\n  $editCancelBtn?: HTMLElement\r\n}\r\n\r\nexport function render() {\r\n  const $el = Utils.createElement(EditorHTML)\r\n  const ui = { $el }\r\n  Object.entries(Sel).forEach(([k, sel]) => {\r\n    ui[k] = $el.querySelector(sel)\r\n  })\r\n  return ui as EditorUI\r\n}\r\n","import type PlugKit from './_kit'\r\nimport type { CommentData, EditorState } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\n/**\r\n * Editor 插件\r\n */\r\ninterface EditorPlug {\r\n  $btn?: HTMLElement\r\n  $panel?: HTMLElement\r\n  contentTransformer?(rawContent: string): string\r\n  editorStateEffectWhen?: EditorState\r\n  editorStateEffect?(comment: CommentData): () => void\r\n}\r\n\r\nclass EditorPlug {\r\n  constructor(protected kit: PlugKit) {}\r\n\r\n  /** Use plug btn will add a btn on the bottom of editor */\r\n  useBtn(html: string = '<div></div>') {\r\n    this.$btn = Utils.createElement(`<span class=\"atk-plug-btn\">${html}</span>`)\r\n    return this.$btn\r\n  }\r\n\r\n  /** Use plug panel will show the panel when btn is clicked */\r\n  usePanel(html: string = '<div></div>') {\r\n    this.$panel = Utils.createElement(html)\r\n    return this.$panel\r\n  }\r\n\r\n  /** Use the content transformer to handle the content of the last submit by the editor */\r\n  useContentTransformer(func: (raw: string) => string) {\r\n    this.contentTransformer = func\r\n  }\r\n\r\n  /** Listen the event of panel show */\r\n  usePanelShow(func: () => void) {\r\n    this.kit.useEvents().on('panel-show', (aPlug) => {\r\n      if (aPlug === this) func()\r\n    })\r\n  }\r\n\r\n  /** Listen the event of panel hide */\r\n  usePanelHide(func: () => void) {\r\n    this.kit.useEvents().on('panel-hide', (aPlug) => {\r\n      if (aPlug === this) func()\r\n    })\r\n  }\r\n\r\n  /** Use editor state modifier */\r\n  useEditorStateEffect(stateName: EditorState, effectFn: (comment: CommentData) => () => void) {\r\n    this.editorStateEffectWhen = stateName\r\n    this.editorStateEffect = effectFn\r\n  }\r\n}\r\n\r\nexport default EditorPlug\r\n","import EditorPlug from './_plug'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport default class Mover extends EditorPlug {\r\n  private isMoved = false\r\n\r\n  move(afterEl: HTMLElement) {\r\n    if (this.isMoved) return\r\n    this.isMoved = true\r\n\r\n    const editorEl = this.kit.useUI().$el\r\n\r\n    editorEl.after(Utils.createElement('<div class=\"atk-editor-travel-placeholder\"></div>'))\r\n\r\n    const $travelPlace = Utils.createElement('<div></div>')\r\n    afterEl.after($travelPlace)\r\n    $travelPlace.replaceWith(editorEl)\r\n\r\n    editorEl.classList.add('atk-fade-in') // 添加渐入动画\r\n    editorEl.classList.add('editor-traveling')\r\n  }\r\n\r\n  back() {\r\n    if (!this.isMoved) return\r\n    this.isMoved = false\r\n    this.kit\r\n      .useGlobalCtx()\r\n      .$root.querySelector('.atk-editor-travel-placeholder')\r\n      ?.replaceWith(this.kit.useUI().$el)\r\n    this.kit.useUI().$el.classList.remove('editor-traveling')\r\n  }\r\n}\r\n","import Mover from '../plugins/editor/mover'\r\nimport type Editor from './editor'\r\nimport type { EditorState, CommentData } from '@/types'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport default class EditorStateManager {\r\n  constructor(private editor: Editor) {}\r\n\r\n  private stateCurt: EditorState = 'normal'\r\n  private stateUnmountFn: (() => void) | null = null\r\n\r\n  /** Get current state */\r\n  get() {\r\n    return this.stateCurt\r\n  }\r\n\r\n  /**\r\n   * Switch editor state\r\n   *\r\n   * @param state The state to switch\r\n   * @param payload The cause of state switch\r\n   */\r\n  switch(state: EditorState, payload?: { $comment: HTMLElement; comment: CommentData }) {\r\n    // trigger unmount\r\n    if (this.stateUnmountFn) {\r\n      this.stateUnmountFn()\r\n      this.stateUnmountFn = null\r\n\r\n      // move editor back to the initial position\r\n      this.editor.getPlugs()?.get(Mover)?.back()\r\n    }\r\n\r\n    // invoke effect function and save unmount function\r\n    if (state !== 'normal' && payload) {\r\n      // move editor position\r\n      let moveAfterEl = payload.$comment\r\n      if (!this.editor.conf.flatMode)\r\n        moveAfterEl = moveAfterEl.querySelector<HTMLElement>('.atk-footer')!\r\n      this.editor.getPlugs()?.get(Mover)?.move(moveAfterEl)\r\n\r\n      const $relative =\r\n        this.editor.ctx.conf.scrollRelativeTo && this.editor.ctx.conf.scrollRelativeTo()\r\n      Ui.scrollIntoView(this.editor.getUI().$el, true, $relative)\r\n\r\n      const plugin = this.editor\r\n        .getPlugs()\r\n        ?.getPlugs()\r\n        .find((p) => p.editorStateEffectWhen === state)\r\n      if (plugin && plugin.editorStateEffect) {\r\n        this.stateUnmountFn = plugin.editorStateEffect(payload.comment)\r\n      }\r\n    }\r\n\r\n    // change current state\r\n    this.stateCurt = state\r\n  }\r\n}\r\n","import Component from '../lib/component'\r\nimport * as Ui from '../lib/ui'\r\nimport marked from '../lib/marked'\r\nimport { render, EditorUI } from './ui'\r\nimport EditorStateManager from './state'\r\nimport type { CommentData, ContextApi, EditorApi } from '@/types'\r\n\r\nclass Editor extends Component implements EditorApi {\r\n  private ui: EditorUI\r\n  private state: EditorStateManager\r\n\r\n  getUI() {\r\n    return this.ui\r\n  }\r\n  getPlugs() {\r\n    return this.ctx.get('editorPlugs')\r\n  }\r\n  getState() {\r\n    return this.state.get()\r\n  }\r\n\r\n  constructor(ctx: ContextApi) {\r\n    super(ctx)\r\n\r\n    // init editor ui\r\n    this.ui = render()\r\n    this.$el = this.ui.$el\r\n\r\n    // init state manager\r\n    this.state = new EditorStateManager(this)\r\n  }\r\n\r\n  getHeaderInputEls() {\r\n    return { nick: this.ui.$nick, email: this.ui.$email }\r\n  }\r\n\r\n  getContentFinal() {\r\n    let content = this.getContentRaw()\r\n\r\n    // plug hook: final content transformer\r\n    const plugs = this.getPlugs()\r\n    if (plugs) content = plugs.getTransformedContent(content)\r\n\r\n    return content\r\n  }\r\n\r\n  getContentRaw() {\r\n    return this.ui.$textarea.value || ''\r\n  }\r\n\r\n  getContentMarked() {\r\n    return marked(this.getContentFinal())\r\n  }\r\n\r\n  setContent(val: string) {\r\n    this.ui.$textarea.value = val\r\n\r\n    // plug hook: content updated\r\n    this.getPlugs()?.getEvents().trigger('content-updated', val)\r\n  }\r\n\r\n  insertContent(val: string) {\r\n    if ((document as any).selection) {\r\n      this.ui.$textarea.focus()\r\n      ;(document as any).selection.createRange().text = val\r\n      this.ui.$textarea.focus()\r\n    } else if (this.ui.$textarea.selectionStart || this.ui.$textarea.selectionStart === 0) {\r\n      const sStart = this.ui.$textarea.selectionStart\r\n      const sEnd = this.ui.$textarea.selectionEnd\r\n      const sT = this.ui.$textarea.scrollTop\r\n      this.setContent(\r\n        this.ui.$textarea.value.substring(0, sStart) +\r\n          val +\r\n          this.ui.$textarea.value.substring(sEnd, this.ui.$textarea.value.length),\r\n      )\r\n      this.ui.$textarea.focus()\r\n      this.ui.$textarea.selectionStart = sStart + val.length\r\n      this.ui.$textarea.selectionEnd = sStart + val.length\r\n      this.ui.$textarea.scrollTop = sT\r\n    } else {\r\n      this.ui.$textarea.focus()\r\n      this.ui.$textarea.value += val\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    this.ui.$textarea.focus()\r\n  }\r\n\r\n  reset() {\r\n    this.setContent('')\r\n    this.resetState()\r\n  }\r\n\r\n  resetState() {\r\n    this.state.switch('normal')\r\n  }\r\n\r\n  setReply(comment: CommentData, $comment: HTMLElement) {\r\n    this.state.switch('reply', { comment, $comment })\r\n  }\r\n\r\n  setEditComment(comment: CommentData, $comment: HTMLElement) {\r\n    this.state.switch('edit', { comment, $comment })\r\n  }\r\n\r\n  showNotify(msg: string, type: any) {\r\n    // Ui.showNotify(this.ui.$notifyWrap, msg, type)\r\n  }\r\n\r\n  showLoading() {\r\n    Ui.showLoading(this.ui.$el)\r\n  }\r\n\r\n  hideLoading() {\r\n    Ui.hideLoading(this.ui.$el)\r\n  }\r\n\r\n  submit() {\r\n    const next = () => this.ctx.trigger('editor-submit')\r\n    if (this.ctx.conf.beforeSubmit) {\r\n      this.ctx.conf.beforeSubmit(this, next)\r\n    } else {\r\n      next()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Editor\r\n","import SidebarHTML from './sidebar-layer.html?raw'\r\nimport type { Layer } from './layer'\r\nimport type { ContextApi, SidebarShowPayload } from '@/types'\r\nimport Component from '@/lib/component'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport default class SidebarLayer extends Component {\r\n  public layer?: Layer\r\n  public $header: HTMLElement\r\n  public $closeBtn: HTMLElement\r\n  public $iframeWrap: HTMLElement\r\n  public $iframe?: HTMLIFrameElement\r\n\r\n  constructor(ctx: ContextApi) {\r\n    super(ctx)\r\n\r\n    this.$el = Utils.createElement(SidebarHTML)\r\n    this.$header = this.$el.querySelector('.atk-sidebar-header')!\r\n    this.$closeBtn = this.$header.querySelector('.atk-sidebar-close')!\r\n    this.$iframeWrap = this.$el.querySelector('.atk-sidebar-iframe-wrap')!\r\n\r\n    this.$closeBtn.onclick = () => {\r\n      this.hide()\r\n    }\r\n\r\n    // event\r\n    this.ctx.on('user-changed', () => {\r\n      this.refreshOnShow = true\r\n    })\r\n  }\r\n\r\n  /** Refresh iFrame on show */\r\n  private refreshOnShow = true\r\n\r\n  /** Animation timer */\r\n  private animTimer?: any = undefined\r\n\r\n  /** 显示 */\r\n  public async show(conf: SidebarShowPayload = {}) {\r\n    this.$el.style.transform = '' // 动画清除，防止二次打开失效\r\n\r\n    // init layer\r\n    this.initLayer()\r\n    this.layer!.show()\r\n\r\n    // init iframe\r\n    if (this.refreshOnShow) {\r\n      this.refreshOnShow = false\r\n      this.$iframeWrap.innerHTML = ''\r\n      this.$iframe = this.createIframe(conf.view)\r\n      this.$iframeWrap.append(this.$iframe)\r\n    } else {\r\n      // Sync Dark Mode (reload iframe if not match)\r\n      const $iframe = this.$iframe!\r\n      const iFrameSrc = $iframe.src\r\n      if (this.getDarkMode() !== iFrameSrc.includes('&darkMode=1')) {\r\n        this.iframeLoad(\r\n          $iframe,\r\n          this.getDarkMode()\r\n            ? iFrameSrc.concat('&darkMode=1')\r\n            : iFrameSrc.replace('&darkMode=1', ''),\r\n        )\r\n      }\r\n    }\r\n\r\n    // 管理员身份验证 (若身份失效，弹出验证窗口)\r\n    this.authCheck({\r\n      onSuccess: () => this.show(conf), // retry show after auth check\r\n    })\r\n\r\n    // 执行滑动显示动画\r\n    this.animTimer = setTimeout(() => {\r\n      this.animTimer = undefined\r\n      this.$el.style.transform = 'translate(0, 0)'\r\n\r\n      setTimeout(() => {\r\n        this.ctx.getData().updateNotifies([])\r\n      }, 0)\r\n\r\n      this.ctx.trigger('sidebar-show')\r\n    }, 100)\r\n  }\r\n\r\n  /** 隐藏 */\r\n  public hide() {\r\n    this.layer?.hide()\r\n  }\r\n\r\n  // --------------------------------------------------\r\n\r\n  private async authCheck(opts: { onSuccess: () => void }) {\r\n    const data = (\r\n      await this.ctx.getApi().user.getUserStatus({\r\n        ...this.ctx.getApi().getUserFields(),\r\n      })\r\n    ).data\r\n    if (data.is_admin && !data.is_login) {\r\n      this.refreshOnShow = true\r\n\r\n      // show checker layer\r\n      this.ctx.checkAdmin({\r\n        onSuccess: () => {\r\n          setTimeout(() => {\r\n            opts.onSuccess()\r\n          }, 500)\r\n        },\r\n        onCancel: () => {\r\n          this.hide()\r\n        },\r\n      })\r\n\r\n      // hide sidebar layer\r\n      this.hide()\r\n    }\r\n  }\r\n\r\n  private initLayer() {\r\n    if (this.layer) return\r\n\r\n    this.layer = this.ctx.get('layerManager').create('sidebar', this.$el)\r\n    this.layer.setOnAfterHide(() => {\r\n      // 防止评论框被吞\r\n      this.ctx.editorResetState()\r\n\r\n      // interrupt animation\r\n      this.animTimer && clearTimeout(this.animTimer)\r\n\r\n      // perform transform\r\n      this.$el.style.transform = ''\r\n\r\n      // trigger event\r\n      this.ctx.trigger('sidebar-hide')\r\n    })\r\n  }\r\n\r\n  private createIframe(view?: string) {\r\n    const $iframe = Utils.createElement<HTMLIFrameElement>(\r\n      '<iframe referrerpolicy=\"strict-origin-when-cross-origin\"></iframe>',\r\n    )\r\n\r\n    // 准备 Iframe 参数\r\n    const baseURL = import.meta.env.DEV\r\n      ? 'http://localhost:23367/'\r\n      : Utils.getURLBasedOnApi({\r\n          base: this.ctx.conf.server,\r\n          path: '/sidebar/',\r\n        })\r\n\r\n    const query: any = {\r\n      pageKey: this.conf.pageKey,\r\n      site: this.conf.site || '',\r\n      user: JSON.stringify(this.ctx.get('user').getData()),\r\n      time: +new Date(),\r\n    }\r\n\r\n    if (view) query.view = view\r\n    if (this.getDarkMode()) query.darkMode = '1'\r\n\r\n    const urlParams = new URLSearchParams(query)\r\n    this.iframeLoad($iframe, `${baseURL}?${urlParams.toString()}`)\r\n\r\n    return $iframe\r\n  }\r\n\r\n  private getDarkMode() {\r\n    return this.conf.darkMode === 'auto'\r\n      ? window.matchMedia('(prefers-color-scheme: dark)').matches\r\n      : this.conf.darkMode\r\n  }\r\n\r\n  private iframeLoad($iframe: HTMLIFrameElement, src: string) {\r\n    $iframe.src = src\r\n\r\n    // 加载动画\r\n    Ui.showLoading(this.$iframeWrap)\r\n    $iframe.onload = () => {\r\n      Ui.hideLoading(this.$iframeWrap)\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-sidebar-layer\\\">\\r\\n  <div class=\\\"atk-sidebar-inner\\\">\\r\\n    <div class=\\\"atk-sidebar-header\\\">\\r\\n      <div class=\\\"atk-sidebar-close\\\">\\r\\n        <i class=\\\"atk-icon atk-icon-close-slim\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"atk-sidebar-iframe-wrap\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import type { LayoutStrategyCreator } from '.'\r\nimport type { CommentNode } from '@/comment'\r\nimport * as Ui from '@/lib/ui'\r\nimport * as ListNest from '@/list/nest'\r\n\r\nexport const createNestStrategy: LayoutStrategyCreator = (opts) => ({\r\n  import: (comments) => {\r\n    // 遍历 root 评论\r\n    const rootNodes = ListNest.makeNestCommentNodeList(comments, opts.nestSortBy, opts.nestMax)\r\n    rootNodes.forEach((rootNode: ListNest.CommentNode) => {\r\n      const rootC = opts.createCommentNode(rootNode.comment)\r\n\r\n      // 显示并播放渐入动画\r\n      opts.$commentsWrap?.appendChild(rootC.getEl())\r\n      rootC.getRender().playFadeAnim()\r\n\r\n      // 加载子评论\r\n      const loadChildren = (parentC: CommentNode, parentNode: ListNest.CommentNode) => {\r\n        parentNode.children.forEach((node: ListNest.CommentNode) => {\r\n          const replyD = comments.find((c) => c.id === node.comment.rid)\r\n          const childD = node.comment\r\n          const childC = opts.createCommentNode(childD, replyD)\r\n\r\n          // 插入到父评论中\r\n          parentC.putChild(childC)\r\n\r\n          // 递归加载子评论\r\n          loadChildren(childC, node)\r\n        })\r\n      }\r\n      loadChildren(rootC, rootNode)\r\n\r\n      // 限高检测\r\n      rootC.getRender().checkHeightLimit()\r\n    })\r\n  },\r\n  insert: (comment, replyComment) => {\r\n    // 嵌套模式\r\n    const node = opts.createCommentNode(comment, replyComment)\r\n\r\n    if (comment.rid === 0) {\r\n      // root评论 新增\r\n      opts.$commentsWrap?.prepend(node.getEl())\r\n    } else {\r\n      // 子评论 新增\r\n      const parent = opts.findCommentNode(comment.rid)\r\n      if (parent) {\r\n        parent.putChild(node, opts.nestSortBy === 'DATE_ASC' ? 'append' : 'prepend')\r\n\r\n        // 若父评论存在 “子评论部分” 限高，取消限高\r\n        node.getParents().forEach((p) => {\r\n          p.getRender().heightLimitRemoveForChildren()\r\n        })\r\n      }\r\n    }\r\n\r\n    node.getRender().checkHeightLimit()\r\n\r\n    node.scrollIntoView() // 滚动到可以见\r\n    node.getRender().playFadeAnim() // 播放评论渐出动画\r\n  },\r\n})\r\n","import type { CommentData } from '@/types'\r\n\r\nexport type CommentNode = {\r\n  id: number\r\n  comment: CommentData\r\n  children: CommentNode[]\r\n  parent?: CommentNode\r\n  level: number\r\n}\r\n\r\nexport type SortByType = 'DATE_DESC' | 'DATE_ASC' | 'SRC_INDEX' | 'VOTE_UP_DESC'\r\n\r\n// 构建树状结构列表\r\nexport function makeNestCommentNodeList(\r\n  srcData: CommentData[],\r\n  sortBy: SortByType = 'DATE_DESC',\r\n  nestMax = 2,\r\n) {\r\n  const nodeList: CommentNode[] = []\r\n\r\n  const roots = srcData.filter((o) => o.rid === 0)\r\n  roots.forEach((root: CommentData) => {\r\n    const rootNode: CommentNode = {\r\n      id: root.id,\r\n      comment: root,\r\n      children: [],\r\n      level: 1,\r\n    }\r\n\r\n    rootNode.parent = rootNode\r\n    nodeList.push(rootNode)\r\n    ;(function loadChildren(parentNode: CommentNode) {\r\n      const children = srcData.filter((o) => o.rid === parentNode.id)\r\n      if (children.length === 0) return\r\n      if (parentNode.level >= nestMax) parentNode = parentNode.parent!\r\n      children.forEach((child: CommentData) => {\r\n        const childNode: CommentNode = {\r\n          id: child.id,\r\n          comment: child,\r\n          children: [],\r\n          parent: parentNode,\r\n          level: parentNode.level + 1,\r\n        }\r\n\r\n        parentNode.children.push(childNode)\r\n        loadChildren(childNode)\r\n      })\r\n    })(rootNode)\r\n  })\r\n\r\n  // 排序\r\n  const sortFunc = (a: CommentNode, b: CommentNode): number => {\r\n    let v = a.id - b.id\r\n    if (sortBy === 'DATE_ASC') v = +new Date(a.comment.date) - +new Date(b.comment.date)\r\n    else if (sortBy === 'DATE_DESC') v = +new Date(b.comment.date) - +new Date(a.comment.date)\r\n    else if (sortBy === 'SRC_INDEX') v = srcData.indexOf(a.comment) - srcData.indexOf(b.comment)\r\n    else if (sortBy === 'VOTE_UP_DESC') v = b.comment.vote_up - a.comment.vote_up\r\n    return v\r\n  }\r\n\r\n  ;(function sortLevels(nodes: CommentNode[]) {\r\n    nodes.forEach((node) => {\r\n      node.children = node.children.sort(sortFunc)\r\n      sortLevels(node.children)\r\n    })\r\n  })(nodeList)\r\n\r\n  return nodeList\r\n}\r\n","import type { LayoutStrategyCreator, LayoutOptions } from '.'\r\nimport type { CommentData } from '@/types'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport const createFlatStrategy: LayoutStrategyCreator = (opts) => ({\r\n  import: (comments) => {\r\n    comments.forEach((comment: CommentData) => {\r\n      const replyComment =\r\n        comment.rid === 0 ? undefined : comments.find((c) => c.id === comment.rid)\r\n      insertComment(opts, 'append', comment, replyComment)\r\n    })\r\n  },\r\n  insert: (comment, replyComment) => {\r\n    const node = insertComment(opts, 'prepend', comment, replyComment)\r\n    node.scrollIntoView()\r\n  },\r\n})\r\n\r\n/** 导入评论 · 平铺模式 */\r\nfunction insertComment(\r\n  opts: LayoutOptions,\r\n  insertMode: 'append' | 'prepend',\r\n  comment: CommentData,\r\n  replyComment?: CommentData | undefined,\r\n) {\r\n  if (comment.is_collapsed) comment.is_allow_reply = false\r\n  const node = opts.createCommentNode(comment, replyComment)\r\n\r\n  // 可见评论添加到界面\r\n  // 注：不可见评论用于显示 “引用内容”\r\n  if (comment.visible) {\r\n    const $comment = node.getEl()\r\n    const $listCommentsWrap = opts.$commentsWrap\r\n    if (insertMode === 'append') $listCommentsWrap?.append($comment)\r\n    if (insertMode === 'prepend') $listCommentsWrap?.prepend($comment)\r\n    node.getRender().playFadeAnim()\r\n  }\r\n\r\n  // 平铺评论插入后 · 内容限高检测\r\n  // 插入列表的评论 (visible=true) 和关联的评论 (visible=false) 都需要检测\r\n  node.getRender().checkHeightLimit()\r\n\r\n  return node\r\n}\r\n","import * as ListNest from '../nest'\r\nimport { createNestStrategy } from './nest'\r\nimport { createFlatStrategy } from './flat'\r\nimport type { CommentNode } from '@/comment'\r\nimport type { CommentData } from '@/types'\r\n\r\nexport interface LayoutOptions {\r\n  /** The comments wrap of list */\r\n  $commentsWrap: HTMLElement\r\n  nestSortBy: ListNest.SortByType\r\n  nestMax: number\r\n  flatMode: boolean\r\n\r\n  createCommentNode(comment: CommentData, replyComment?: CommentData): CommentNode\r\n  findCommentNode(id: number): CommentNode | undefined\r\n}\r\n\r\nexport interface LayoutStrategy {\r\n  import(comments: CommentData[]): void\r\n  insert(comment: CommentData, replyComment?: CommentData): void\r\n}\r\n\r\nexport type LayoutStrategyCreator = (opts: LayoutOptions) => LayoutStrategy\r\n\r\nexport class ListLayout {\r\n  constructor(private options: LayoutOptions) {}\r\n\r\n  private getStrategy() {\r\n    return this.options.flatMode\r\n      ? createFlatStrategy(this.options)\r\n      : createNestStrategy(this.options)\r\n  }\r\n\r\n  import(comments: CommentData[]) {\r\n    this.getStrategy().import(comments)\r\n  }\r\n\r\n  insert(comment: CommentData, replyComment?: CommentData) {\r\n    this.getStrategy().insert(comment, replyComment)\r\n  }\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport $t from '../i18n'\r\n\r\nexport interface IHeightLimitConf {\r\n  /** After expand btn click */\r\n  afterExpandBtnClick?: () => void\r\n  /** Allow Scroll */\r\n  scrollable?: boolean\r\n}\r\n\r\nexport interface IHeightLimitRule {\r\n  /** Target element need to check */\r\n  el: HTMLElement | null | undefined\r\n\r\n  /** Max height (unit: px) */\r\n  max: number\r\n\r\n  /** Whether or not the element contains `<img />` */\r\n  imgCheck?: boolean\r\n}\r\n\r\nexport type THeightLimitRuleSet = IHeightLimitRule[]\r\n\r\n/** Check all elements below the max height limit */\r\nexport function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet) {\r\n  rules.forEach(({ el, max, imgCheck }) => {\r\n    if (!el) return\r\n\r\n    // set max height for avoiding img exceed the limit while loading\r\n    if (imgCheck) el.style.maxHeight = `${max + 1}px` // allow 1px more for next detecting\r\n\r\n    let lock = false\r\n    const _check = () => {\r\n      if (lock) return\r\n      if (Utils.getHeight(el) <= max) return // if not exceed the limit, do nothing\r\n\r\n      const afterExpandBtnClick = () => {\r\n        lock = true // add lock to prevent collapse again after expand when image lazy loaded\r\n        conf.afterExpandBtnClick?.()\r\n      }\r\n\r\n      !conf.scrollable\r\n        ? applyHeightLimit({ el, max, afterExpandBtnClick })\r\n        : applyScrollableHeightLimit({ el, max })\r\n    }\r\n\r\n    // check immediately\r\n    _check()\r\n\r\n    // check images after loaded\r\n    if (imgCheck) {\r\n      // check again when image loaded\r\n      const imgs = el.querySelectorAll<HTMLImageElement>('.atk-content img')\r\n      if (imgs.length === 0) el.style.maxHeight = ''\r\n      imgs.forEach((img) => {\r\n        img.onload = () => _check()\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n/** Height limit CSS class name */\r\nconst HEIGHT_LIMIT_CSS = 'atk-height-limit'\r\n\r\n/** Apply height limit on an element and add expand btn */\r\nexport function applyHeightLimit(obj: {\r\n  el: HTMLElement\r\n  max: number\r\n  afterExpandBtnClick?: (e: MouseEvent) => void\r\n}) {\r\n  if (!obj.el) return\r\n  if (!obj.max) return\r\n  if (obj.el.classList.contains(HEIGHT_LIMIT_CSS)) return\r\n\r\n  obj.el.classList.add(HEIGHT_LIMIT_CSS)\r\n  obj.el.style.height = `${obj.max}px`\r\n  obj.el.style.overflow = 'hidden'\r\n\r\n  /* Expand button */\r\n  const $expandBtn = Utils.createElement(\r\n    `<div class=\"atk-height-limit-btn\">${$t('readMore')}</span>`,\r\n  )\r\n  $expandBtn.onclick = (e) => {\r\n    e.stopPropagation()\r\n    disposeHeightLimit(obj.el)\r\n\r\n    if (obj.afterExpandBtnClick) obj.afterExpandBtnClick(e)\r\n  }\r\n  obj.el.append($expandBtn)\r\n}\r\n\r\n/** Dispose height limit on an element and remove expand btn */\r\nexport function disposeHeightLimit($el: HTMLElement) {\r\n  if (!$el) return\r\n  if (!$el.classList.contains(HEIGHT_LIMIT_CSS)) return\r\n\r\n  $el.classList.remove(HEIGHT_LIMIT_CSS)\r\n  Array.from($el.children).forEach((e) => {\r\n    if (e.classList.contains('atk-height-limit-btn')) e.remove()\r\n  })\r\n  $el.style.height = ''\r\n  $el.style.maxHeight = ''\r\n  $el.style.overflow = ''\r\n}\r\n\r\n/** Height limit scrollable CSS class name */\r\nconst HEIGHT_LIMIT_SCROLL_CSS = 'atk-height-limit-scroll'\r\n\r\n/** Apply scrollable height limit */\r\nexport function applyScrollableHeightLimit(opt: { el: HTMLElement; max: number }) {\r\n  if (!opt.el) return\r\n  if (opt.el.classList.contains(HEIGHT_LIMIT_SCROLL_CSS)) return\r\n  opt.el.classList.add(HEIGHT_LIMIT_SCROLL_CSS)\r\n  opt.el.style.height = `${opt.max}px`\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n\r\n/**\r\n * 评论头部界面\r\n */\r\nexport default function renderHeader(r: Render) {\r\n  Object.entries({\r\n    renderNick,\r\n    renderVerifyBadge,\r\n    renderDate,\r\n    renderUABadge,\r\n  }).forEach(([name, render]) => {\r\n    render(r)\r\n  })\r\n}\r\n\r\nfunction renderNick(r: Render) {\r\n  r.$headerNick = r.$el.querySelector<HTMLElement>('.atk-nick')!\r\n\r\n  r.$headerNick.innerText = r.data.nick\r\n}\r\n\r\nfunction renderVerifyBadge(ctx: Render) {\r\n  ctx.$headerBadgeWrap = ctx.$el.querySelector<HTMLElement>('.atk-badge-wrap')!\r\n  ctx.$headerBadgeWrap.innerHTML = ''\r\n\r\n  const badgeText = ctx.data.badge_name\r\n  const badgeColor = ctx.data.badge_color\r\n  if (badgeText) {\r\n    const $badge = Utils.createElement(`<span class=\"atk-badge\"></span>`)\r\n    $badge.innerText = badgeText.replace('管理员', $t('admin')) // i18n patch\r\n    $badge.style.backgroundColor = badgeColor || ''\r\n    ctx.$headerBadgeWrap.append($badge)\r\n  } else if (ctx.data.is_verified) {\r\n    const $verifiedBadge = Utils.createElement(\r\n      `<span class=\"atk-verified-icon\" title=\"${$t('emailVerified')}\"></span>`,\r\n    ) // 邮箱验证徽章\r\n    ctx.$headerBadgeWrap.append($verifiedBadge)\r\n  }\r\n\r\n  if (ctx.data.is_pinned) {\r\n    const $pinnedBadge = Utils.createElement(`<span class=\"atk-pinned-badge\">${$t('pin')}</span>`) // 置顶徽章\r\n    ctx.$headerBadgeWrap.append($pinnedBadge)\r\n  }\r\n}\r\n\r\nfunction renderDate(ctx: Render) {\r\n  const $date = ctx.$el.querySelector<HTMLElement>('.atk-date')!\r\n  $date.innerText = ctx.comment.getDateFormatted()\r\n  $date.setAttribute('data-atk-comment-date', String(+new Date(ctx.data.date)))\r\n}\r\n\r\nfunction renderUABadge(ctx: Render) {\r\n  if (!ctx.opts.uaBadge && !ctx.data.ip_region) return\r\n\r\n  let $uaWrap = ctx.$header.querySelector('atk-ua-wrap')\r\n  if (!$uaWrap) {\r\n    $uaWrap = Utils.createElement(`<span class=\"atk-ua-wrap\"></span>`)\r\n    ctx.$header.append($uaWrap)\r\n  }\r\n\r\n  $uaWrap.innerHTML = ''\r\n\r\n  if (ctx.data.ip_region) {\r\n    const $regionBadge = Utils.createElement(`<span class=\"atk-region-badge\"></span>`)\r\n    $regionBadge.innerText = ctx.data.ip_region\r\n    $uaWrap.append($regionBadge)\r\n  }\r\n\r\n  if (ctx.opts.uaBadge) {\r\n    const { browser, os } = ctx.comment.getUserUA()\r\n    if (String(browser).trim()) {\r\n      const $uaBrowser = Utils.createElement(`<span class=\"atk-ua ua-browser\"></span>`)\r\n      $uaBrowser.innerText = browser\r\n      $uaWrap.append($uaBrowser)\r\n    }\r\n\r\n    if (String(os).trim()) {\r\n      const $usOS = Utils.createElement(`<span class=\"atk-ua ua-os\"></span>`)\r\n      $usOS.innerText = os\r\n      $uaWrap.append($usOS)\r\n    }\r\n  }\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport $t from '@/i18n'\r\n\r\ninterface ActionBtnOptions {\r\n  /** 按钮文字 (动态/静态) */\r\n  text: (() => string) | string\r\n\r\n  /** 仅管理员可用 */\r\n  adminOnly?: boolean\r\n\r\n  /** 确认操作 */\r\n  confirm?: boolean\r\n\r\n  /** 确认时提示文字 */\r\n  confirmText?: string\r\n}\r\n\r\n/**\r\n * 通用操作按钮\r\n */\r\nexport default class ActionBtn {\r\n  private opts: ActionBtnOptions\r\n  public $el: HTMLElement\r\n\r\n  public isLoading = false // 正在加载\r\n\r\n  public msgRecTimer?: number // 消息显示复原定时器\r\n  public msgRecTimerFunc?: () => void // 消息显示复原操作\r\n  public get isMessaging() {\r\n    return !!this.msgRecTimer\r\n  } // 消息正在显示\r\n\r\n  public isConfirming = false // 正在确认\r\n  public confirmRecTimer?: number // 确认消息复原定时器\r\n\r\n  /** 构造函数 */\r\n  constructor(opts: ActionBtnOptions | string | (() => string)) {\r\n    this.$el = Utils.createElement(`<span class=\"atk-common-action-btn\"></span>`)\r\n\r\n    this.opts = typeof opts !== 'object' ? { text: opts } : opts\r\n    this.$el.innerText = this.getText()\r\n\r\n    // 仅管理员可操作\r\n    if (this.opts.adminOnly) this.$el.setAttribute('atk-only-admin-show', '')\r\n  }\r\n\r\n  /** 将按钮装载到指定元素 */\r\n  public appendTo(dom: HTMLElement) {\r\n    dom.append(this.$el)\r\n    return this\r\n  }\r\n\r\n  /** 获取按钮文字（动态/静态） */\r\n  private getText() {\r\n    return typeof this.opts.text === 'string' ? this.opts.text : this.opts.text()\r\n  }\r\n\r\n  /** 设置点击事件 */\r\n  public setClick(func: () => void) {\r\n    this.$el.onclick = (e) => {\r\n      e.stopPropagation() // 防止穿透\r\n\r\n      // 按钮处于加载状态，禁止点击\r\n      if (this.isLoading) {\r\n        return\r\n      }\r\n\r\n      // 操作确认\r\n      if (this.opts.confirm && !this.isMessaging) {\r\n        const confirmRestore = () => {\r\n          this.isConfirming = false\r\n          this.$el.classList.remove('atk-btn-confirm')\r\n          this.$el.innerText = this.getText()\r\n        }\r\n\r\n        if (!this.isConfirming) {\r\n          this.isConfirming = true\r\n          this.$el.classList.add('atk-btn-confirm')\r\n          this.$el.innerText = this.opts.confirmText || $t('actionConfirm')\r\n          this.confirmRecTimer = window.setTimeout(() => confirmRestore(), 5000)\r\n          return\r\n        }\r\n\r\n        if (this.confirmRecTimer) window.clearTimeout(this.confirmRecTimer)\r\n        confirmRestore()\r\n      }\r\n\r\n      // 立刻释放掉原有的定时器（当显示消息后，用户立刻点击时）\r\n      if (this.msgRecTimer) {\r\n        this.fireMsgRecTimer()\r\n        this.clearMsgRecTimer()\r\n        return\r\n      }\r\n\r\n      // 触发设定的点击事件\r\n      func()\r\n    }\r\n  }\r\n\r\n  /** 文字刷新（动态/静态） */\r\n  public updateText(text?: (() => string) | string) {\r\n    if (text) this.opts.text = text\r\n    this.setLoading(false)\r\n    this.$el.innerText = this.getText()\r\n  }\r\n\r\n  /** 设置加载状态 */\r\n  public setLoading(value: boolean, loadingText?: string) {\r\n    if (this.isLoading === value) return\r\n    this.isLoading = value\r\n    if (value) {\r\n      this.$el.classList.add('atk-btn-loading')\r\n      this.$el.innerText = loadingText || `${$t('loading')}...`\r\n    } else {\r\n      this.$el.classList.remove('atk-btn-loading')\r\n      this.$el.innerText = this.getText()\r\n    }\r\n  }\r\n\r\n  /** 错误消息 */\r\n  public setError(text: string) {\r\n    this.setMsg(text, 'atk-btn-error')\r\n  }\r\n\r\n  /** 警告消息 */\r\n  public setWarn(text: string) {\r\n    this.setMsg(text, 'atk-btn-warn')\r\n  }\r\n\r\n  /** 成功消息 */\r\n  public setSuccess(text: string) {\r\n    this.setMsg(text, 'atk-btn-success')\r\n  }\r\n\r\n  /** 设置消息 */\r\n  public setMsg(text: string, className?: string, duringTime?: number, after?: () => void) {\r\n    this.setLoading(false)\r\n    if (className) this.$el.classList.add(className)\r\n    this.$el.innerText = text\r\n\r\n    // 设定复原 timer\r\n    this.setMsgRecTimer(() => {\r\n      this.$el.innerText = this.getText()\r\n      if (className) this.$el.classList.remove(className)\r\n      if (after) after()\r\n    }, duringTime || 2500) // 消息默认显示持续 2500s\r\n  }\r\n\r\n  /** 设置消息复原操作定时器 */\r\n  private setMsgRecTimer(func: () => void, duringTime: number) {\r\n    this.fireMsgRecTimer()\r\n    this.clearMsgRecTimer()\r\n\r\n    this.msgRecTimerFunc = func\r\n    this.msgRecTimer = window.setTimeout(() => {\r\n      func()\r\n      this.clearMsgRecTimer()\r\n    }, duringTime)\r\n  }\r\n\r\n  /** 立刻触发器复原定时器 */\r\n  private fireMsgRecTimer() {\r\n    if (this.msgRecTimerFunc) this.msgRecTimerFunc()\r\n  }\r\n\r\n  /** 仅清除 timer */\r\n  private clearMsgRecTimer() {\r\n    if (this.msgRecTimer) window.clearTimeout(this.msgRecTimer)\r\n    this.msgRecTimer = undefined\r\n    this.msgRecTimerFunc = undefined\r\n  }\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport ActionBtn from '../../components/action-btn'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 评论操作按钮界面\r\n */\r\nexport default function renderActions(r: Render) {\r\n  Object.entries({\r\n    renderVote,\r\n    renderReply,\r\n    // 管理员操作\r\n    // renderCollapse,\r\n    // renderModerator,\r\n    // renderPin,\r\n    // renderEdit,\r\n    // renderDel,\r\n  }).forEach(([name, render]) => {\r\n    render(r)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 投票\r\nfunction renderVote(r: Render) {\r\n  if (!r.opts.vote) return // 关闭投票功能\r\n\r\n  // 赞同按钮\r\n  r.voteBtnUp = new ActionBtn(() => `${$t('voteUp')} (${r.data.vote_up || 0})`).appendTo(r.$actions)\r\n  r.voteBtnUp.setClick(() => {\r\n    r.comment.getActions().vote('up')\r\n  })\r\n\r\n  // 反对按钮\r\n  if (r.opts.voteDown) {\r\n    r.voteBtnDown = new ActionBtn(() => `${$t('voteDown')} (${r.data.vote_down || 0})`).appendTo(\r\n      r.$actions,\r\n    )\r\n    r.voteBtnDown.setClick(() => {\r\n      r.comment.getActions().vote('down')\r\n    })\r\n  }\r\n}\r\n\r\n// 操作按钮 - 回复\r\nfunction renderReply(r: Render) {\r\n  if (!r.data.is_allow_reply) return // 不允许回复\r\n\r\n  const replyBtn = Utils.createElement(`<span>${$t('reply')}</span>`)\r\n  r.$actions.append(replyBtn)\r\n  replyBtn.addEventListener('click', (e) => {\r\n    e.stopPropagation() // 防止穿透\r\n    r.opts.replyComment(r.data, r.$el)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 折叠\r\nfunction renderCollapse(r: Render) {\r\n  const collapseBtn = new ActionBtn({\r\n    text: () => (r.data.is_collapsed ? $t('expand') : $t('collapse')),\r\n    adminOnly: true,\r\n  })\r\n  collapseBtn.appendTo(r.$actions)\r\n  collapseBtn.setClick(() => {\r\n    r.comment.getActions().adminEdit('collapsed', collapseBtn)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 审核\r\nfunction renderModerator(r: Render) {\r\n  const pendingBtn = new ActionBtn({\r\n    text: () => (r.data.is_pending ? $t('pending') : $t('approved')),\r\n    adminOnly: true,\r\n  })\r\n  pendingBtn.appendTo(r.$actions)\r\n  pendingBtn.setClick(() => {\r\n    r.comment.getActions().adminEdit('pending', pendingBtn)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 置顶\r\nfunction renderPin(r: Render) {\r\n  const pinnedBtn = new ActionBtn({\r\n    text: () => (r.data.is_pinned ? $t('unpin') : $t('pin')),\r\n    adminOnly: true,\r\n  })\r\n  pinnedBtn.appendTo(r.$actions)\r\n  pinnedBtn.setClick(() => {\r\n    r.comment.getActions().adminEdit('pinned', pinnedBtn)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 编辑\r\nfunction renderEdit(r: Render) {\r\n  const editBtn = new ActionBtn({\r\n    text: $t('edit'),\r\n    adminOnly: true,\r\n  })\r\n  editBtn.appendTo(r.$actions)\r\n  editBtn.setClick(() => {\r\n    r.opts.editComment(r.data, r.$el)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 删除\r\nfunction renderDel(r: Render) {\r\n  const delBtn = new ActionBtn({\r\n    text: $t('delete'),\r\n    confirm: true,\r\n    confirmText: $t('deleteConfirm'),\r\n    adminOnly: true,\r\n  })\r\n  delBtn.appendTo(r.$actions)\r\n  delBtn.setClick(() => {\r\n    r.comment.getActions().adminDelete(delBtn)\r\n  })\r\n}\r\n","import type Render from '../render'\r\nimport Avatar from './avatar'\r\nimport Header from './header'\r\nimport Content from './content'\r\nimport ReplyAt from './reply-at'\r\nimport ReplyTo from './reply-to'\r\nimport Pending from './pending'\r\nimport Actions from './actions'\r\n\r\nconst Renders = {\r\n  Avatar,\r\n  Header,\r\n  Content,\r\n  ReplyAt,\r\n  ReplyTo,\r\n  Pending,\r\n  Actions,\r\n}\r\n\r\nexport default function loadRenders(r: Render) {\r\n  Object.entries(Renders).forEach(([name, render]) => {\r\n    render(r)\r\n  })\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\n\r\n/**\r\n * 评论头像界面\r\n */\r\nexport default function renderAvatar(r: Render) {\r\n  const $avatar = r.$el.querySelector<HTMLElement>('.atk-avatar')!\r\n  const $avatarImg = Utils.createElement<HTMLImageElement>('<img />')\r\n\r\n  const avatarURLBuilder = r.opts.avatarURLBuilder\r\n  $avatarImg.src = avatarURLBuilder ? avatarURLBuilder(r.data) : r.comment.getGravatarURL()\r\n\r\n  // if (r.data.link) {\r\n  //   const $avatarA = Utils.createElement<HTMLLinkElement>(\r\n  //     '<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>',\r\n  //   )\r\n  //   $avatarA.href = Utils.isValidURL(r.data.link) ? r.data.link : `https://${r.data.link}`\r\n  //   $avatarA.append($avatarImg)\r\n  //   $avatar.append($avatarA)\r\n  // } else {\r\n  //   $avatar.append($avatarImg)\r\n  // }\r\n  $avatar.append($avatarImg)\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport * as Ui from '../../lib/ui'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 评论内容界面\r\n */\r\nexport default function renderContent(r: Render) {\r\n  if (!r.data.is_collapsed) {\r\n    r.$content.innerHTML = r.comment.getContentMarked()\r\n    r.$content.classList.remove('atk-hide', 'atk-collapsed')\r\n    return\r\n  }\r\n\r\n  // 内容 & 折叠\r\n  r.$content.classList.add('atk-hide', 'atk-type-collapsed')\r\n  const collapsedInfoEl = Utils.createElement(`\r\n    <div class=\"atk-collapsed\">\r\n      <span class=\"atk-text\">${$t('collapsedMsg')}</span>\r\n      <span class=\"atk-show-btn\">${$t('expand')}</span>\r\n    </div>`)\r\n  r.$body.insertAdjacentElement('beforeend', collapsedInfoEl)\r\n\r\n  const contentShowBtn = collapsedInfoEl.querySelector<HTMLElement>('.atk-show-btn')!\r\n  contentShowBtn.addEventListener('click', (e) => {\r\n    e.stopPropagation() // 防止穿透\r\n\r\n    if (r.$content.classList.contains('atk-hide')) {\r\n      r.$content.innerHTML = r.comment.getContentMarked()\r\n      r.$content.classList.remove('atk-hide')\r\n      Ui.playFadeInAnim(r.$content)\r\n      contentShowBtn.innerText = $t('collapse')\r\n    } else {\r\n      r.$content.innerHTML = ''\r\n      r.$content.classList.add('atk-hide')\r\n      contentShowBtn.innerText = $t('expand')\r\n    }\r\n  })\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\n\r\n/**\r\n * Reply user indicator (with arrow icon) in the comment meta header\r\n */\r\nexport default function renderReplyAt(r: Render) {\r\n  if (r.opts.flatMode || r.data.rid === 0) return // if not nested mode or root comment\r\n  if (!r.opts.replyTo) return // if no replyTo data\r\n\r\n  r.$replyAt = Utils.createElement(\r\n    `<span class=\"atk-item atk-reply-at\"><span class=\"atk-nick\"></span></span>`,\r\n  )\r\n\r\n  r.$replyAt.querySelector<HTMLElement>('.atk-nick')!.innerText = `@${r.opts.replyTo.nick}`\r\n  r.$replyAt.onclick = () => {\r\n    r.comment.getActions().goToReplyComment()\r\n  }\r\n\r\n  // 在 $content 前插入\r\n  (r.$content?.firstChild as HTMLElement)!.insertAdjacentElement('afterbegin', r.$replyAt)\r\n\r\n  // r.$content.insertAdjacentElement('afterend', r.$replyAt)\r\n}\r\n","import type Render from '../render'\r\nimport * as Utils from '@/lib/utils'\r\nimport marked from '@/lib/marked'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 关联评论显示 (被回复的评论)\r\n */\r\nexport default function renderReplyTo(r: Render) {\r\n  if (!r.opts.flatMode) return // 仅平铺模式显示\r\n  if (!r.opts.replyTo) return\r\n\r\n  r.$replyTo = Utils.createElement(`\r\n    <div class=\"atk-reply-to\">\r\n      <div class=\"atk-meta\">${$t('reply')} <span class=\"atk-nick\"></span>:</div>\r\n      <div class=\"atk-content\"></div>\r\n    </div>`)\r\n\r\n  // Comment author name\r\n  const $nick = r.$replyTo.querySelector<HTMLElement>('.atk-nick')!\r\n  $nick.innerText = `@${r.opts.replyTo.nick}`\r\n  $nick.onclick = () => {\r\n    r.comment.getActions().goToReplyComment()\r\n  }\r\n\r\n  // Comment content\r\n  let replyContent = marked(r.opts.replyTo.content)\r\n  if (r.opts.replyTo.is_collapsed) replyContent = `[${$t('collapsed')}]`\r\n  r.$replyTo.querySelector<HTMLElement>('.atk-content')!.innerHTML = replyContent\r\n\r\n  // Mount the replyTo element\r\n  r.$body.prepend(r.$replyTo)\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 待审核状态界面\r\n */\r\nexport default function renderPending(r: Render) {\r\n  if (!r.data.is_pending) return\r\n\r\n  const pendingEl = Utils.createElement(`<div class=\"atk-pending\">${$t('pendingMsg')}</div>`)\r\n  r.$body.prepend(pendingEl)\r\n}\r\n","import ActionBtn from '../components/action-btn'\r\nimport * as Utils from '../lib/utils'\r\nimport * as Ui from '../lib/ui'\r\n\r\nimport * as HeightLimit from './height-limit'\r\nimport CommentHTML from './comment.html?raw'\r\nimport loadRenders from './renders'\r\nimport type { CommentNode } from '.'\r\n\r\nexport default class Render {\r\n  public comment: CommentNode\r\n\r\n  public get data() {\r\n    return this.comment.getData()\r\n  }\r\n  public get opts() {\r\n    return this.comment.getOpts()\r\n  }\r\n\r\n  public $el!: HTMLElement\r\n  public $main!: HTMLElement\r\n  public $header!: HTMLElement\r\n  public $headerNick!: HTMLElement\r\n  public $headerBadgeWrap!: HTMLElement\r\n  public $body!: HTMLElement\r\n  public $content!: HTMLElement\r\n  public $childrenWrap!: HTMLElement | null\r\n  public $actions!: HTMLElement\r\n  public voteBtnUp?: ActionBtn\r\n  public voteBtnDown?: ActionBtn\r\n\r\n  public $replyTo?: HTMLElement // 回复评论内容 (平铺下显示)\r\n  public $replyAt?: HTMLElement // 回复 AT（层级嵌套下显示）\r\n\r\n  public constructor(comment: CommentNode) {\r\n    this.comment = comment\r\n  }\r\n\r\n  /**\r\n   * Render the comment ui\r\n   *\r\n   * If comment data is updated, call this method to re-render the comment ui.\r\n   * The method will be called multiple times, so it should be idempotent.\r\n   *\r\n   * Renders may add event listeners to the comment ui, so it should be called only once or override the original.\r\n   * Please be aware of the memory leak caused by the event listener.\r\n   */\r\n  public render() {\r\n    // init ui elements\r\n    this.$el = Utils.createElement(CommentHTML)\r\n\r\n    this.$main = this.$el.querySelector('.atk-main')!\r\n    this.$header = this.$el.querySelector('.atk-header')!\r\n    this.$body = this.$el.querySelector('.atk-body')!\r\n    this.$content = this.$body.querySelector('.atk-content')!\r\n    this.$actions = this.$el.querySelector('.atk-actions')!\r\n\r\n    this.$el.setAttribute('id', `atk-comment-${this.data.id}`)\r\n\r\n    // call all renders\r\n    loadRenders(this)\r\n\r\n    // append children wrap if exists\r\n    if (this.$childrenWrap) {\r\n      this.$main.append(this.$childrenWrap)\r\n    }\r\n\r\n    return this.$el\r\n  }\r\n\r\n  /** 内容限高检测 */\r\n  public checkHeightLimit() {\r\n    const conf = this.opts.heightLimit\r\n    if (!conf || !conf.content || !conf.children) return // 关闭限高\r\n\r\n    const contentMaxH = conf.content\r\n    const childrenMaxH = conf.children\r\n\r\n    HeightLimit.check(\r\n      {\r\n        afterExpandBtnClick: () => {\r\n          // 子评论数仅有 1，直接取消限高\r\n          const children = this.comment.getChildren()\r\n          if (children.length === 1)\r\n            HeightLimit.disposeHeightLimit(children[0].getRender().$content)\r\n        },\r\n        scrollable: conf.scrollable,\r\n      },\r\n      [\r\n        // 评论内容限高\r\n        { el: this.$content, max: contentMaxH, imgCheck: true },\r\n        { el: this.$replyTo, max: contentMaxH, imgCheck: true },\r\n        // 子评论区域限高（仅嵌套模式）\r\n        { el: this.$childrenWrap, max: childrenMaxH, imgCheck: false },\r\n      ],\r\n    )\r\n  }\r\n\r\n  /** 子评论区域移除限高 */\r\n  public heightLimitRemoveForChildren() {\r\n    if (!this.$childrenWrap) return\r\n    HeightLimit.disposeHeightLimit(this.$childrenWrap)\r\n  }\r\n\r\n  /** 渐出动画 */\r\n  playFadeAnim() {\r\n    Ui.playFadeInAnim(this.comment.getRender().$el)\r\n  }\r\n\r\n  /** 渐出动画 · 评论内容区域 */\r\n  playFadeAnimForBody() {\r\n    Ui.playFadeInAnim(this.comment.getRender().$body)\r\n  }\r\n\r\n  /** Perform the flash animation */\r\n  playFlashAnim() {\r\n    // Make sure the class is removed\r\n    this.$el.classList.remove('atk-flash-once')\r\n    window.setTimeout(() => {\r\n      // Add the class to perform the animation\r\n      this.$el.classList.add('atk-flash-once')\r\n    }, 150)\r\n  }\r\n\r\n  /** 获取子评论 Wrap */\r\n  public getChildrenWrap() {\r\n    if (!this.$childrenWrap) {\r\n      // if not exists, create a new one\r\n      this.$childrenWrap = Utils.createElement('<div class=\"atk-comment-children\"></div>')\r\n      this.$main.append(this.$childrenWrap)\r\n    }\r\n    return this.$childrenWrap\r\n  }\r\n\r\n  /** 设置已读 */\r\n  public setUnread(val: boolean) {\r\n    if (val) this.$el.classList.add('atk-unread')\r\n    else this.$el.classList.remove('atk-unread')\r\n  }\r\n\r\n  /** 设置为可点击的评论 */\r\n  public setOpenable(val: boolean) {\r\n    if (val) this.$el.classList.add('atk-openable')\r\n    else this.$el.classList.remove('atk-openable')\r\n  }\r\n\r\n  /** 设置点击评论打开置顶 URL */\r\n  public setOpenURL(url: string) {\r\n    this.setOpenable(true)\r\n    this.$el.onclick = (evt) => {\r\n      evt.stopPropagation()\r\n      window.open(url)\r\n    }\r\n  }\r\n\r\n  /** 设置点击评论时的操作 */\r\n  public setOpenAction(action: () => void) {\r\n    this.setOpenable(true)\r\n    this.$el.onclick = (evt) => {\r\n      evt.stopPropagation()\r\n      action()\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-comment-wrap\\\">\\r\\n  <div class=\\\"atk-comment\\\">\\r\\n    <div class=\\\"atk-avatar\\\"></div>\\r\\n    <div class=\\\"atk-main\\\">\\r\\n      <div class=\\\"atk-header\\\">\\r\\n        <span class=\\\"atk-item atk-nick\\\"></span>\\r\\n        <span class=\\\"atk-badge-wrap\\\"></span>\\r\\n        <span class=\\\"atk-item atk-date\\\"></span>\\r\\n      </div>\\r\\n      <div class=\\\"atk-body\\\">\\r\\n        <div class=\\\"atk-content\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"atk-footer\\\">\\r\\n        <div class=\\\"atk-actions\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import type { CommentNode } from '.'\r\nimport ActionBtn from '@/components/action-btn'\r\nimport $t from '@/i18n'\r\n\r\nexport default class CommentActions {\r\n  private comment: CommentNode\r\n\r\n  private get data() {\r\n    return this.comment.getData()\r\n  }\r\n  private get opts() {\r\n    return this.comment.getOpts()\r\n  }\r\n  private getApi() {\r\n    return this.comment.getOpts().getApi()\r\n  }\r\n\r\n  public constructor(comment: CommentNode) {\r\n    this.comment = comment\r\n  }\r\n\r\n  /** 投票操作 */\r\n  public vote(type: 'up' | 'down') {\r\n    const actionBtn =\r\n      type === 'up' ? this.comment.getRender().voteBtnUp : this.comment.getRender().voteBtnDown\r\n\r\n    this.getApi()\r\n      .votes.vote(`comment_${type}`, this.data.id, {\r\n        ...this.getApi().getUserFields(),\r\n      })\r\n      .then((res) => {\r\n        this.data.vote_up = res.data.up\r\n        this.data.vote_down = res.data.down\r\n        this.comment.getRender().voteBtnUp?.updateText()\r\n        this.comment.getRender().voteBtnDown?.updateText()\r\n      })\r\n      .catch((err) => {\r\n        actionBtn?.setError($t('voteFail'))\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  /** 管理员 - 评论状态修改 */\r\n  public adminEdit(type: 'collapsed' | 'pending' | 'pinned', btnElem: ActionBtn) {\r\n    if (btnElem.isLoading) return // 若正在修改中\r\n\r\n    btnElem.setLoading(true, `${$t('editing')}...`)\r\n\r\n    // 克隆并修改当前数据\r\n    const modify = { ...this.data }\r\n    if (type === 'collapsed') {\r\n      modify.is_collapsed = !modify.is_collapsed\r\n    } else if (type === 'pending') {\r\n      modify.is_pending = !modify.is_pending\r\n    } else if (type === 'pinned') {\r\n      modify.is_pinned = !modify.is_pinned\r\n    }\r\n\r\n    this.getApi()\r\n      .comments.updateComment(this.data.id, {\r\n        ...modify,\r\n      })\r\n      .then((res) => {\r\n        btnElem.setLoading(false)\r\n\r\n        // 刷新当前 Comment UI\r\n        this.comment.setData(res.data)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        btnElem.setError($t('editFail'))\r\n      })\r\n  }\r\n\r\n  /** 管理员 - 评论删除 */\r\n  public adminDelete(btnElem: ActionBtn) {\r\n    if (btnElem.isLoading) return // 若正在删除中\r\n\r\n    btnElem.setLoading(true, `${$t('deleting')}...`)\r\n    this.getApi()\r\n      .comments.deleteComment(this.data.id)\r\n      .then(() => {\r\n        btnElem.setLoading(false)\r\n        if (this.opts.onDelete) this.opts.onDelete(this.comment)\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        btnElem.setError($t('deleteFail'))\r\n      })\r\n  }\r\n\r\n  /** 快速跳转到该评论 */\r\n  public goToReplyComment() {\r\n    const origHash = window.location.hash\r\n    const modifyHash = `#atk-comment-${this.data.rid}`\r\n\r\n    window.location.hash = modifyHash\r\n    if (modifyHash === origHash) window.dispatchEvent(new Event('hashchange')) // 强制触发事件\r\n  }\r\n}\r\n","import type { Api } from '../api'\r\nimport * as Ui from '../lib/ui'\r\nimport * as Utils from '../lib/utils'\r\nimport marked from '../lib/marked'\r\nimport UADetect from '../lib/detect'\r\nimport CommentUI from './render'\r\nimport CommentActions from './actions'\r\nimport $t from '@/i18n'\r\nimport type { CommentData, ArtalkConfig, ContextApi } from '@/types'\r\n\r\nexport interface CommentOptions {\r\n  // Hooks\r\n  onAfterRender?: () => void\r\n  onDelete?: (c: CommentNode) => void\r\n\r\n  /** The comment being replied to (linked comment) */\r\n  replyTo?: CommentData\r\n\r\n  // Referenced from ArtalkConfig\r\n  flatMode: boolean\r\n  vote: boolean\r\n  voteDown: boolean\r\n  uaBadge: boolean\r\n  nestMax: number\r\n  gravatar: ArtalkConfig['gravatar']\r\n  heightLimit: ArtalkConfig['heightLimit']\r\n  avatarURLBuilder: ArtalkConfig['avatarURLBuilder']\r\n  scrollRelativeTo: ArtalkConfig['scrollRelativeTo']\r\n\r\n  // TODO: Move to plugin folder and remove from core\r\n  getApi: () => Api\r\n  replyComment: ContextApi['replyComment']\r\n  editComment: ContextApi['editComment']\r\n}\r\n\r\nexport default class CommentNode {\r\n  $el?: HTMLElement\r\n\r\n  private renderInstance: CommentUI\r\n  private actionInstance: CommentActions\r\n\r\n  private data: CommentData\r\n  private opts: CommentOptions\r\n\r\n  private parent: CommentNode | null\r\n  private children: CommentNode[] = []\r\n\r\n  private nestCurt: number // 当前嵌套层数\r\n\r\n  constructor(data: CommentData, opts: CommentOptions) {\r\n    this.opts = opts\r\n    this.data = { ...data }\r\n    this.data.date = this.data.date.replace(/-/g, '/') // 解决 Safari 日期解析 NaN 问题\r\n\r\n    this.parent = null\r\n    this.nestCurt = 1 // 现在已嵌套 n 层\r\n\r\n    this.actionInstance = new CommentActions(this)\r\n    this.renderInstance = new CommentUI(this)\r\n  }\r\n\r\n  /** 渲染 UI */\r\n  public render() {\r\n    const newEl = this.renderInstance.render()\r\n\r\n    if (this.$el) this.$el.replaceWith(newEl)\r\n    this.$el = newEl\r\n    // Please be aware of the memory leak, the $el may be replaced multiple times.\r\n    // If somewhere else has a reference to the old $el, it will cause a memory leak.\r\n    // So it's limited to use the $el reference by `getEl()`.\r\n    // The `getEl()` will always return the latest $el.\r\n\r\n    if (this.opts.onAfterRender) this.opts.onAfterRender()\r\n  }\r\n\r\n  /** 获取评论操作实例对象 */\r\n  public getActions() {\r\n    return this.actionInstance\r\n  }\r\n\r\n  /** 获取评论渲染器实例对象 */\r\n  public getRender() {\r\n    return this.renderInstance\r\n  }\r\n\r\n  /** 获取评论数据 */\r\n  public getData() {\r\n    return this.data\r\n  }\r\n\r\n  /** 设置数据 */\r\n  public setData(data: CommentData) {\r\n    this.data = data\r\n\r\n    this.render()\r\n    this.getRender().playFadeAnimForBody()\r\n  }\r\n\r\n  /** 获取父评论 */\r\n  public getParent() {\r\n    return this.parent\r\n  }\r\n\r\n  /** 获取所有子评论 */\r\n  public getChildren() {\r\n    return this.children\r\n  }\r\n\r\n  /** 获取当前嵌套层数 */\r\n  public getNestCurt() {\r\n    return this.nestCurt\r\n  }\r\n\r\n  /** 判断是否为根评论 */\r\n  public getIsRoot() {\r\n    return this.data.rid === 0\r\n  }\r\n\r\n  /** 获取评论 ID */\r\n  public getID() {\r\n    return this.data.id\r\n  }\r\n\r\n  /** 置入子评论 */\r\n  public putChild(childNode: CommentNode, insertMode: 'append' | 'prepend' = 'append') {\r\n    childNode.parent = this\r\n    childNode.nestCurt = this.nestCurt + 1 // 嵌套层数 +1\r\n    this.children.push(childNode)\r\n\r\n    const $childrenWrap = this.getChildrenWrapEl()\r\n    const $childComment = childNode.getEl()\r\n    if (insertMode === 'append') $childrenWrap.append($childComment)\r\n    else if (insertMode === 'prepend') $childrenWrap.prepend($childComment)\r\n\r\n    childNode.getRender().playFadeAnim()\r\n    childNode.getRender().checkHeightLimit() // 内容限高\r\n  }\r\n\r\n  /** 获取存放子评论的元素对象 */\r\n  public getChildrenWrapEl(): HTMLElement {\r\n    // console.log(this.nestCurt)\r\n    if (this.nestCurt >= this.opts.nestMax) {\r\n      return this.parent!.getChildrenWrapEl()\r\n    }\r\n    return this.getRender().getChildrenWrap()\r\n  }\r\n\r\n  /** 获取所有父评论 */\r\n  public getParents() {\r\n    const flattenParents: CommentNode[] = []\r\n    let parent = this.parent\r\n    while (parent) {\r\n      flattenParents.push(parent)\r\n      parent = parent.getParent()\r\n    }\r\n    return flattenParents\r\n  }\r\n\r\n  /**\r\n   * Get the element of the comment\r\n   *\r\n   * The `getEl()` will always return the latest $el after calling `render()`.\r\n   * Please be aware of the memory leak if you use the $el reference directly.\r\n   */\r\n  public getEl() {\r\n    if (!this.$el) throw new Error('comment element not initialized before `getEl()`')\r\n    return this.$el\r\n  }\r\n\r\n  /**\r\n   * Focus on the comment\r\n   *\r\n   * Scroll to the comment and perform flash animation\r\n   */\r\n  focus() {\r\n    if (!this.$el) throw new Error('comment element not initialized before `focus()`')\r\n\r\n    // 若父评论存在 “子评论部分” 限高，取消限高\r\n    this.getParents().forEach((p) => {\r\n      p.getRender().heightLimitRemoveForChildren()\r\n    })\r\n\r\n    // Scroll to comment\r\n    this.scrollIntoView()\r\n\r\n    // Perform flash animation\r\n    this.getRender().playFlashAnim()\r\n  }\r\n\r\n  scrollIntoView() {\r\n    this.$el &&\r\n      Ui.scrollIntoView(this.$el, false, this.opts.scrollRelativeTo && this.opts.scrollRelativeTo())\r\n  }\r\n\r\n  /**\r\n   * Remove the comment node\r\n   */\r\n  remove() {\r\n    this.$el?.remove()\r\n  }\r\n\r\n  /** 获取 Gravatar 头像 URL */\r\n  public getGravatarURL() {\r\n    return Utils.getGravatarURL({\r\n      mirror: this.opts.gravatar.mirror,\r\n      params: this.opts.gravatar.params,\r\n      emailHash: this.data.email_encrypted,\r\n    })\r\n  }\r\n\r\n  /** 获取评论 markdown 解析后的内容 */\r\n  public getContentMarked() {\r\n    return marked(this.data.content)\r\n  }\r\n\r\n  /** 获取格式化后的日期 */\r\n  public getDateFormatted() {\r\n    return Utils.timeAgo(new Date(this.data.date), $t)\r\n  }\r\n\r\n  /** 获取用户 UserAgent 信息 */\r\n  public getUserUA() {\r\n    const info = UADetect(this.data.ua)\r\n    return {\r\n      browser: `${info.browser} ${info.version}`,\r\n      os: `${info.os} ${info.osVersion}`,\r\n    }\r\n  }\r\n\r\n  /** 获取配置 */\r\n  public getOpts() {\r\n    return this.opts\r\n  }\r\n}\r\n","function Detect(userAgent?: string) {\r\n  const win = (window as any) || {}\r\n  const nav = navigator || {}\r\n\r\n  const u = String(userAgent || nav.userAgent)\r\n  const dest = {\r\n    os: '',\r\n    osVersion: '',\r\n    engine: '',\r\n    browser: '',\r\n    device: '',\r\n    language: '',\r\n    version: ''\r\n  }\r\n\r\n  // 内核\r\n  const engineMatch = {\r\n    Trident: u.includes('Trident') || u.includes('NET CLR'),\r\n    Presto: u.includes('Presto'),\r\n    WebKit: u.includes('AppleWebKit'),\r\n    Gecko: u.includes('Gecko/')\r\n  }\r\n\r\n  // 浏览器\r\n  const browserMatch = {\r\n    Safari: u.includes('Safari'),\r\n    Chrome: u.includes('Chrome') || u.includes('CriOS'),\r\n    IE: u.includes('MSIE') || u.includes('Trident'),\r\n    Edge: u.includes('Edge') || u.includes('Edg'),\r\n    Firefox: u.includes('Firefox') || u.includes('FxiOS'),\r\n    'Firefox Focus': u.includes('Focus'),\r\n    Chromium: u.includes('Chromium'),\r\n    Opera: u.includes('Opera') || u.includes('OPR'),\r\n    Vivaldi: u.includes('Vivaldi'),\r\n    Yandex: u.includes('YaBrowser'),\r\n    Kindle: u.includes('Kindle') || u.includes('Silk/'),\r\n    360: u.includes('360EE') || u.includes('360SE'),\r\n    UC: u.includes('UC') || u.includes(' UBrowser'),\r\n    QQBrowser: u.includes('QQBrowser'),\r\n    QQ: u.includes('QQ/'),\r\n    Baidu: u.includes('Baidu') || u.includes('BIDUBrowser'),\r\n    Maxthon: u.includes('Maxthon'),\r\n    Sogou: u.includes('MetaSr') || u.includes('Sogou'),\r\n    LBBROWSER: u.includes('LBBROWSER'),\r\n    '2345Explorer': u.includes('2345Explorer'),\r\n    TheWorld: u.includes('TheWorld'),\r\n    MIUI: u.includes('MiuiBrowser'),\r\n    Quark: u.includes('Quark'),\r\n    Qiyu: u.includes('Qiyu'),\r\n    Wechat: u.includes('MicroMessenger'),\r\n    Taobao: u.includes('AliApp(TB'),\r\n    Alipay: u.includes('AliApp(AP'),\r\n    Weibo: u.includes('Weibo'),\r\n    Douban: u.includes('com.douban.frodo'),\r\n    Suning: u.includes('SNEBUY-APP'),\r\n    iQiYi: u.includes('IqiyiApp'),\r\n  }\r\n\r\n  // 系统或平台\r\n  const osMatch = {\r\n    Windows: u.includes('Windows'),\r\n    Linux: u.includes('Linux') || u.includes('X11'),\r\n    'macOS': u.includes('Macintosh'),\r\n    Android: u.includes('Android') || u.includes('Adr'),\r\n    Ubuntu: u.includes('Ubuntu'),\r\n    FreeBSD: u.includes('FreeBSD'),\r\n    Debian: u.includes('Debian'),\r\n    'Windows Phone': u.includes('IEMobile') || u.includes('Windows Phone'),\r\n    BlackBerry: u.includes('BlackBerry') || u.includes('RIM'),\r\n    MeeGo: u.includes('MeeGo'),\r\n    Symbian: u.includes('Symbian'),\r\n    iOS: u.includes('like Mac OS X'),\r\n    'Chrome OS': u.includes('CrOS'),\r\n    WebOS: u.includes('hpwOS'),\r\n  }\r\n\r\n  // 设备\r\n  const deviceMatch = {\r\n    Mobile: u.includes('Mobi') || u.includes('iPh') || u.includes('480'),\r\n    Tablet: u.includes('Tablet') || u.includes('Pad') || u.includes('Nexus 7')\r\n  }\r\n\r\n  // 修正\r\n  if (deviceMatch.Mobile) {\r\n    deviceMatch.Mobile = !(u.includes('iPad'))\r\n  } else if (browserMatch.Chrome && u.includes('Edg')) {\r\n    // Chrome 内核的 Edge\r\n    browserMatch.Chrome = false\r\n    browserMatch.Edge = true\r\n  } else if (win.showModalDialog && win.chrome) {\r\n    browserMatch.Chrome = false\r\n    browserMatch['360'] = true\r\n  }\r\n\r\n  // 默认设备\r\n  dest.device = 'PC'\r\n\r\n  // 语言\r\n  dest.language = (() => {\r\n    const g = ((nav as any).browserLanguage || nav.language)\r\n    const arr = g.split('-')\r\n    if (arr[1]) arr[1] = arr[1].toUpperCase()\r\n    return arr.join('_')\r\n  })()\r\n\r\n  // 应用判断数据\r\n  const hash = {\r\n    engine: engineMatch,\r\n    browser: browserMatch,\r\n    os: osMatch,\r\n    device: deviceMatch,\r\n  }\r\n  Object.entries(hash).forEach(([type, match]) => {\r\n    Object.entries(match).forEach(([name, result]) => {\r\n      if (result === true) dest[type] = name\r\n    })\r\n  })\r\n\r\n  // 系统版本信息\r\n  const osVersion = {\r\n    Windows: () => {\r\n      const v = u.replace(/^.*Windows NT ([\\d.]+);.*$/, '$1')\r\n      const wvHash = {\r\n        '6.4': '10',\r\n        '6.3': '8.1',\r\n        '6.2': '8',\r\n        '6.1': '7',\r\n        '6.0': 'Vista',\r\n        '5.2': 'XP',\r\n        '5.1': 'XP',\r\n        '5.0': '2000',\r\n        '10.0': '10',\r\n        '11.0': '11' // 自定的，不是微软官方的判断方法\r\n      }\r\n      return wvHash[v] || v\r\n    },\r\n    Android: () => u.replace(/^.*Android ([\\d.]+);.*$/, '$1'),\r\n    iOS: () => u.replace(/^.*OS ([\\d_]+) like.*$/, '$1').replace(/_/g, '.'),\r\n    Debian: () => u.replace(/^.*Debian\\/([\\d.]+).*$/, '$1'),\r\n    'Windows Phone': () => u.replace(/^.*Windows Phone( OS)? ([\\d.]+);.*$/, '$2'),\r\n    'macOS': () => u.replace(/^.*Mac OS X ([\\d_]+).*$/, '$1').replace(/_/g, '.'),\r\n    WebOS: () => u.replace(/^.*hpwOS\\/([\\d.]+);.*$/, '$1')\r\n  }\r\n\r\n  dest.osVersion = ''\r\n  if (osVersion[dest.os]) {\r\n    dest.osVersion = osVersion[dest.os]()\r\n    if (dest.osVersion === u) {\r\n      dest.osVersion = ''\r\n    }\r\n  }\r\n\r\n  // 浏览器版本信息\r\n  const version = {\r\n    Safari: () => u.replace(/^.*Version\\/([\\d.]+).*$/, '$1'),\r\n    Chrome: () => u.replace(/^.*Chrome\\/([\\d.]+).*$/, '$1').replace(/^.*CriOS\\/([\\d.]+).*$/, '$1'),\r\n    IE: () => u.replace(/^.*MSIE ([\\d.]+).*$/, '$1').replace(/^.*rv:([\\d.]+).*$/, '$1'),\r\n    Edge: () => u.replace(/^.*(Edge|Edg|Edg[A-Z]{1})\\/([\\d.]+).*$/, '$2'),\r\n    Firefox: () => u.replace(/^.*Firefox\\/([\\d.]+).*$/, '$1').replace(/^.*FxiOS\\/([\\d.]+).*$/, '$1'),\r\n    'Firefox Focus': () => u.replace(/^.*Focus\\/([\\d.]+).*$/, '$1'),\r\n    Chromium: () => u.replace(/^.*Chromium\\/([\\d.]+).*$/, '$1'),\r\n    Opera: () => u.replace(/^.*Opera\\/([\\d.]+).*$/, '$1').replace(/^.*OPR\\/([\\d.]+).*$/, '$1'),\r\n    Vivaldi: () => u.replace(/^.*Vivaldi\\/([\\d.]+).*$/, '$1'),\r\n    Yandex: () => u.replace(/^.*YaBrowser\\/([\\d.]+).*$/, '$1'),\r\n    Kindle: () => u.replace(/^.*Version\\/([\\d.]+).*$/, '$1'),\r\n    Maxthon: () => u.replace(/^.*Maxthon\\/([\\d.]+).*$/, '$1'),\r\n    QQBrowser: () => u.replace(/^.*QQBrowser\\/([\\d.]+).*$/, '$1'),\r\n    QQ: () => u.replace(/^.*QQ\\/([\\d.]+).*$/, '$1'),\r\n    Baidu: () => u.replace(/^.*BIDUBrowser[\\s/]([\\d.]+).*$/, '$1'),\r\n    UC: () => u.replace(/^.*UC?Browser\\/([\\d.]+).*$/, '$1'),\r\n    Sogou: () => u.replace(/^.*SE ([\\d.X]+).*$/, '$1').replace(/^.*SogouMobileBrowser\\/([\\d.]+).*$/, '$1'),\r\n    '2345Explorer': () => u.replace(/^.*2345Explorer\\/([\\d.]+).*$/, '$1'),\r\n    TheWorld: () => u.replace(/^.*TheWorld ([\\d.]+).*$/, '$1'),\r\n    MIUI: () => u.replace(/^.*MiuiBrowser\\/([\\d.]+).*$/, '$1'),\r\n    Quark: () => u.replace(/^.*Quark\\/([\\d.]+).*$/, '$1'),\r\n    Qiyu: () => u.replace(/^.*Qiyu\\/([\\d.]+).*$/, '$1'),\r\n    Wechat: () => u.replace(/^.*MicroMessenger\\/([\\d.]+).*$/, '$1'),\r\n    Taobao: () => u.replace(/^.*AliApp\\(TB\\/([\\d.]+).*$/, '$1'),\r\n    Alipay: () => u.replace(/^.*AliApp\\(AP\\/([\\d.]+).*$/, '$1'),\r\n    Weibo: () => u.replace(/^.*weibo__([\\d.]+).*$/, '$1'),\r\n    Douban: () => u.replace(/^.*com.douban.frodo\\/([\\d.]+).*$/, '$1'),\r\n    Suning: () => u.replace(/^.*SNEBUY-APP([\\d.]+).*$/, '$1'),\r\n    iQiYi: () => u.replace(/^.*IqiyiVersion\\/([\\d.]+).*$/, '$1'),\r\n  }\r\n\r\n  dest.version = ''\r\n  if (version[dest.browser]) {\r\n    dest.version = version[dest.browser]()\r\n    if (dest.version === u) {\r\n      dest.version = ''\r\n    }\r\n  }\r\n\r\n  // 简化版本号\r\n  /* if (_this.osVersion.indexOf('.')) {\r\n    _this.osVersion = _this.osVersion.substring(0, _this.osVersion.indexOf('.'))\r\n  } */\r\n  if (dest.version.indexOf('.')) {\r\n    dest.version = dest.version.substring(0, dest.version.indexOf('.'))\r\n  }\r\n\r\n  // 修正\r\n  if (dest.os === 'iOS' && u.includes('iPad')) {\r\n    dest.os = 'iPadOS'\r\n  } else if (dest.browser === 'Edge' && !u.includes('Edg')) {\r\n    dest.engine = 'EdgeHTML'\r\n  } else if (dest.browser === 'MIUI') {\r\n    dest.os = 'Android'\r\n  } else if (dest.browser === 'Chrome' && Number(dest.version) > 27) {\r\n    dest.engine = 'Blink'\r\n  } else if (dest.browser === 'Opera' && Number(dest.version) > 12) {\r\n    dest.engine = 'Blink'\r\n  } else if (dest.browser === 'Yandex') {\r\n    dest.engine = 'Blink'\r\n  } else if (dest.browser === undefined) {\r\n    dest.browser = 'Unknow App'\r\n  }\r\n\r\n  return dest\r\n}\r\n\r\nexport default Detect\r\n","import * as Utils from '../lib/utils'\r\n\r\nexport interface ReadMoreBtnOptions {\r\n  /** 回调函数 */\r\n  onClick: (offset: number) => void\r\n\r\n  pageSize: number\r\n\r\n  text?: string\r\n}\r\n\r\n/**\r\n * 阅读更多按钮\r\n */\r\nexport default class ReadMoreBtn {\r\n  public opts: ReadMoreBtnOptions\r\n  public $el: HTMLElement\r\n  private $loading: HTMLElement\r\n  private $text: HTMLElement\r\n  private offset: number = 0\r\n  private total: number = 0\r\n  private origText: string = 'Load More'\r\n\r\n  /** 是否有更多内容 */\r\n  get hasMore() {\r\n    return this.total > this.offset + this.opts.pageSize\r\n  }\r\n\r\n  public constructor(opts: ReadMoreBtnOptions) {\r\n    this.opts = opts\r\n    this.origText = this.opts.text || this.origText\r\n\r\n    this.$el = Utils.createElement(\r\n      `<div class=\"atk-list-read-more\" style=\"display: none;\">\r\n      <div class=\"atk-list-read-more-inner\">\r\n        <div class=\"atk-loading-icon\" style=\"display: none;\"></div>\r\n        <span class=\"atk-text\">${this.origText}</span>\r\n      </div>\r\n    </div>`,\r\n    )\r\n\r\n    this.$loading = this.$el.querySelector<HTMLElement>('.atk-loading-icon')!\r\n    this.$text = this.$el.querySelector<HTMLElement>('.atk-text')!\r\n\r\n    this.$el.onclick = () => {\r\n      this.click()\r\n    }\r\n  }\r\n\r\n  click() {\r\n    if (this.hasMore) this.opts.onClick(this.offset + this.opts.pageSize)\r\n    this.checkDisabled()\r\n  }\r\n\r\n  /** 显示 */\r\n  show() {\r\n    this.$el.style.display = ''\r\n  }\r\n\r\n  /** 隐藏 */\r\n  hide() {\r\n    this.$el.style.display = 'none'\r\n  }\r\n\r\n  /** 加载 */\r\n  setLoading(isLoading: boolean) {\r\n    this.$loading.style.display = isLoading ? '' : 'none'\r\n    this.$text.style.display = isLoading ? 'none' : ''\r\n  }\r\n\r\n  /** 错误提示 */\r\n  showErr(errMsg: string) {\r\n    this.setLoading(false)\r\n\r\n    this.$text.innerText = errMsg\r\n    this.$el.classList.add('atk-err')\r\n    window.setTimeout(() => {\r\n      this.$text.innerText = this.origText\r\n      this.$el.classList.remove('atk-err')\r\n    }, 2000) // 2s后错误提示复原\r\n  }\r\n\r\n  /** 更新数据 */\r\n  public update(offset: number, total: number) {\r\n    this.offset = offset\r\n    this.total = total\r\n\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public checkDisabled() {\r\n    if (this.hasMore) this.show()\r\n    else this.hide()\r\n  }\r\n}\r\n","import type { Paginator, IPgHolderOpt } from '.'\r\nimport type { ListFetchParams } from '@/types'\r\nimport ReadMoreBtn from '@/components/read-more-btn'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 阅读更多形式的分页\r\n */\r\nexport default class ReadMorePaginator implements Paginator {\r\n  private instance!: ReadMoreBtn\r\n  private onReachedBottom: (() => void) | null = null\r\n  private opt!: IPgHolderOpt\r\n\r\n  create(opt: IPgHolderOpt) {\r\n    this.opt = opt\r\n\r\n    this.instance = new ReadMoreBtn({\r\n      pageSize: opt.pageSize,\r\n      onClick: async (o) => {\r\n        opt.ctx.fetch({\r\n          offset: o,\r\n        })\r\n      },\r\n      text: $t('loadMore'),\r\n    })\r\n\r\n    // 滚动到底部自动加载\r\n    if (opt.readMoreAutoLoad) {\r\n      this.onReachedBottom = () => {\r\n        if (!this.instance.hasMore || this.opt.ctx.getData().getLoading()) return\r\n        this.instance.click()\r\n      }\r\n      this.opt.ctx.on('list-reach-bottom', this.onReachedBottom)\r\n    }\r\n\r\n    return this.instance.$el\r\n  }\r\n\r\n  setLoading(val: boolean) {\r\n    this.instance.setLoading(val)\r\n  }\r\n\r\n  update(offset: number, total: number) {\r\n    this.instance.update(offset, total)\r\n  }\r\n\r\n  showErr(msg: string) {\r\n    this.instance.showErr(msg)\r\n  }\r\n\r\n  next() {\r\n    this.instance.click()\r\n  }\r\n\r\n  getHasMore(): boolean {\r\n    return this.instance.hasMore\r\n  }\r\n\r\n  getIsClearComments(params: { offset?: number }): boolean {\r\n    return params.offset === 0\r\n  }\r\n\r\n  dispose(): void {\r\n    this.onReachedBottom && this.opt.ctx.off('list-reach-bottom', this.onReachedBottom)\r\n    this.instance.$el.remove()\r\n  }\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport * as Ui from '../lib/ui'\r\n\r\nexport interface PaginationOptions {\r\n  /** 每页条数 */\r\n  pageSize: number\r\n\r\n  /** 回调函数 */\r\n  onChange: (offset: number) => void\r\n}\r\n\r\nexport default class Pagination {\r\n  private opts: PaginationOptions\r\n  public total: number\r\n  public $el: HTMLElement\r\n  public $input: HTMLInputElement\r\n  public inputTimer?: number\r\n  public $prevBtn: HTMLElement\r\n  public $nextBtn: HTMLElement\r\n\r\n  public page: number = 1\r\n  get pageSize(): number {\r\n    return this.opts.pageSize\r\n  }\r\n  get offset(): number {\r\n    return this.pageSize * (this.page - 1)\r\n  }\r\n  get maxPage(): number {\r\n    return Math.ceil(this.total / this.pageSize)\r\n  }\r\n\r\n  public constructor(total: number, opts: PaginationOptions) {\r\n    this.total = total\r\n    this.opts = opts\r\n\r\n    this.$el = Utils.createElement(\r\n      `<div class=\"atk-pagination-wrap\">\r\n        <div class=\"atk-pagination\">\r\n          <div class=\"atk-btn atk-btn-prev\" aria-label=\"Previous page\">\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"14px\" width=\"14px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z\"></path></svg>\r\n          </div>\r\n          <input type=\"text\" class=\"atk-input\" aria-label=\"Enter the number of page\" />\r\n          <div class=\"atk-btn atk-btn-next\" aria-label=\"Next page\">\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"14px\" width=\"14px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M294.1 256L167 129c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.3 34 0L345 239c9.1 9.1 9.3 23.7.7 33.1L201.1 417c-4.7 4.7-10.9 7-17 7s-12.3-2.3-17-7c-9.4-9.4-9.4-24.6 0-33.9l127-127.1z\"></path></svg>\r\n          </div>\r\n        </div>\r\n      </div>`,\r\n    )\r\n    this.$input = this.$el.querySelector('.atk-input')!\r\n    this.$input.value = `${this.page}`\r\n\r\n    this.$input.oninput = () => this.input()\r\n    this.$input.onkeydown = (e) => this.keydown(e)\r\n\r\n    this.$prevBtn = this.$el.querySelector('.atk-btn-prev')!\r\n    this.$nextBtn = this.$el.querySelector('.atk-btn-next')!\r\n\r\n    this.$prevBtn.onclick = () => this.prev()\r\n    this.$nextBtn.onclick = () => this.next()\r\n\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public update(offset: number, total: number) {\r\n    this.page = Math.ceil(offset / this.pageSize) + 1\r\n    this.total = total\r\n\r\n    this.setInput(this.page)\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public setInput(page: number) {\r\n    this.$input.value = `${page}`\r\n  }\r\n\r\n  public input(now: boolean = false) {\r\n    window.clearTimeout(this.inputTimer)\r\n\r\n    const value = this.$input.value.trim()\r\n\r\n    const modify = () => {\r\n      if (value === '') {\r\n        this.setInput(this.page)\r\n        return\r\n      }\r\n      let page = Number(value)\r\n      if (Number.isNaN(page)) {\r\n        this.setInput(this.page)\r\n        return\r\n      }\r\n      if (page < 1) {\r\n        this.setInput(this.page)\r\n        return\r\n      }\r\n      if (page > this.maxPage) {\r\n        this.setInput(this.maxPage)\r\n        page = this.maxPage\r\n      }\r\n      this.change(page)\r\n    }\r\n\r\n    // 延迟 800ms 执行\r\n    if (!now) this.inputTimer = window.setTimeout(() => modify(), 800)\r\n    else modify()\r\n  }\r\n\r\n  public prev() {\r\n    const page = this.page - 1\r\n    if (page < 1) {\r\n      return\r\n    }\r\n    this.change(page)\r\n  }\r\n\r\n  public next() {\r\n    const page = this.page + 1\r\n    if (page > this.maxPage) {\r\n      return\r\n    }\r\n    this.change(page)\r\n  }\r\n\r\n  public getHasMore() {\r\n    return this.page + 1 <= this.maxPage\r\n  }\r\n\r\n  public change(page: number) {\r\n    this.page = page\r\n    this.opts.onChange(this.offset)\r\n    this.setInput(page)\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public checkDisabled() {\r\n    if (this.page + 1 > this.maxPage) {\r\n      this.$nextBtn.classList.add('atk-disabled')\r\n    } else {\r\n      this.$nextBtn.classList.remove('atk-disabled')\r\n    }\r\n\r\n    if (this.page - 1 < 1) {\r\n      this.$prevBtn.classList.add('atk-disabled')\r\n    } else {\r\n      this.$prevBtn.classList.remove('atk-disabled')\r\n    }\r\n  }\r\n\r\n  public keydown(e: KeyboardEvent) {\r\n    const keyCode = e.keyCode || e.which\r\n\r\n    if (keyCode === 38) {\r\n      // 上键\r\n      const page = Number(this.$input.value) + 1\r\n      if (page > this.maxPage) {\r\n        return\r\n      }\r\n      this.setInput(page)\r\n      this.input()\r\n    } else if (keyCode === 40) {\r\n      // 下键\r\n      const page = Number(this.$input.value) - 1\r\n      if (page < 1) {\r\n        return\r\n      }\r\n      this.setInput(page)\r\n      this.input()\r\n    } else if (keyCode === 13) {\r\n      // 回车\r\n      this.input(true)\r\n    }\r\n  }\r\n\r\n  /** 加载 */\r\n  setLoading(isLoading: boolean) {\r\n    if (isLoading) Ui.showLoading(this.$el)\r\n    else Ui.hideLoading(this.$el)\r\n  }\r\n}\r\n","import type { Paginator, IPgHolderOpt } from '.'\r\nimport PaginationComponent from '@/components/pagination'\r\n\r\n/**\r\n * 翻页形式的分页\r\n */\r\nexport default class UpDownPaginator implements Paginator {\r\n  private instance!: PaginationComponent\r\n\r\n  create(opt: IPgHolderOpt) {\r\n    this.instance = new PaginationComponent(opt.total, {\r\n      pageSize: opt.pageSize,\r\n      onChange: async (o) => {\r\n        opt.ctx.editorResetState() // 防止评论框被吞\r\n\r\n        opt.ctx.fetch({\r\n          offset: o,\r\n          onSuccess: () => {\r\n            opt.ctx.listGotoFirst()\r\n          },\r\n        })\r\n      },\r\n    })\r\n\r\n    return this.instance.$el\r\n  }\r\n\r\n  setLoading(val: boolean) {\r\n    this.instance.setLoading(val)\r\n  }\r\n\r\n  update(offset: number, total: number) {\r\n    this.instance.update(offset, total)\r\n  }\r\n\r\n  next() {\r\n    this.instance.next()\r\n  }\r\n\r\n  getHasMore(): boolean {\r\n    return this.instance.getHasMore()\r\n  }\r\n\r\n  getIsClearComments(): boolean {\r\n    return true\r\n  }\r\n\r\n  dispose(): void {\r\n    this.instance.$el.remove()\r\n  }\r\n}\r\n","import { Paginator } from './paginator'\r\nimport ReadMorePaginator from './paginator/read-more'\r\nimport UpDownPaginator from './paginator/up-down'\r\nimport $t from '@/i18n'\r\nimport type { ArtalkConfig, ContextApi } from '@/types'\r\n\r\nfunction createPaginatorByConf(conf: Pick<ArtalkConfig, 'pagination'>): Paginator {\r\n  if (conf.pagination.readMore) return new ReadMorePaginator()\r\n  return new UpDownPaginator()\r\n}\r\n\r\nfunction getPageDataByLastData(ctx: ContextApi): {\r\n  offset: number\r\n  total: number\r\n} {\r\n  const last = ctx.getData().getListLastFetch()\r\n  const r = { offset: 0, total: 0 }\r\n  if (!last) return r\r\n\r\n  r.offset = last.params.offset\r\n  if (last.data) r.total = last.params.flatMode ? last.data.count : last.data.roots_count\r\n\r\n  return r\r\n}\r\n\r\nexport const initListPaginatorFunc = (ctx: ContextApi) => {\r\n  let paginator: Paginator | null = null\r\n\r\n  // Init paginator when conf loaded\r\n  ctx.watchConf(['pagination', 'locale'], (conf) => {\r\n    const list = ctx.get('list')\r\n\r\n    if (paginator) paginator.dispose() // if had been init, dispose it\r\n\r\n    // create paginator instance\r\n    paginator = createPaginatorByConf(conf)\r\n\r\n    // create paginator dom\r\n    const { offset, total } = getPageDataByLastData(ctx)\r\n    const $paginator = paginator.create({\r\n      ctx,\r\n      pageSize: conf.pagination.pageSize,\r\n      total,\r\n\r\n      readMoreAutoLoad: conf.pagination.autoLoad,\r\n    })\r\n\r\n    // mount paginator dom\r\n    list.$commentsWrap.after($paginator)\r\n\r\n    // update paginator info\r\n    paginator?.update(offset, total)\r\n  })\r\n\r\n  // When list loaded\r\n  ctx.on('list-loaded', (comments) => {\r\n    // update paginator info\r\n    const { offset, total } = getPageDataByLastData(ctx)\r\n    paginator?.update(offset, total)\r\n  })\r\n\r\n  // When list fetch\r\n  ctx.on('list-fetch', (params) => {\r\n    // if clear comments when fetch new page data\r\n    if (ctx.getData().getComments().length > 0 && paginator?.getIsClearComments(params)) {\r\n      ctx.getData().clearComments()\r\n    }\r\n  })\r\n\r\n  // When list error\r\n  ctx.on('list-failed', () => {\r\n    paginator?.showErr?.($t('loadFail'))\r\n  })\r\n\r\n  // loading\r\n  ctx.on('list-fetch', (params) => {\r\n    paginator?.setLoading(true)\r\n  })\r\n  ctx.on('list-fetched', ({ params }) => {\r\n    paginator?.setLoading(false)\r\n  })\r\n}\r\n","import ListHTML from './list.html?raw'\r\nimport { ListLayout } from './layout'\r\nimport { createCommentNode } from './comment'\r\nimport { initListPaginatorFunc } from './page'\r\nimport type { ContextApi } from '@/types'\r\nimport Component from '@/lib/component'\r\nimport * as Utils from '@/lib/utils'\r\nimport { CommentNode } from '@/comment'\r\n\r\nexport default class List extends Component {\r\n  /** 列表评论集区域元素 */\r\n  $commentsWrap!: HTMLElement\r\n  public getCommentsWrapEl() {\r\n    return this.$commentsWrap\r\n  }\r\n\r\n  protected commentNodes: CommentNode[] = []\r\n  getCommentNodes() {\r\n    return this.commentNodes\r\n  }\r\n\r\n  constructor(ctx: ContextApi) {\r\n    super(ctx)\r\n\r\n    // Init base element\r\n    this.$el = Utils.createElement(ListHTML)\r\n    this.$commentsWrap = this.$el.querySelector('.atk-list-comments-wrap')!\r\n\r\n    // Init paginator\r\n    initListPaginatorFunc(ctx)\r\n\r\n    // Bind events\r\n    this.initCrudEvents()\r\n  }\r\n\r\n  getListLayout({ forceFlatMode }: { forceFlatMode?: boolean } = {}) {\r\n    return new ListLayout({\r\n      $commentsWrap: this.$commentsWrap,\r\n      nestSortBy: this.ctx.conf.nestSort,\r\n      nestMax: this.ctx.conf.nestMax,\r\n      flatMode:\r\n        typeof forceFlatMode === 'boolean' ? forceFlatMode : (this.ctx.conf.flatMode as boolean),\r\n      // flatMode must be boolean because it had been handled when Artalk.init\r\n      createCommentNode: (d, r) => {\r\n        const node = createCommentNode(this.ctx, d, r, { forceFlatMode })\r\n        this.commentNodes.push(node) // store node instance\r\n        return node\r\n      },\r\n      findCommentNode: (id) => this.commentNodes.find((c) => c.getID() === id),\r\n    })\r\n  }\r\n\r\n  private initCrudEvents() {\r\n    this.ctx.on('list-load', (comments) => {\r\n      // 导入数据\r\n      this.getListLayout().import(comments)\r\n    })\r\n\r\n    this.ctx.on('list-loaded', (comments) => {\r\n      if (comments.length === 0) {\r\n        this.commentNodes = []\r\n        this.$commentsWrap.innerHTML = ''\r\n      }\r\n    })\r\n\r\n    // When comment insert\r\n    this.ctx.on('comment-inserted', (comment) => {\r\n      const replyComment = comment.rid\r\n        ? this.commentNodes.find((c) => c.getID() === comment.rid)?.getData()\r\n        : undefined\r\n      this.getListLayout().insert(comment, replyComment)\r\n    })\r\n\r\n    // When comment delete\r\n    this.ctx.on('comment-deleted', (comment) => {\r\n      const node = this.commentNodes.find((c) => c.getID() === comment.id)\r\n      if (!node) {\r\n        console.error(`comment node id=${comment.id} not found`)\r\n        return\r\n      }\r\n      node.remove()\r\n      this.commentNodes = this.commentNodes.filter((c) => c.getID() !== comment.id)\r\n      // TODO: remove child nodes\r\n    })\r\n\r\n    // When comment update\r\n    this.ctx.on('comment-updated', (comment) => {\r\n      const node = this.commentNodes.find((c) => c.getID() === comment.id)\r\n      node && node.setData(comment)\r\n    })\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-list\\\">\\r\\n  <div class=\\\"atk-list-header\\\">\\r\\n    <div class=\\\"atk-comment-count\\\">\\r\\n      <div class=\\\"atk-text\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"atk-right-action\\\">\\r\\n      <span data-action=\\\"admin-close-comment\\\" class=\\\"atk-hide\\\" atk-only-admin-show></span>\\r\\n      <span data-action=\\\"open-sidebar\\\" class=\\\"atk-hide atk-on\\\">\\r\\n        <span class=\\\"atk-unread-badge\\\" style=\\\"display: none\\\"></span>\\r\\n        <div class=\\\"atk-text\\\"></div>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"atk-list-body\\\">\\r\\n    <div class=\\\"atk-list-comments-wrap\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"atk-list-footer\\\">\\r\\n    <div class=\\\"atk-copyright\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import type { ContextApi, CommentData } from '@/types'\r\nimport { CommentNode } from '@/comment'\r\n\r\ninterface CreateCommentNodeOptions {\r\n  forceFlatMode?: boolean\r\n}\r\n\r\nexport function createCommentNode(\r\n  ctx: ContextApi,\r\n  comment: CommentData,\r\n  replyComment?: CommentData,\r\n  opts?: CreateCommentNodeOptions,\r\n): CommentNode {\r\n  const instance = new CommentNode(comment, {\r\n    onAfterRender: () => {\r\n      ctx.trigger('comment-rendered', instance)\r\n    },\r\n    onDelete: (c: CommentNode) => {\r\n      ctx.getData().deleteComment(c.getID())\r\n    },\r\n\r\n    replyTo: replyComment,\r\n\r\n    // TODO simplify reference\r\n    flatMode:\r\n      typeof opts?.forceFlatMode === 'boolean'\r\n        ? opts?.forceFlatMode\r\n        : (ctx.conf.flatMode as boolean),\r\n    gravatar: ctx.conf.gravatar,\r\n    nestMax: ctx.conf.nestMax,\r\n    heightLimit: ctx.conf.heightLimit,\r\n    avatarURLBuilder: ctx.conf.avatarURLBuilder,\r\n    scrollRelativeTo: ctx.conf.scrollRelativeTo,\r\n    vote: ctx.conf.vote,\r\n    voteDown: ctx.conf.voteDown,\r\n    uaBadge: ctx.conf.uaBadge,\r\n\r\n    // TODO: move to plugin folder and remove from core\r\n    getApi: () => ctx.getApi(),\r\n    replyComment: (c, $el) => ctx.replyComment(c, $el),\r\n    editComment: (c, $el) => ctx.editComment(c, $el),\r\n  })\r\n\r\n  // 渲染元素\r\n  instance.render()\r\n\r\n  return instance\r\n}\r\n","import * as Ui from '@/lib/ui'\r\n\r\nlet bodyOrgOverflow: string\r\nlet bodyOrgPaddingRight: string\r\n\r\nexport function getScrollbarHelper() {\r\n  return {\r\n    init() {\r\n      bodyOrgOverflow = document.body.style.overflow\r\n      bodyOrgPaddingRight = document.body.style.paddingRight\r\n    },\r\n\r\n    unlock() {\r\n      document.body.style.overflow = bodyOrgOverflow\r\n      document.body.style.paddingRight = bodyOrgPaddingRight\r\n    },\r\n\r\n    lock() {\r\n      document.body.style.overflow = 'hidden'\r\n      const barPaddingRight = parseInt(\r\n        window.getComputedStyle(document.body, null).getPropertyValue('padding-right'),\r\n        10,\r\n      )\r\n      document.body.style.paddingRight = `${Ui.getScrollBarWidth() + barPaddingRight || 0}px`\r\n    },\r\n  }\r\n}\r\n","export interface LayerOptions {\r\n  onShow: () => void\r\n  onHide: () => void\r\n}\r\n\r\nexport class Layer {\r\n  private allowMaskClose = true\r\n  private onAfterHide?: () => void\r\n\r\n  constructor(\r\n    private $el: HTMLElement,\r\n    private opts: LayerOptions,\r\n  ) {}\r\n\r\n  setOnAfterHide(func: () => void) {\r\n    this.onAfterHide = func\r\n  }\r\n\r\n  setAllowMaskClose(allow: boolean) {\r\n    this.allowMaskClose = allow\r\n  }\r\n\r\n  getAllowMaskClose() {\r\n    return this.allowMaskClose\r\n  }\r\n\r\n  getEl() {\r\n    return this.$el\r\n  }\r\n\r\n  show() {\r\n    this.opts.onShow()\r\n    this.$el.style.display = ''\r\n  }\r\n\r\n  async hide() {\r\n    this.opts.onHide()\r\n    this.$el.style.display = 'none'\r\n    this.onAfterHide && this.onAfterHide()\r\n  }\r\n\r\n  async destroy() {\r\n    this.opts.onHide()\r\n    this.$el.remove()\r\n    this.onAfterHide && this.onAfterHide()\r\n  }\r\n}\r\n","import { getScrollbarHelper } from './scrollbar-helper'\r\nimport { Layer } from './layer'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport class LayerWrap {\r\n  private $wrap: HTMLElement\r\n  private $mask: HTMLElement\r\n  private items: Layer[] = []\r\n\r\n  constructor() {\r\n    this.$wrap = Utils.createElement(\r\n      `<div class=\"atk-layer-wrap\" style=\"display: none;\"><div class=\"atk-layer-mask\"></div></div>`,\r\n    )\r\n    this.$mask = this.$wrap.querySelector<HTMLElement>('.atk-layer-mask')!\r\n  }\r\n\r\n  createItem(name: string, el?: HTMLElement) {\r\n    // init element\r\n    el = el || this.createItemElement(name)\r\n    el.setAttribute('data-layer-name', name)\r\n    this.$wrap.appendChild(el)\r\n\r\n    // create layer instance\r\n    const layer = new Layer(el, {\r\n      onHide: () => this.hideWrap(el!),\r\n      onShow: () => this.showWrap(),\r\n    })\r\n\r\n    // register mask click event\r\n    this.getMask().addEventListener('click', () => {\r\n      layer.getAllowMaskClose() && layer.hide()\r\n    })\r\n\r\n    // add to items\r\n    this.items.push(layer)\r\n\r\n    return layer\r\n  }\r\n\r\n  private createItemElement(name: string) {\r\n    const el = document.createElement('div')\r\n    el.classList.add('atk-layer-item')\r\n    el.style.display = 'none'\r\n    this.$wrap.appendChild(el)\r\n    return el\r\n  }\r\n\r\n  getWrap() {\r\n    return this.$wrap\r\n  }\r\n\r\n  getMask() {\r\n    return this.$mask\r\n  }\r\n\r\n  showWrap() {\r\n    this.$wrap.style.display = 'block'\r\n    this.$mask.style.display = 'block'\r\n    this.$mask.classList.add('atk-fade-in')\r\n    getScrollbarHelper().lock()\r\n  }\r\n\r\n  hideWrap($el: HTMLElement) {\r\n    // if wrap contains more than one item, do not hide entire wrap\r\n    if (\r\n      this.items\r\n        .map((l) => l.getEl())\r\n        .filter((e) => e !== $el && e.isConnected && e.style.display !== 'none').length > 0\r\n    ) {\r\n      return\r\n    }\r\n\r\n    this.$wrap.style.display = 'none'\r\n    getScrollbarHelper().unlock()\r\n  }\r\n}\r\n","import { getScrollbarHelper } from './scrollbar-helper'\r\nimport { LayerWrap } from './wrap'\r\nimport type { ContextApi } from '@/types'\r\n\r\nexport class LayerManager {\r\n  private wrap: LayerWrap\r\n\r\n  constructor(ctx: ContextApi) {\r\n    this.wrap = new LayerWrap()\r\n    document.body.appendChild(this.wrap.getWrap())\r\n\r\n    ctx.on('unmounted', () => {\r\n      this.wrap.getWrap().remove()\r\n    })\r\n\r\n    // 记录页面原始 CSS 属性\r\n    getScrollbarHelper().init()\r\n  }\r\n\r\n  getEl() {\r\n    return this.wrap.getWrap()\r\n  }\r\n\r\n  create(name: string, el?: HTMLElement) {\r\n    return this.wrap.createItem(name, el)\r\n  }\r\n}\r\n","import type { LocalUser } from '@/types'\r\n\r\nconst LOCAL_USER_KEY = 'ArtalkUser'\r\n\r\ninterface UserOpts {\r\n  onUserChanged?: (user: LocalUser) => void\r\n}\r\n\r\nclass User {\r\n  private data: LocalUser\r\n\r\n  constructor(private opts: UserOpts) {\r\n    // Import from localStorage\r\n    const localUser = JSON.parse(window.localStorage.getItem(LOCAL_USER_KEY) || '{}')\r\n\r\n    // Initialize\r\n    this.data = {\r\n      nick: localUser.nick || '',\r\n      email: localUser.email || '',\r\n      link: localUser.link || '',\r\n      token: localUser.token || '',\r\n      isAdmin: localUser.isAdmin || false,\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n  /** Update user data and save to localStorage */\r\n  update(obj: Partial<LocalUser> = {}) {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      this.data[key] = value\r\n    })\r\n\r\n    window.localStorage.setItem(LOCAL_USER_KEY, JSON.stringify(this.data))\r\n    this.opts.onUserChanged && this.opts.onUserChanged(this.data)\r\n  }\r\n\r\n  /**\r\n   * Logout\r\n   *\r\n   * @description Logout will clear login status, but not clear user data (nick, email, link)\r\n   */\r\n  logout() {\r\n    this.update({\r\n      token: '',\r\n      isAdmin: false,\r\n    })\r\n  }\r\n\r\n  /** Check if user has filled basic data */\r\n  checkHasBasicUserInfo() {\r\n    return !!this.data.nick && !!this.data.email\r\n  }\r\n}\r\n\r\nexport default User\r\n","import CheckerLauncher from './components/checker'\r\nimport Editor from './editor/editor'\r\nimport SidebarLayer from './layer/sidebar-layer'\r\n\r\nimport List from './list/list'\r\n\r\nimport * as I18n from './i18n'\r\nimport { PlugManager } from './plugins/editor-kit'\r\nimport { LayerManager } from './layer/layer-manager'\r\nimport User from './lib/user'\r\nimport type { ContextApi } from '@/types'\r\n\r\n/**\r\n * Services\r\n *\r\n * @description Call these services by `ctx.get('serviceName')` or `ctx.serviceName`\r\n */\r\nconst services = {\r\n  // I18n\r\n  i18n(ctx: ContextApi) {\r\n    I18n.setLocale(ctx.conf.locale)\r\n\r\n    ctx.watchConf(['locale'], (conf) => {\r\n      I18n.setLocale(conf.locale)\r\n    })\r\n  },\r\n\r\n  // User Store\r\n  user(ctx: ContextApi) {\r\n    const user = new User({\r\n      onUserChanged: (data) => {\r\n        ctx.trigger('user-changed', data)\r\n      },\r\n    })\r\n    return user\r\n  },\r\n\r\n  // 弹出层\r\n  layerManager(ctx: ContextApi) {\r\n    return new LayerManager(ctx)\r\n  },\r\n\r\n  // CheckerLauncher\r\n  checkerLauncher(ctx: ContextApi) {\r\n    const checkerLauncher = new CheckerLauncher({\r\n      getCtx: () => ctx,\r\n      getApi: () => ctx.getApi(),\r\n      onReload: () => ctx.reload(),\r\n\r\n      // make sure suffix with a slash, because it will be used as a base url when call `fetch`\r\n      getCaptchaIframeURL: () => `${ctx.conf.server}/api/v2/captcha/?t=${+new Date()}`,\r\n    })\r\n    return checkerLauncher\r\n  },\r\n\r\n  // 编辑器\r\n  editor(ctx: ContextApi) {\r\n    const editor = new Editor(ctx)\r\n    ctx.$root.appendChild(editor.$el)\r\n    return editor\r\n  },\r\n\r\n  // 评论列表\r\n  list(ctx: ContextApi): List {\r\n    const list = new List(ctx)\r\n    ctx.$root.appendChild(list.$el)\r\n    return list\r\n  },\r\n\r\n  // 侧边栏 Layer\r\n  sidebarLayer(ctx: ContextApi) {\r\n    const sidebarLayer = new SidebarLayer(ctx)\r\n    return sidebarLayer\r\n  },\r\n\r\n  // Extra Service\r\n  // -----------------------------------------\r\n  // Only for type check\r\n  // Not inject to ctx immediately,\r\n  // but can be injected by other occasions\r\n\r\n  editorPlugs(): PlugManager | undefined {\r\n    return undefined\r\n  },\r\n}\r\n\r\nexport default services\r\n\r\n// type tricks for dependency injection\r\ntype TServiceImps = typeof services\r\ntype TObjectWithFuncs = { [k: string]: (...args: any) => any }\r\ntype TKeysOnlyReturn<T extends TObjectWithFuncs, V> = {\r\n  [K in keyof T]: ReturnType<T[K]> extends V ? K : never\r\n}[keyof T]\r\ntype TOmitConditions = TKeysOnlyReturn<TServiceImps, void>\r\ntype TServiceInjectors = Omit<TServiceImps, TOmitConditions>\r\nexport type TInjectedServices = {\r\n  [K in keyof TServiceInjectors]: ReturnType<TServiceInjectors[K]>\r\n}\r\n","import type { ContextApi, ArtalkPlugin, ArtalkConfig } from '@/types'\r\nimport { Api } from '@/api'\r\n\r\ntype CountCache = { [pageKey: string]: number }\r\n\r\nexport interface CountOptions {\r\n  getApi(): Api\r\n\r\n  siteName: string\r\n  pageKey?: string\r\n  pageTitle?: string\r\n  countEl: string\r\n  pvEl: string\r\n  pageKeyAttr: string\r\n\r\n  /** Whether to add PV count when initializing */\r\n  pvAdd?: boolean\r\n}\r\n\r\nexport const PvCountWidget: ArtalkPlugin = (ctx: ContextApi) => {\r\n  ctx.watchConf(['site', 'pageKey', 'pageTitle', 'countEl', 'pvEl', 'statPageKeyAttr'], (conf) => {\r\n    initCountWidget({\r\n      getApi: () => ctx.getApi(),\r\n      siteName: conf.site,\r\n      pageKey: conf.pageKey,\r\n      pageTitle: conf.pageTitle,\r\n      countEl: conf.countEl,\r\n      pvEl: conf.pvEl,\r\n      pageKeyAttr: conf.statPageKeyAttr,\r\n      pvAdd: typeof ctx.conf.pvAdd === 'boolean' ? ctx.conf.pvAdd : true,\r\n    })\r\n  })\r\n}\r\n\r\n/** Initialize count widgets */\r\nexport async function initCountWidget(opt: CountOptions) {\r\n  // Load comment count\r\n  await loadCommentCount(opt)\r\n\r\n  // Increment PV count\r\n  const cacheData = await incrementPvCount(opt)\r\n\r\n  // Load PV count\r\n  await loadPvCount(opt, cacheData)\r\n}\r\n\r\n/** Increment PV count and get cache data that contains PV count */\r\nasync function incrementPvCount(opt: CountOptions) {\r\n  if (!opt.pvAdd || !opt.pageKey) return undefined\r\n\r\n  const pvCount = (\r\n    await opt.getApi().pages.logPv({\r\n      page_key: opt.pageKey,\r\n      page_title: opt.pageTitle,\r\n      site_name: opt.siteName,\r\n    })\r\n  ).data.pv // pv+1 and get pv count\r\n\r\n  return {\r\n    [opt.pageKey]: pvCount,\r\n  }\r\n}\r\n\r\n/** Load comment count */\r\nasync function loadCommentCount(opt: CountOptions) {\r\n  await loadStatCount({ opt, query: 'page_comment', containers: [opt.countEl, '#ArtalkCount'] })\r\n}\r\n\r\n/** Load PV count */\r\nasync function loadPvCount(opt: CountOptions, cache?: CountCache) {\r\n  await loadStatCount({ opt, query: 'page_pv', containers: [opt.pvEl, '#ArtalkPv'], cache })\r\n}\r\n\r\nasync function loadStatCount(args: {\r\n  opt: CountOptions\r\n  query: 'page_pv' | 'page_comment'\r\n  containers: string[]\r\n  cache?: CountCache\r\n}) {\r\n  const { opt } = args\r\n  let cache: CountCache = args.cache || {}\r\n\r\n  // Retrieve elements\r\n  const els = retrieveElements(args.containers)\r\n\r\n  // Get page keys which will be queried\r\n  const pageKeys = getPageKeys(els, opt.pageKeyAttr, opt.pageKey, cache)\r\n\r\n  // Fetch count data from server\r\n  if (pageKeys.length > 0) {\r\n    const res = (\r\n      await opt.getApi().stats.getStats(args.query, {\r\n        page_keys: pageKeys.join(','),\r\n        site_name: opt.siteName,\r\n      })\r\n    ).data.data as CountCache\r\n    cache = { ...cache, ...res }\r\n  }\r\n\r\n  updateElementsText(els, cache, opt.pageKey)\r\n}\r\n\r\n/** Retrieve elements based on selectors */\r\nfunction retrieveElements(containers: string[]): Set<HTMLElement> {\r\n  const els = new Set<HTMLElement>()\r\n  new Set(containers).forEach((selector) => {\r\n    document.querySelectorAll<HTMLElement>(selector).forEach((el) => els.add(el))\r\n  })\r\n  return els\r\n}\r\n\r\n/** Get page keys to be queried */\r\nfunction getPageKeys(\r\n  els: Set<HTMLElement>,\r\n  pageKeyAttr: string,\r\n  pageKey: string | undefined,\r\n  cache: CountCache,\r\n): string[] {\r\n  const pageKeys = Array.from(els)\r\n    .map((el) => el.getAttribute(pageKeyAttr) || pageKey)\r\n    .filter((key) => key && typeof cache[key] !== 'number') // filter out keys that already have data\r\n\r\n  return [...new Set(pageKeys as string[])] // deduplicate\r\n}\r\n\r\n/** Update elements text content with the count data */\r\nfunction updateElementsText(els: Set<HTMLElement>, data: CountCache, defaultPageKey?: string) {\r\n  els.forEach((el) => {\r\n    const pageKey = el.getAttribute('data-page-key')\r\n    const count = (pageKey && data[pageKey]) || (defaultPageKey && data[defaultPageKey]) || 0 // if pageKey is not set, use defaultCount\r\n    el.innerText = `${Number(count)}`\r\n  })\r\n}\r\n\r\nexport const exportedForTesting = {\r\n  incrementPvCount,\r\n  loadCommentCount,\r\n  loadPvCount,\r\n  retrieveElements,\r\n  getPageKeys,\r\n  updateElementsText,\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as marked from '@/lib/marked'\r\n\r\nexport const Markdown: ArtalkPlugin = (ctx) => {\r\n  ctx.watchConf(['imgLazyLoad', 'markedOptions'], (conf) => {\r\n    marked.initMarked({\r\n      markedOptions: ctx.getConf().markedOptions,\r\n      imgLazyLoad: ctx.getConf().imgLazyLoad,\r\n    })\r\n  })\r\n\r\n  ctx.watchConf(['markedReplacers'], (conf) => {\r\n    conf.markedReplacers && marked.setReplacers(conf.markedReplacers)\r\n  })\r\n}\r\n","import type PlugKit from './_kit'\r\nimport EditorPlug from './_plug'\r\nimport $t from '@/i18n'\r\n\r\nconst LocalStorageKey = 'ArtalkContent'\r\n\r\nexport default class LocalStorage extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onContentUpdated = () => {\r\n      this.save()\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      // load editor content from localStorage when init\r\n      const localContent = window.localStorage.getItem(LocalStorageKey) || ''\r\n      if (localContent.trim() !== '') {\r\n        this.kit.useEditor().showNotify($t('restoredMsg'), 'i')\r\n        this.kit.useEditor().setContent(localContent)\r\n      }\r\n\r\n      // bind event\r\n      this.kit.useEvents().on('content-updated', onContentUpdated)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useEvents().off('content-updated', onContentUpdated)\r\n    })\r\n  }\r\n\r\n  // Save editor content to localStorage\r\n  public save() {\r\n    window.localStorage.setItem(LocalStorageKey, this.kit.useEditor().getContentRaw().trim())\r\n  }\r\n}\r\n","import type PlugKit from './_kit'\r\nimport type { CommentData } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport default class SubmitAddPreset {\r\n  constructor(private kit: PlugKit) {}\r\n\r\n  async reqAdd() {\r\n    const nComment = (\r\n      await this.kit.useApi().comments.createComment({\r\n        ...(await this.getSubmitAddParams()),\r\n      })\r\n    ).data\r\n    return nComment\r\n  }\r\n\r\n  async getSubmitAddParams() {\r\n    const { nick, email, link } = this.kit.useUser().getData()\r\n    const conf = this.kit.useConf()\r\n\r\n    return {\r\n      content: this.kit.useEditor().getContentFinal(),\r\n      name: nick,\r\n      email,\r\n      link,\r\n      rid: 0,\r\n      page_key: conf.pageKey,\r\n      page_title: conf.pageTitle,\r\n      site_name: conf.site,\r\n      ua: await Utils.getCorrectUserAgent(), // Get the corrected UA\r\n    }\r\n  }\r\n\r\n  postSubmitAdd(commentNew: CommentData) {\r\n    // insert the new comment to list\r\n    this.kit.useGlobalCtx().getData().insertComment(commentNew)\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport SubmitAddPreset from './submit-add'\r\nimport $t from '@/i18n'\r\nimport type { CommentData } from '@/types'\r\n\r\ninterface CustomSubmit {\r\n  activeCond: () => void\r\n  pre?: () => void\r\n  req?: () => Promise<CommentData>\r\n  /** The `post` method is called after the comment is successfully submitted */\r\n  post?: (nComment: CommentData) => void\r\n}\r\n\r\nexport default class Submit extends EditorPlug {\r\n  private customs: CustomSubmit[] = []\r\n  private defaultPreset: SubmitAddPreset\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.defaultPreset = new SubmitAddPreset(this.kit)\r\n\r\n    const onEditorSubmit = () => this.do()\r\n\r\n    this.kit.useMounted(() => {\r\n      // invoke `do()` when event `editor-submit` is triggered\r\n      this.kit.useGlobalCtx().on('editor-submit', onEditorSubmit)\r\n    })\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useGlobalCtx().off('editor-submit', onEditorSubmit)\r\n    })\r\n  }\r\n\r\n  registerCustom(c: CustomSubmit) {\r\n    this.customs.push(c)\r\n  }\r\n\r\n  private async do() {\r\n    if (this.kit.useEditor().getContentFinal().trim() === '') {\r\n      this.kit.useEditor().focus()\r\n      return\r\n    }\r\n\r\n    const custom = this.customs.find((o) => o.activeCond())\r\n\r\n    this.kit.useEditor().showLoading()\r\n\r\n    try {\r\n      // pre submit\r\n      if (custom?.pre) custom.pre()\r\n\r\n      let nComment: CommentData\r\n\r\n      // submit request\r\n      if (custom?.req) nComment = await custom.req()\r\n      else nComment = await this.defaultPreset.reqAdd()\r\n\r\n      // post submit\r\n      if (custom?.post) custom.post(nComment)\r\n      else this.defaultPreset.postSubmitAdd(nComment)\r\n    } catch (err: any) {\r\n      // submit error\r\n      console.error(err)\r\n      this.kit.useEditor().showNotify(`${$t('commentFail')}: ${err.message || String(err)}`, 'e')\r\n      return\r\n    } finally {\r\n      this.kit.useEditor().hideLoading()\r\n    }\r\n\r\n    this.kit.useEditor().reset() // 复原编辑器\r\n    this.kit.useGlobalCtx().trigger('editor-submitted')\r\n  }\r\n}\r\n","import './emoticons.scss'\r\n\r\nimport EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport type { EmoticonListData, EmoticonGrpData } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\nimport $t from '@/i18n'\r\n\r\ntype OwOFormatType = {\r\n  [key: string]: {\r\n    type: 'emoticon' | 'emoji' | 'image'\r\n    container: { icon: string; text: string }[]\r\n  }\r\n}\r\n\r\nexport default class Emoticons extends EditorPlug {\r\n  private emoticons: EmoticonListData = []\r\n  private loadingTask: Promise<void> | null = null\r\n\r\n  private $grpWrap!: HTMLElement\r\n  private $grpSwitcher!: HTMLElement\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.kit.useMounted(() => {\r\n      this.usePanel(`<div class=\"atk-editor-plug-emoticons\"></div>`)\r\n      this.useBtn(\r\n        `<i aria-label=\"${$t('emoticon')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" height=\"14\" viewBox=\"0 0 14 14\" width=\"14\"><path d=\"m4.26829 5.29294c0-.94317.45893-1.7074 1.02439-1.7074.56547 0 1.02439.76423 1.02439 1.7074s-.45892 1.7074-1.02439 1.7074c-.56546 0-1.02439-.76423-1.02439-1.7074zm4.43903 1.7074c.56546 0 1.02439-.76423 1.02439-1.7074s-.45893-1.7074-1.02439-1.7074c-.56547 0-1.02439.76423-1.02439 1.7074s.45892 1.7074 1.02439 1.7074zm-1.70732 2.73184c-1.51883 0-2.06312-1.52095-2.08361-1.58173l-1.29551.43231c.03414.10244.868 2.51604 3.3798 2.51604 2.51181 0 3.34502-2.41291 3.37982-2.51604l-1.29484-.43573c-.02254.06488-.56683 1.58583-2.08498 1.58583zm7-2.73252c0 3.86004-3.1401 7.00034-7 7.00034s-7-3.1396-7-6.99966c0-3.86009 3.1401-7.00034 7-7.00034s7 3.14025 7 7.00034zm-1.3659 0c0-3.10679-2.5275-5.63442-5.6341-5.63442-3.10663 0-5.63415 2.52832-5.63415 5.6351 0 3.10676 2.52752 5.63446 5.63415 5.63446 3.1066 0 5.6341-2.5277 5.6341-5.63446z\"/></svg></i>`,\r\n      )\r\n    })\r\n    this.kit.useUnmounted(() => {})\r\n\r\n    this.useContentTransformer((raw) => this.transEmoticonImageText(raw))\r\n    this.usePanelShow(() => {\r\n      ;(async () => {\r\n        await this.loadEmoticonsData()\r\n\r\n        // 初始化元素\r\n        if (!this.isImgLoaded) {\r\n          this.initEmoticonsList()\r\n          this.isImgLoaded = true\r\n        }\r\n\r\n        // 延迟执行，防止无法读取高度\r\n        setTimeout(() => {\r\n          this.changeListHeight()\r\n        }, 30)\r\n      })()\r\n    })\r\n    this.usePanelHide(() => {\r\n      this.$panel!.parentElement!.style.height = ''\r\n    })\r\n\r\n    // 表情包预加载\r\n    window.setTimeout(() => {\r\n      this.loadEmoticonsData()\r\n    }, 1000) // 延迟 1s 加载\r\n  }\r\n\r\n  private isListLoaded = false\r\n  private isImgLoaded = false\r\n\r\n  public async loadEmoticonsData() {\r\n    if (this.isListLoaded) return\r\n    if (this.loadingTask !== null) {\r\n      await this.loadingTask\r\n      return\r\n    }\r\n\r\n    // 数据处理\r\n    this.loadingTask = (async () => {\r\n      Ui.showLoading(this.$panel!)\r\n      this.emoticons = await this.handleData(this.kit.useConf().emoticons)\r\n      Ui.hideLoading(this.$panel!)\r\n      this.loadingTask = null\r\n      this.isListLoaded = true\r\n    })()\r\n    await this.loadingTask\r\n  }\r\n\r\n  private async handleData(data: any): Promise<any[]> {\r\n    if (!Array.isArray(data) && ['object', 'string'].includes(typeof data)) {\r\n      data = [data]\r\n    }\r\n\r\n    if (!Array.isArray(data)) {\r\n      Ui.setError(this.$panel!, `[${$t('emoticon')}] Data must be of Array/Object/String type`)\r\n      Ui.hideLoading(this.$panel!)\r\n      return []\r\n    }\r\n\r\n    const pushGrp = (grp: EmoticonGrpData) => {\r\n      if (typeof grp !== 'object') return\r\n      if (grp.name && data.find((o) => o.name === grp.name)) return\r\n      data.push(grp)\r\n    }\r\n\r\n    // 加载子内容\r\n    const remoteLoad = async (d: any[]) => {\r\n      await Promise.all(\r\n        d.map(async (grp, index) => {\r\n          if (typeof grp === 'object' && !Array.isArray(grp)) {\r\n            pushGrp(grp)\r\n          } else if (Array.isArray(grp)) {\r\n            await remoteLoad(grp)\r\n          } else if (typeof grp === 'string') {\r\n            const grpData = await this.remoteLoad(grp)\r\n\r\n            if (Array.isArray(grpData)) await remoteLoad(grpData)\r\n            else if (typeof grpData === 'object') pushGrp(grpData)\r\n          }\r\n        }),\r\n      )\r\n    }\r\n    await remoteLoad(data)\r\n\r\n    // 处理数组数据\r\n    data.forEach((item: any) => {\r\n      if (this.isOwOFormat(item)) {\r\n        const c = this.convertOwO(item)\r\n        c.forEach((grp) => {\r\n          pushGrp(grp)\r\n        })\r\n      } else if (Array.isArray(item)) {\r\n        item.forEach((grp) => {\r\n          pushGrp(grp)\r\n        })\r\n      }\r\n    })\r\n\r\n    // 剔除非法数据\r\n    data = data.filter(\r\n      (item: any) => typeof item === 'object' && !Array.isArray(item) && !!item && !!item.name,\r\n    )\r\n\r\n    // console.log(data)\r\n\r\n    this.solveNullKey(data)\r\n    this.solveSameKey(data)\r\n\r\n    return data\r\n  }\r\n\r\n  /** 远程加载 */\r\n  private async remoteLoad(url: string): Promise<any> {\r\n    if (!url) return []\r\n\r\n    try {\r\n      const resp = await fetch(url)\r\n      const json = await resp.json()\r\n      return json\r\n    } catch (err) {\r\n      Ui.hideLoading(this.$panel!)\r\n      console.error('[Emoticons] Load Failed:', err)\r\n      Ui.setError(this.$panel!, `[${$t('emoticon')}] ${$t('loadFail')}: ${String(err)}`)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /** 避免表情 item.key 为 null 的情况 */\r\n  private solveNullKey(data: EmoticonGrpData[]) {\r\n    data.forEach((grp) => {\r\n      grp.items.forEach((item, index) => {\r\n        if (!item.key) item.key = `${grp.name} ${index + 1}`\r\n      })\r\n    })\r\n  }\r\n\r\n  /** 避免相同 item.key */\r\n  private solveSameKey(data: EmoticonGrpData[]) {\r\n    const tmp: { [key: string]: number } = {}\r\n    data.forEach((grp) => {\r\n      grp.items.forEach((item) => {\r\n        if (!item.key || String(item.key).trim() === '') return\r\n        if (!tmp[item.key]) tmp[item.key] = 1\r\n        else tmp[item.key]++\r\n\r\n        if (tmp[item.key] > 1) item.key = `${item.key} ${tmp[item.key]}`\r\n      })\r\n    })\r\n  }\r\n\r\n  /** 判断是否为 OwO 格式 */\r\n  private isOwOFormat(data: any) {\r\n    try {\r\n      return (\r\n        typeof data === 'object' &&\r\n        !!Object.values(data).length &&\r\n        Array.isArray(Object.keys(Object.values<any>(data)[0].container)) &&\r\n        Object.keys(Object.values<any>(data)[0].container[0]).includes('icon')\r\n      )\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /** 转换 OwO 格式数据 */\r\n  private convertOwO(owoData: OwOFormatType): EmoticonListData {\r\n    const dest: EmoticonListData = []\r\n    Object.entries(owoData).forEach(([grpName, grp]) => {\r\n      const nGrp: EmoticonGrpData = { name: grpName, type: grp.type, items: [] }\r\n      grp.container.forEach((item, index) => {\r\n        // 图片标签提取 src 属性值\r\n        const iconStr = item.icon\r\n        if (/<(img|IMG)/.test(iconStr)) {\r\n          const find = /src=[\"'](.*?)[\"']/.exec(iconStr)\r\n          if (find && find.length > 1) item.icon = find[1]\r\n        }\r\n        nGrp.items.push({\r\n          key: item.text || `${grpName} ${index + 1}`,\r\n          val: item.icon,\r\n        })\r\n      })\r\n      dest.push(nGrp)\r\n    })\r\n    return dest\r\n  }\r\n\r\n  /** 初始化表情列表界面 */\r\n  private initEmoticonsList() {\r\n    // 表情列表\r\n    this.$grpWrap = Utils.createElement(`<div class=\"atk-grp-wrap\"></div>`)\r\n    this.$panel!.append(this.$grpWrap)\r\n\r\n    this.emoticons.forEach((grp, index) => {\r\n      const $grp = Utils.createElement(`<div class=\"atk-grp\" style=\"display: none;\"></div>`)\r\n      this.$grpWrap.append($grp)\r\n      $grp.setAttribute('data-index', String(index))\r\n      $grp.setAttribute('data-grp-name', grp.name)\r\n      $grp.setAttribute('data-type', grp.type)\r\n      grp.items.forEach((item) => {\r\n        const $item = Utils.createElement(`<span class=\"atk-item\"></span>`)\r\n        $grp.append($item)\r\n\r\n        if (!!item.key && !new RegExp(`^(${grp.name})?\\\\s?[0-9]+$`).test(item.key))\r\n          $item.setAttribute('title', item.key)\r\n\r\n        if (grp.type === 'image') {\r\n          const imgEl = document.createElement('img')\r\n          imgEl.src = item.val\r\n          imgEl.alt = item.key\r\n          $item.append(imgEl)\r\n        } else {\r\n          $item.innerText = item.val\r\n        }\r\n\r\n        $item.onclick = () => {\r\n          if (grp.type === 'image') {\r\n            this.kit.useEditor().insertContent(`:[${item.key}]`)\r\n          } else {\r\n            this.kit.useEditor().insertContent(item.val || '')\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // 表情分类切换 bar\r\n    if (this.emoticons.length > 1) {\r\n      this.$grpSwitcher = Utils.createElement(`<div class=\"atk-grp-switcher\"></div>`)\r\n      this.$panel!.append(this.$grpSwitcher)\r\n      this.emoticons.forEach((grp, index) => {\r\n        const $item = Utils.createElement('<span />')\r\n        $item.innerText = grp.name\r\n        $item.setAttribute('data-index', String(index))\r\n        $item.onclick = () => this.openGrp(index)\r\n        this.$grpSwitcher.append($item)\r\n      })\r\n    }\r\n\r\n    // 默认打开第一个分类\r\n    if (this.emoticons.length > 0) this.openGrp(0)\r\n  }\r\n\r\n  /** 打开一个表情组 */\r\n  public openGrp(index: number) {\r\n    Array.from(this.$grpWrap.children).forEach((item) => {\r\n      const el = item as HTMLElement\r\n      if (el.getAttribute('data-index') !== String(index)) {\r\n        el.style.display = 'none'\r\n      } else {\r\n        el.style.display = ''\r\n      }\r\n    })\r\n\r\n    this.$grpSwitcher\r\n      ?.querySelectorAll('span.active')\r\n      .forEach((item) => item.classList.remove('active'))\r\n    this.$grpSwitcher?.querySelector(`span[data-index=\"${index}\"]`)?.classList.add('active')\r\n\r\n    this.changeListHeight()\r\n  }\r\n\r\n  private changeListHeight() {\r\n    /* const listWrapHeight = Utils.getHeight(this.$grpWrapem)\r\n    this.editor.plugWrapEl.style.height = `${listWrapHeight > 150 ? listWrapHeight : 150}px` */\r\n  }\r\n\r\n  /** 处理评论 content 中的表情内容 */\r\n  public transEmoticonImageText(text: string) {\r\n    if (!this.emoticons || !Array.isArray(this.emoticons)) return text\r\n\r\n    this.emoticons.forEach((grp) => {\r\n      if (grp.type !== 'image') return\r\n      Object.entries(grp.items).forEach(([index, item]) => {\r\n        text = text\r\n          .split(`:[${item.key}]`)\r\n          .join(`<img src=\"${item.val}\" atk-emoticon=\"${item.key}\">`) // replaceAll(...)\r\n      })\r\n    })\r\n\r\n    return text\r\n  }\r\n}\r\n","import type PlugKit from './_kit'\r\nimport EditorPlug from './_plug'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\n/** 允许的图片格式 */\r\nconst AllowImgExts = ['png', 'jpg', 'jpeg', 'gif', 'bmp', 'svg', 'webp']\r\n\r\nexport default class Upload extends EditorPlug {\r\n  private $imgUploadInput?: HTMLInputElement\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.kit.useMounted(() => this.init())\r\n\r\n    this.initDragImg()\r\n  }\r\n\r\n  private init() {\r\n    this.$imgUploadInput = document.createElement('input')\r\n    this.$imgUploadInput.type = 'file'\r\n    this.$imgUploadInput.style.display = 'none'\r\n    this.$imgUploadInput.accept = AllowImgExts.map((o) => `.${o}`).join(',')\r\n\r\n    // TODO: Use btn cannot refresh when mounted event is triggered\r\n    const $btn = this.useBtn(\r\n      `<i aria-label=\"${$t('uploadImage')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" height=\"14\" viewBox=\"0 0 14 14\" width=\"14\"><path d=\"m0 1.94444c0-1.074107.870333-1.94444 1.94444-1.94444h10.11116c1.0741 0 1.9444.870333 1.9444 1.94444v10.11116c0 1.0741-.8703 1.9444-1.9444 1.9444h-10.11116c-1.074107 0-1.94444-.8703-1.94444-1.9444zm1.94444-.38888c-.21466 0-.38888.17422-.38888.38888v7.06689l2.33333-2.33333 2.33333 2.33333 3.88888-3.88889 2.3333 2.33334v-5.51134c0-.21466-.1742-.38888-.3888-.38888zm10.49996 8.09977-2.3333-2.33333-3.88888 3.8889-2.33333-2.33334-2.33333 2.33334v.8447c0 .2146.17422.3888.38888.3888h10.11116c.2146 0 .3888-.1742.3888-.3888zm-7.1944-6.54422c-.75133 0-1.36111.60978-1.36111 1.36111 0 .75134.60978 1.36111 1.36111 1.36111s1.36111-.60977 1.36111-1.36111c0-.75133-.60978-1.36111-1.36111-1.36111z\"/></svg></i>`,\r\n    )\r\n    $btn.after(this.$imgUploadInput)\r\n    $btn.onclick = () => {\r\n      // 选择图片\r\n      const $input = this.$imgUploadInput!\r\n      $input.onchange = () => {\r\n        ;(async () => {\r\n          // 解决阻塞 UI 问题\r\n          if (!$input.files || $input.files.length === 0) return\r\n          const file = $input.files[0]\r\n          this.uploadImg(file)\r\n        })()\r\n      }\r\n      $input.click() // 显示选择图片对话框\r\n    }\r\n\r\n    if (!this.kit.useConf().imgUpload) {\r\n      this.$btn!.setAttribute('atk-only-admin-show', '')\r\n    }\r\n  }\r\n\r\n  private initDragImg() {\r\n    // 统一从 FileList 获取文件并上传图片方法\r\n    const uploadFromFileList = (files?: FileList) => {\r\n      if (!files) return\r\n\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i]\r\n        this.uploadImg(file)\r\n      }\r\n    }\r\n\r\n    // 拖拽图片\r\n    // @link https://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\r\n    // 阻止浏览器的默认释放行为\r\n    const onDragover = (evt: Event) => {\r\n      evt.stopPropagation()\r\n      evt.preventDefault()\r\n    }\r\n\r\n    const onDrop = (evt: DragEvent) => {\r\n      const files = evt.dataTransfer?.files\r\n      if (files?.length) {\r\n        evt.preventDefault()\r\n        uploadFromFileList(files)\r\n      }\r\n    }\r\n\r\n    // 粘贴图片\r\n    const onPaste = (evt: ClipboardEvent) => {\r\n      const files = evt.clipboardData?.files\r\n      if (files?.length) {\r\n        evt.preventDefault()\r\n        uploadFromFileList(files)\r\n      }\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      this.kit.useUI().$textarea.addEventListener('dragover', onDragover)\r\n      this.kit.useUI().$textarea.addEventListener('drop', onDrop)\r\n      this.kit.useUI().$textarea.addEventListener('paste', onPaste)\r\n    })\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useUI().$textarea.removeEventListener('dragover', onDragover)\r\n      this.kit.useUI().$textarea.removeEventListener('drop', onDrop)\r\n      this.kit.useUI().$textarea.removeEventListener('paste', onPaste)\r\n    })\r\n  }\r\n\r\n  async uploadImg(file: File) {\r\n    const fileExt = /[^.]+$/.exec(file.name)\r\n    if (!fileExt || !AllowImgExts.includes(String(fileExt[0]).toLowerCase())) return\r\n\r\n    // 未登录提示\r\n    if (!this.kit.useUser().checkHasBasicUserInfo()) {\r\n      this.kit.useEditor().showNotify($t('uploadLoginMsg'), 'w')\r\n      return\r\n    }\r\n\r\n    // 插入图片前换一行\r\n    let insertPrefix = '\\n'\r\n    if (this.kit.useUI().$textarea.value.trim() === '') insertPrefix = ''\r\n\r\n    // 插入占位加载文字\r\n    const uploadPlaceholderTxt = `${insertPrefix}![](Uploading ${file.name}...)`\r\n    this.kit.useEditor().insertContent(uploadPlaceholderTxt)\r\n\r\n    // 上传图片\r\n    let resp: { public_url: string } | undefined\r\n    try {\r\n      const customUploaderFn = this.kit.useConf().imgUploader\r\n      if (!customUploaderFn) {\r\n        // 使用 Artalk 进行图片上传\r\n        resp = (await this.kit.useApi().upload.upload({ file })).data\r\n      } else {\r\n        // 使用自定义的图片上传器\r\n        resp = { public_url: await customUploaderFn(file) }\r\n      }\r\n    } catch (err: any) {\r\n      console.error(err)\r\n      this.kit.useEditor().showNotify(`${$t('uploadFail')}: ${err.message}`, 'e')\r\n    }\r\n    if (!!resp && resp.public_url) {\r\n      let imgURL = resp.public_url as string\r\n\r\n      // 若为相对路径，加上 artalk server\r\n      if (!Utils.isValidURL(imgURL))\r\n        imgURL = Utils.getURLBasedOnApi({\r\n          base: this.kit.useConf().server,\r\n          path: imgURL,\r\n        })\r\n\r\n      // 上传成功插入图片\r\n      this.kit\r\n        .useEditor()\r\n        .setContent(\r\n          this.kit\r\n            .useUI()\r\n            .$textarea.value.replace(uploadPlaceholderTxt, `${insertPrefix}![](${imgURL})`),\r\n        )\r\n    } else {\r\n      // 上传失败删除加载文字\r\n      this.kit\r\n        .useEditor()\r\n        .setContent(this.kit.useUI().$textarea.value.replace(uploadPlaceholderTxt, ''))\r\n    }\r\n  }\r\n}\r\n","import './preview.scss'\r\n\r\nimport EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport * as marked from '@/lib/marked'\r\nimport $t from '@/i18n'\r\n\r\nexport default class Preview extends EditorPlug {\r\n  private isPlugPanelShow = false\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.kit.useMounted(() => {\r\n      this.usePanel(`<div class=\"atk-editor-plug-preview\"></div>`)\r\n\r\n      // initialize plug button\r\n      this.useBtn(\r\n        `<i aria-label=\"${$t('preview')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\"></path></svg></i>`,\r\n      )\r\n    })\r\n    this.kit.useUnmounted(() => {})\r\n\r\n    // function to update content\r\n    this.kit.useEvents().on('content-updated', (content) => {\r\n      this.isPlugPanelShow && this.updateContent()\r\n    })\r\n\r\n    this.usePanelShow(() => {\r\n      this.isPlugPanelShow = true\r\n      this.updateContent()\r\n    })\r\n    this.usePanelHide(() => {\r\n      this.isPlugPanelShow = false\r\n    })\r\n  }\r\n\r\n  updateContent() {\r\n    this.$panel!.innerHTML = this.kit.useEditor().getContentMarked()\r\n  }\r\n}\r\n","import type EditorPlug from './_plug'\r\nimport LocalStorage from './local-storage'\r\nimport Textarea from './textarea'\r\nimport SubmitBtn from './submit-btn'\r\nimport Submit from './submit'\r\nimport StateReply from './state-reply'\r\nimport StateEdit from './state-edit'\r\nimport Closable from './closable'\r\nimport HeaderEvent from './header-event'\r\nimport HeaderUser from './header-user'\r\nimport HeaderLink from './header-link'\r\nimport Mover from './mover'\r\nimport Emoticons from './emoticons'\r\nimport Upload from './upload'\r\nimport Preview from './preview'\r\nimport type { ArtalkConfig } from '@/types'\r\n\r\n/** The default enabled plugs */\r\nconst EDITOR_PLUGS: (typeof EditorPlug)[] = [\r\n  // Core\r\n  LocalStorage,\r\n  HeaderEvent,\r\n  HeaderUser,\r\n  // HeaderLink,\r\n  Textarea,\r\n  Submit,\r\n  SubmitBtn,\r\n  Mover,\r\n  StateReply,\r\n  StateEdit,\r\n  Closable,\r\n\r\n  // Extensions\r\n  Emoticons,\r\n  Upload,\r\n  Preview,\r\n]\r\n\r\n/**\r\n * Get the enabled plugs by config\r\n */\r\nexport function getEnabledPlugs(\r\n  conf: Pick<ArtalkConfig, 'imgUpload' | 'emoticons' | 'preview' | 'editorTravel'>,\r\n): (typeof EditorPlug)[] {\r\n  // The reference map of config and plugs\r\n  // (for check if the plug is enabled)\r\n  const confRefs = new Map<typeof EditorPlug, any>()\r\n  confRefs.set(Upload, conf.imgUpload)\r\n  confRefs.set(Emoticons, conf.emoticons)\r\n  confRefs.set(Preview, conf.preview)\r\n  confRefs.set(Mover, conf.editorTravel)\r\n\r\n  return EDITOR_PLUGS.filter((p) => !confRefs.has(p) || !!confRefs.get(p))\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\n\r\nexport default class HeaderEvent extends EditorPlug {\r\n  private get $inputs() {\r\n    return this.kit.useEditor().getHeaderInputEls()\r\n  }\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const inputEventFns: { [name: string]: () => void } = {}\r\n    const changeEventFns: { [name: string]: () => void } = {}\r\n\r\n    const trigger =\r\n      (evt: 'header-input' | 'header-change', $input: HTMLInputElement, field: string) => () => {\r\n        this.kit.useEvents().trigger(evt, { field, $input })\r\n      }\r\n\r\n    this.kit.useMounted(() => {\r\n      // batch bind the events\r\n      Object.entries(this.$inputs).forEach(([key, $input]) => {\r\n        $input.addEventListener(\r\n          'input',\r\n          (inputEventFns[key] = trigger('header-input', $input, key)),\r\n        )\r\n        $input.addEventListener(\r\n          'change',\r\n          (changeEventFns[key] = trigger('header-change', $input, key)),\r\n        )\r\n      })\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      // unmount the event\r\n      Object.entries(this.$inputs).forEach(([key, $input]) => {\r\n        $input.removeEventListener('input', inputEventFns[key])\r\n        $input.removeEventListener('change', changeEventFns[key])\r\n      })\r\n    })\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport $t from '@/i18n'\r\nimport type { UserInfoApiResponseData } from '@/types'\r\n\r\nexport default class HeaderUser extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onInput = ({ $input, field }: { $input: HTMLInputElement; field: string }) => {\r\n      if (this.kit.useEditor().getState() === 'edit') return // TODO: prevent execute when editing, since update comment.user not support\r\n\r\n      // update user data\r\n      this.kit.useUser().update({ [field]: $input.value.trim() })\r\n\r\n      // remote fetch user info\r\n      if (field === 'nick' || field === 'email') this.fetchUserInfo() // must after update user data, since fetchUserInfo() will use User.data\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      Object.entries(this.kit.useEditor().getHeaderInputEls()).forEach(([key, $input]) => {\r\n        // set placeholder\r\n        $input.placeholder = `${$t(key as any)}`\r\n\r\n        // sync header values from User.data\r\n        $input.value = this.kit.useUser().getData()[key] || ''\r\n      })\r\n\r\n      // bind events\r\n      this.kit.useEvents().on('header-input', onInput)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useEvents().off('header-input', onInput)\r\n    })\r\n  }\r\n\r\n  private query = {\r\n    timer: <number | null>null,\r\n    abortFn: <(() => void) | null>null,\r\n  }\r\n\r\n  /**\r\n   * Fetch user info from server\r\n   */\r\n  private fetchUserInfo() {\r\n    this.kit.useUser().logout() // clear login status\r\n\r\n    if (this.query.timer) window.clearTimeout(this.query.timer) // clear the not executed timeout task\r\n    if (this.query.abortFn) this.query.abortFn() // abort the last request (if request is pending not finished)\r\n\r\n    this.query.timer = window.setTimeout(() => {\r\n      this.query.timer = null // clear the timer (clarify the timer is executing)\r\n\r\n      const api = this.kit.useApi()\r\n      const CANCEL_TOKEN = 'getUserCancelToken'\r\n      this.query.abortFn = () => api.abortRequest(CANCEL_TOKEN)\r\n\r\n      api.user\r\n        .getUser(\r\n          { ...api.getUserFields() },\r\n          {\r\n            cancelToken: CANCEL_TOKEN,\r\n          },\r\n        )\r\n        .then((res) => this.onUserInfoFetched(res.data))\r\n        .catch((err) => {})\r\n        .finally(() => {\r\n          this.query.abortFn = null // clear the abort function (clarify the request is finished)\r\n        })\r\n    }, 400) // delay to reduce request\r\n  }\r\n\r\n  /**\r\n   * Function called when user info fetched\r\n   *\r\n   * @param data The response data from server\r\n   */\r\n  private onUserInfoFetched(data: UserInfoApiResponseData) {\r\n    // If api response is not login, logout\r\n    if (!data.is_login) this.kit.useUser().logout()\r\n\r\n    // Update unread notifies\r\n    this.kit.useGlobalCtx().getData().updateNotifies(data.notifies)\r\n\r\n    // If user is admin and not login,\r\n    if (this.kit.useUser().checkHasBasicUserInfo() && !data.is_login && data.user?.is_admin) {\r\n      // then show login window\r\n      this.kit.useGlobalCtx().checkAdmin({\r\n        onSuccess: () => {},\r\n      })\r\n    }\r\n\r\n    // Auto fill user link from server\r\n    if (data.user && data.user.link) {\r\n      // this.kit.useUI().$link.value = data.user.link\r\n      this.kit.useUser().update({ link: data.user.link })\r\n    }\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport $t from '@/i18n'\r\n\r\nexport default class Textarea extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onKeydown = (e: KeyboardEvent) => this.onKeydown(e)\r\n    const onInput = () => this.onInput()\r\n\r\n    this.kit.useMounted(() => {\r\n      // 占位符\r\n      this.kit.useUI().$textarea.placeholder = this.kit.useConf().placeholder || $t('placeholder')\r\n\r\n      // bind the event\r\n      this.kit.useUI().$textarea.addEventListener('keydown', onKeydown)\r\n      this.kit.useUI().$textarea.addEventListener('input', onInput)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      // unmount the event\r\n      this.kit.useUI().$textarea.removeEventListener('keydown', onKeydown)\r\n      this.kit.useUI().$textarea.removeEventListener('input', onInput)\r\n    })\r\n\r\n    this.kit.useEvents().on('content-updated', () => {\r\n      // delay 80ms to prevent invalid execution\r\n      window.setTimeout(() => {\r\n        this.adaptiveHeightByContent()\r\n      }, 80)\r\n    })\r\n  }\r\n\r\n  // 按下 Tab 输入内容，而不是失去焦距\r\n  private onKeydown(e: KeyboardEvent) {\r\n    const keyCode = e.keyCode || e.which\r\n\r\n    if (keyCode === 9) {\r\n      e.preventDefault()\r\n      this.kit.useEditor().insertContent('\\t')\r\n    }\r\n  }\r\n\r\n  private onInput() {\r\n    this.kit.useEvents().trigger('content-updated', this.kit.useEditor().getContentRaw())\r\n  }\r\n\r\n  // Resize the textarea height by content\r\n  public adaptiveHeightByContent() {\r\n    const diff = this.kit.useUI().$textarea.offsetHeight - this.kit.useUI().$textarea.clientHeight\r\n    this.kit.useUI().$textarea.style.height = '0px' // it's a magic. 若不加此行，内容减少，高度回不去\r\n    this.kit.useUI().$textarea.style.height = `${this.kit.useUI().$textarea.scrollHeight + diff}px`\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport $t from '@/i18n'\r\n\r\nexport default class SubmitBtn extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onClick = () => {\r\n      this.kit.useEditor().submit()\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      // apply the submit button text from user custom config\r\n      this.kit.useUI().$submitBtn.innerText = this.kit.useConf().sendBtn || $t('send')\r\n\r\n      // bind the event when click the submit button\r\n      this.kit.useUI().$submitBtn.addEventListener('click', onClick)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useUI().$submitBtn.removeEventListener('click', onClick)\r\n    })\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport Submit from './submit'\r\nimport SubmitAddPreset from './submit-add'\r\nimport type { CommentData } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\nimport $t from '@/i18n'\r\n\r\nexport default class StateReply extends EditorPlug {\r\n  private comment?: CommentData\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    // add effect when state switch to `reply`\r\n    this.useEditorStateEffect('reply', (commentData) => {\r\n      this.setReply(commentData)\r\n\r\n      return () => {\r\n        this.cancelReply()\r\n      }\r\n    })\r\n\r\n    // register submit preset\r\n    this.kit.useEvents().on('mounted', () => {\r\n      const submitPlug = this.kit.useDeps(Submit)\r\n      if (!submitPlug) throw Error('SubmitPlug not initialized')\r\n\r\n      const defaultPreset = new SubmitAddPreset(this.kit)\r\n\r\n      submitPlug.registerCustom({\r\n        activeCond: () => !!this.comment, // active this custom submit when reply mode\r\n        req: async () => {\r\n          if (!this.comment) throw new Error('reply comment cannot be empty')\r\n\r\n          const nComment = (\r\n            await this.kit.useApi().comments.createComment({\r\n              ...(await defaultPreset.getSubmitAddParams()),\r\n              rid: this.comment.id,\r\n              page_key: this.comment.page_key,\r\n              page_title: undefined,\r\n              site_name: this.comment.site_name,\r\n            })\r\n          ).data\r\n\r\n          return nComment\r\n        },\r\n        post: (nComment: CommentData) => {\r\n          // open another page when reply comment is not the same pageKey\r\n          const conf = this.kit.useConf()\r\n          if (nComment.page_key !== conf.pageKey) {\r\n            window.open(`${nComment.page_url}#atk-comment-${nComment.id}`)\r\n          }\r\n\r\n          defaultPreset.postSubmitAdd(nComment)\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  private setReply(commentData: CommentData) {\r\n    const ui = this.kit.useUI()\r\n    if (!ui.$sendReplyBtn) {\r\n      const $btn = Utils.createElement(\r\n        `<span class=\"atk-state-btn\">` +\r\n          `<span class=\"atk-text-wrap\">` +\r\n          `${$t('reply')} <span class=\"atk-text\"></span>` +\r\n          `</span>` +\r\n          `<span class=\"atk-cancel atk-icon-close atk-icon\"></span>` +\r\n          `</span>`,\r\n      )\r\n      $btn.querySelector<HTMLElement>('.atk-text')!.innerText = `@${commentData.nick}`\r\n      $btn.addEventListener('click', () => {\r\n        this.kit.useEditor().resetState()\r\n      })\r\n      ui.$stateWrap.append($btn)\r\n      ui.$sendReplyBtn = $btn\r\n    }\r\n\r\n    this.comment = commentData\r\n\r\n    ui.$textarea.focus()\r\n  }\r\n\r\n  private cancelReply() {\r\n    if (!this.comment) return\r\n\r\n    const ui = this.kit.useUI()\r\n    if (ui.$sendReplyBtn) {\r\n      ui.$sendReplyBtn.remove()\r\n      ui.$sendReplyBtn = undefined\r\n    }\r\n    this.comment = undefined\r\n  }\r\n}\r\n","import type PlugKit from './_kit'\r\nimport EditorPlug from './_plug'\r\nimport Submit from './submit'\r\nimport type { CommentData } from '@/types'\r\nimport $t from '@/i18n'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport default class StateEdit extends EditorPlug {\r\n  private comment?: CommentData\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    // add effect when state switch to `edit`\r\n    this.useEditorStateEffect('edit', (comment) => {\r\n      this.edit(comment)\r\n\r\n      return () => {\r\n        this.cancelEdit()\r\n      }\r\n    })\r\n\r\n    // register submit preset\r\n    this.kit.useMounted(() => {\r\n      const submitPlug = this.kit.useDeps(Submit)\r\n      if (!submitPlug) throw Error('SubmitPlug not initialized')\r\n\r\n      submitPlug.registerCustom({\r\n        activeCond: () => !!this.comment, // active this custom submit when edit mode\r\n        req: async () => {\r\n          const saveData = {\r\n            content: this.kit.useEditor().getContentFinal(),\r\n            nick: this.kit.useUI().$nick.value,\r\n            email: this.kit.useUI().$email.value,\r\n            link: this.kit.useUI().$link.value,\r\n          }\r\n          const comment = this.comment!\r\n          const nComment = await this.kit.useApi().comments.updateComment(comment.id, {\r\n            ...comment,\r\n            ...saveData,\r\n          })\r\n          return nComment.data\r\n        },\r\n        post: (nComment: CommentData) => {\r\n          this.kit.useGlobalCtx().getData().updateComment(nComment)\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  private edit(comment: CommentData) {\r\n    const ui = this.kit.useUI()\r\n    if (!ui.$editCancelBtn) {\r\n      const $btn = Utils.createElement(\r\n        `<span class=\"atk-state-btn\">` +\r\n          `<span class=\"atk-text-wrap\">` +\r\n          `${$t('editCancel')}` +\r\n          `</span>` +\r\n          `<span class=\"atk-cancel atk-icon-close atk-icon\"></span>` +\r\n          `</span>`,\r\n      )\r\n      $btn.onclick = () => {\r\n        this.kit.useEditor().resetState()\r\n      }\r\n      ui.$stateWrap.append($btn)\r\n      ui.$editCancelBtn = $btn\r\n    }\r\n    this.comment = comment\r\n\r\n    ui.$header.style.display = 'none' // TODO: support modify header information\r\n\r\n    ui.$nick.value = comment.nick || ''\r\n    ui.$email.value = comment.email || ''\r\n    // ui.$link.value = comment.link || ''\r\n\r\n    this.kit.useEditor().setContent(comment.content)\r\n    ui.$textarea.focus()\r\n\r\n    this.updateSubmitBtnText($t('save'))\r\n  }\r\n\r\n  private cancelEdit() {\r\n    if (!this.comment) return\r\n\r\n    const ui = this.kit.useUI()\r\n\r\n    if (ui.$editCancelBtn) {\r\n      ui.$editCancelBtn.remove()\r\n      ui.$editCancelBtn = undefined\r\n    }\r\n\r\n    this.comment = undefined\r\n\r\n    const { nick, email, link } = this.kit.useUser().getData()\r\n    ui.$nick.value = nick\r\n    ui.$email.value = email\r\n    // ui.$link.value = link\r\n\r\n    this.kit.useEditor().setContent('')\r\n    this.restoreSubmitBtnText()\r\n\r\n    ui.$header.style.display = '' // TODO: support modify header information\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  //  Submit Btn Text Modifier\r\n  // -------------------------------------------------------------------\r\n\r\n  private originalSubmitBtnText = 'Send'\r\n\r\n  private updateSubmitBtnText(text: string) {\r\n    this.originalSubmitBtnText = this.kit.useUI().$submitBtn.innerText\r\n    this.kit.useUI().$submitBtn.innerText = text\r\n  }\r\n\r\n  private restoreSubmitBtnText() {\r\n    this.kit.useUI().$submitBtn.innerText = this.originalSubmitBtnText\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nexport default class Closable extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onOpen = () => this.open()\r\n    const onClose = () => this.close()\r\n\r\n    this.kit.useMounted(() => {\r\n      this.kit.useEvents().on('editor-open', onOpen)\r\n      this.kit.useEvents().on('editor-close', onClose)\r\n    })\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useEvents().off('editor-open', onOpen)\r\n      this.kit.useEvents().off('editor-close', onClose)\r\n    })\r\n  }\r\n\r\n  private open() {\r\n    this.kit.useUI().$textareaWrap.querySelector('.atk-comment-closed')?.remove()\r\n    this.kit.useUI().$textarea.style.display = ''\r\n    this.kit.useUI().$bottom.style.display = ''\r\n  }\r\n\r\n  private close() {\r\n    if (!this.kit.useUI().$textareaWrap.querySelector('.atk-comment-closed'))\r\n      this.kit\r\n        .useUI()\r\n        .$textareaWrap.prepend(\r\n          Utils.createElement(`<div class=\"atk-comment-closed\">${$t('onlyAdminCanReply')}</div>`),\r\n        )\r\n\r\n    if (!this.kit.useUser().getData().isAdmin) {\r\n      this.kit.useUI().$textarea.style.display = 'none'\r\n      this.kit.useEvents().trigger('panel-close')\r\n      this.kit.useUI().$bottom.style.display = 'none'\r\n    } else {\r\n      // 管理员一直打开评论\r\n      this.kit.useUI().$textarea.style.display = ''\r\n      this.kit.useUI().$bottom.style.display = ''\r\n    }\r\n  }\r\n}\r\n","import type { PlugManager } from '../editor-kit'\r\nimport type EditorPlug from './_plug'\r\n\r\n/**\r\n * PlugKit provides a set of methods to help you develop editor plug\r\n */\r\nexport default class PlugKit {\r\n  constructor(private plugs: PlugManager) {}\r\n\r\n  /** Use the editor */\r\n  useEditor() {\r\n    return this.plugs.editor\r\n  }\r\n\r\n  /**\r\n   * Use the context of global\r\n   *\r\n   * @deprecated The calls to this function should be reduced as much as possible\r\n   */\r\n  useGlobalCtx() {\r\n    return this.plugs.editor.ctx\r\n  }\r\n\r\n  /** Use the config of Artalk */\r\n  useConf() {\r\n    return this.plugs.editor.ctx.conf\r\n  }\r\n\r\n  /** Use the http api client */\r\n  useApi() {\r\n    return this.plugs.editor.ctx.getApi()\r\n  }\r\n\r\n  /** Use the user manager */\r\n  useUser() {\r\n    return this.plugs.editor.ctx.get('user')\r\n  }\r\n\r\n  /** Use the ui of editor */\r\n  useUI() {\r\n    return this.plugs.editor.getUI()\r\n  }\r\n\r\n  /** Use the events in editor scope */\r\n  useEvents() {\r\n    return this.plugs.getEvents()\r\n  }\r\n\r\n  /** Listen the event when plug is mounted */\r\n  useMounted(func: () => void) {\r\n    this.useEvents().on('mounted', func)\r\n  }\r\n\r\n  /** Listen the event when plug is unmounted */\r\n  useUnmounted(func: () => void) {\r\n    this.useEvents().on('unmounted', func)\r\n  }\r\n\r\n  /** Use the deps of other plug */\r\n  useDeps<T extends typeof EditorPlug>(plug: T) {\r\n    return this.plugs.get(plug)\r\n  }\r\n}\r\n","import { getEnabledPlugs } from './editor'\r\nimport EditorPlug from './editor/_plug'\r\nimport PlugKit from './editor/_kit'\r\nimport EventManager from '@/lib/event-manager'\r\nimport type { EditorApi, ArtalkPlugin } from '@/types'\r\n\r\nexport interface EditorEventPayloadMap {\r\n  mounted: undefined\r\n  unmounted: undefined\r\n  'header-input': { field: string; $input: HTMLInputElement }\r\n  'header-change': { field: string; $input: HTMLInputElement }\r\n  'content-updated': string\r\n  'panel-show': EditorPlug\r\n  'panel-hide': EditorPlug\r\n  'panel-close': undefined\r\n\r\n  'editor-close': undefined\r\n  'editor-open': undefined\r\n}\r\n\r\nexport const EditorKit: ArtalkPlugin = (ctx) => {\r\n  const editor = ctx.get('editor')\r\n\r\n  const editorPlugs = new PlugManager(editor)\r\n  ctx.inject('editorPlugs', editorPlugs)\r\n}\r\n\r\nexport class PlugManager {\r\n  private plugs: EditorPlug[] = []\r\n  private openedPlug: EditorPlug | null = null\r\n  private events = new EventManager<EditorEventPayloadMap>()\r\n\r\n  getPlugs() {\r\n    return this.plugs\r\n  }\r\n  getEvents() {\r\n    return this.events\r\n  }\r\n\r\n  private clear() {\r\n    this.plugs = []\r\n    this.events = new EventManager()\r\n    if (this.openedPlug) this.closePlugPanel()\r\n  }\r\n\r\n  constructor(public editor: EditorApi) {\r\n    let confLoaded = false // config not loaded at first time\r\n    this.editor.ctx.watchConf(\r\n      ['imgUpload', 'emoticons', 'preview', 'editorTravel', 'locale'],\r\n      (conf) => {\r\n        // trigger unmount event will call all plugs' unmount function\r\n        // (this will only be called while conf reloaded, not be called at first time)\r\n        confLoaded && this.getEvents().trigger('unmounted')\r\n\r\n        // reset the plugs\r\n        this.clear()\r\n\r\n        // init the all enabled plugs\r\n        getEnabledPlugs(conf).forEach((Plug) => {\r\n          // create the plug instance\r\n          const kit = new PlugKit(this)\r\n          this.plugs.push(new Plug(kit))\r\n        })\r\n\r\n        // trigger event for plug initialization\r\n        this.getEvents().trigger('mounted')\r\n        confLoaded = true\r\n\r\n        // refresh the plug UI\r\n        this.loadPluginUI()\r\n      },\r\n    )\r\n\r\n    this.events.on('panel-close', () => this.closePlugPanel())\r\n  }\r\n\r\n  private loadPluginUI() {\r\n    // handle ui, clear and reset the plug btns and plug panels\r\n    this.editor.getUI().$plugPanelWrap.innerHTML = ''\r\n    this.editor.getUI().$plugPanelWrap.style.display = 'none'\r\n    this.editor.getUI().$plugBtnWrap.innerHTML = ''\r\n\r\n    // load the plug UI\r\n    this.plugs.forEach((plug) => this.loadPluginItem(plug))\r\n  }\r\n\r\n  /** Load the plug btn and plug panel on editor ui */\r\n  private loadPluginItem(plug: EditorPlug) {\r\n    const $btn = plug.$btn\r\n    if (!$btn) return\r\n    this.editor.getUI().$plugBtnWrap.appendChild($btn)\r\n\r\n    // bind the event when click plug btn\r\n    !$btn.onclick &&\r\n      ($btn.onclick = () => {\r\n        // removing the active class from all the buttons\r\n        this.editor\r\n          .getUI()\r\n          .$plugBtnWrap.querySelectorAll('.active')\r\n          .forEach((item) => item.classList.remove('active'))\r\n\r\n        // if the plug is not the same as the openedPlug,\r\n        if (plug !== this.openedPlug) {\r\n          // then open the plug current clicked plug panel\r\n          this.openPlugPanel(plug)\r\n\r\n          // add active class for current plug panel\r\n          $btn.classList.add('active')\r\n        } else {\r\n          // then close the plug\r\n          this.closePlugPanel()\r\n        }\r\n      })\r\n\r\n    // initialization of plug panel\r\n    const $panel = plug.$panel\r\n    if ($panel) {\r\n      $panel.style.display = 'none'\r\n      this.editor.getUI().$plugPanelWrap.appendChild($panel)\r\n    }\r\n  }\r\n\r\n  get<T extends typeof EditorPlug>(plug: T) {\r\n    return this.plugs.find((p) => p instanceof plug) as InstanceType<T> | undefined\r\n  }\r\n\r\n  /** Open the editor plug panel */\r\n  openPlugPanel(plug: EditorPlug) {\r\n    this.plugs.forEach((aPlug) => {\r\n      const plugPanel = aPlug.$panel\r\n      if (!plugPanel) return\r\n\r\n      if (aPlug === plug) {\r\n        plugPanel.style.display = ''\r\n        this.events.trigger('panel-show', plug)\r\n      } else {\r\n        plugPanel.style.display = 'none'\r\n        this.events.trigger('panel-hide', plug)\r\n      }\r\n    })\r\n\r\n    this.editor.getUI().$plugPanelWrap.style.display = ''\r\n    this.openedPlug = plug\r\n  }\r\n\r\n  /** Close the editor plug panel */\r\n  closePlugPanel() {\r\n    if (!this.openedPlug) return\r\n\r\n    this.editor.getUI().$plugPanelWrap.style.display = 'none'\r\n    this.events.trigger('panel-hide', this.openedPlug)\r\n    this.openedPlug = null\r\n  }\r\n\r\n  /** Get the content which is transformed by plugs */\r\n  getTransformedContent(rawContent: string) {\r\n    let result = rawContent\r\n    this.plugs.forEach((aPlug) => {\r\n      if (!aPlug.contentTransformer) return\r\n      result = aPlug.contentTransformer(result)\r\n    })\r\n    return result\r\n  }\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const GotoFocus: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-goto', async (commentID) => {\r\n    // find the comment node\r\n    let comment = ctx.getCommentNodes().find((c) => c.getID() === commentID)\r\n    if (!comment) {\r\n      // fetch and insert the comment from the server\r\n      const data = (await ctx.getApi().comments.getComment(commentID)).data\r\n      ctx\r\n        .get('list')\r\n        .getListLayout({ forceFlatMode: true })\r\n        .insert(data.comment, data.reply_comment)\r\n      comment = ctx.getCommentNodes().find((c) => c.getID() === commentID)\r\n    }\r\n    if (!comment) return\r\n    comment.focus()\r\n  })\r\n}\r\n","import * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\nimport $t from '@/i18n'\r\n\r\nexport interface ErrorDialogOptions {\r\n  $err: HTMLElement\r\n\r\n  errMsg: string\r\n  errData?: any\r\n  retryFn?: () => void\r\n\r\n  onOpenSidebar?: () => void\r\n}\r\n\r\nexport function showErrorDialog(opts: ErrorDialogOptions) {\r\n  const errEl = Utils.createElement(`<span><span class=\"error-message\"></span><br/><br/></span>`)\r\n  errEl.querySelector<HTMLElement>('.error-message')!.innerText =\r\n    `${$t('listLoadFailMsg')}\\n${opts.errMsg}`\r\n\r\n  if (opts.retryFn) {\r\n    const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\r\n    $retryBtn.onclick = () => opts.retryFn && opts.retryFn()\r\n    errEl.appendChild($retryBtn)\r\n  }\r\n\r\n  if (opts.onOpenSidebar) {\r\n    const $openSidebar = Utils.createElement(\r\n      `<span atk-only-admin-show> | <span style=\"cursor:pointer;\">${$t('openName', { name: $t('ctrlCenter') })}</span></span>`,\r\n    )\r\n    errEl.appendChild($openSidebar)\r\n    $openSidebar.onclick = () => opts.onOpenSidebar && opts.onOpenSidebar()\r\n  }\r\n\r\n  Ui.setError(opts.$err, errEl)\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport { version as ARTALK_VERSION } from '~/package.json'\r\nimport type List from '~/src/list/list'\r\nimport * as Ui from '@/lib/ui'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nlet IgnoreVersionCheck = false\r\n\r\nexport const VersionCheck: ArtalkPlugin = (ctx) => {\r\n  ctx.watchConf(['apiVersion', 'versionCheck'], (conf) => {\r\n    const list = ctx.get('list')\r\n    if (conf.apiVersion && conf.versionCheck && !IgnoreVersionCheck)\r\n      versionCheck(list, ARTALK_VERSION, conf.apiVersion)\r\n  })\r\n}\r\n\r\nfunction versionCheck(list: List, feVer: string, beVer: string) {\r\n  const comp = Utils.versionCompare(feVer, beVer)\r\n  const sameVer = comp === 0\r\n  if (sameVer) return\r\n\r\n  const errEl = Utils.createElement(\r\n    `<div class=\"atk-version-check-notice\">${$t('updateMsg', {\r\n      name: comp < 0 ? $t('frontend') : $t('backend'),\r\n    })} <span class=\"atk-info\">` +\r\n      `${$t('currentVersion')}: ${$t('frontend')} ${feVer} / ${$t('backend')} ${beVer}` +\r\n      `</span></div>`,\r\n  )\r\n  const ignoreBtn = Utils.createElement(`<span class=\"atk-ignore-btn\">${$t('ignore')}</span>`)\r\n  ignoreBtn.onclick = () => {\r\n    errEl.remove()\r\n    IgnoreVersionCheck = true\r\n  }\r\n  errEl.append(ignoreBtn)\r\n  list.$el.parentElement!.prepend(errEl)\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\n// Notice: Singleton pattern needs to be loaded as lazy as possible,\r\n//         because the SSG application does not have a `window` context.\r\nlet darkModeMedia: MediaQueryList | undefined\r\n\r\nfunction updateClassnames($els: HTMLElement[], darkMode: boolean) {\r\n  const DarkModeClassName = 'atk-dark-mode'\r\n\r\n  $els.forEach(($el) => {\r\n    if (darkMode) $el.classList.add(DarkModeClassName)\r\n    else $el.classList.remove(DarkModeClassName)\r\n  })\r\n}\r\n\r\nexport const DarkMode: ArtalkPlugin = (ctx) => {\r\n  // the handler bind to Artalk instance, don't forget to remove it when Artalk instance destroyed\r\n  let darkModeAutoHandler: ((evt: MediaQueryListEvent) => void) | undefined\r\n\r\n  const sync = (darkMode: boolean | 'auto') => {\r\n    // the elements that classnames need to be updated when darkMode changed\r\n    const $els = [ctx.$root, ctx.get('layerManager').getEl()]\r\n\r\n    // init darkModeMedia if not exists, and only create once\r\n    if (!darkModeMedia) {\r\n      darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)')\r\n    }\r\n\r\n    if (darkMode === 'auto') {\r\n      // if darkMode is 'auto', add handler\r\n      if (!darkModeAutoHandler) {\r\n        // the handler that will be called when darkModeMedia changed\r\n        darkModeAutoHandler = (evt) => updateClassnames($els, evt.matches)\r\n        darkModeMedia.addEventListener('change', darkModeAutoHandler)\r\n      }\r\n\r\n      // update classnames immediately\r\n      updateClassnames($els, darkModeMedia.matches)\r\n    } else {\r\n      // if darkMode is boolean, remove handler\r\n      if (darkModeAutoHandler) {\r\n        darkModeMedia.removeEventListener('change', darkModeAutoHandler)\r\n        darkModeAutoHandler = undefined\r\n      }\r\n\r\n      // update classnames immediately\r\n      updateClassnames($els, darkMode)\r\n    }\r\n  }\r\n\r\n  ctx.watchConf(['darkMode'], (conf) => sync(conf.darkMode))\r\n  ctx.on('created', () => sync(ctx.conf.darkMode))\r\n  ctx.on('unmounted', () => {\r\n    // if handler exists, don't forget to remove it, or it will cause memory leak\r\n    darkModeAutoHandler && darkModeMedia?.removeEventListener('change', darkModeAutoHandler)\r\n    darkModeAutoHandler = undefined\r\n  })\r\n}\r\n","import { Markdown } from './markdown'\r\nimport { EditorKit } from './editor-kit'\r\nimport { ListPlugins } from './list'\r\nimport { Notifies } from './notifies'\r\nimport { PvCountWidget } from './stat'\r\nimport { VersionCheck } from './version-check'\r\nimport { AdminOnlyElem } from './admin-only-elem'\r\nimport { DarkMode } from './dark-mode'\r\nimport type { ArtalkPlugin } from '@/types'\r\n\r\nexport const DefaultPlugins: ArtalkPlugin[] = [\r\n  Markdown,\r\n  EditorKit,\r\n  AdminOnlyElem,\r\n  ...ListPlugins,\r\n  Notifies,\r\n  PvCountWidget,\r\n  VersionCheck,\r\n  DarkMode,\r\n]\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const AdminOnlyElem: ArtalkPlugin = (ctx) => {\r\n  const scanApply = () => {\r\n    applyAdminOnlyEls(\r\n      ctx.get('user').getData().isAdmin,\r\n      getAdminOnlyEls({\r\n        $root: ctx.$root,\r\n      }),\r\n    )\r\n  }\r\n\r\n  ctx.on('list-loaded', () => {\r\n    scanApply()\r\n  })\r\n\r\n  ctx.on('user-changed', (user) => {\r\n    scanApply()\r\n  })\r\n}\r\n\r\nfunction getAdminOnlyEls(opts: { $root: HTMLElement }): HTMLElement[] {\r\n  const els: HTMLElement[] = []\r\n\r\n  // elements in $root\r\n  opts.$root\r\n    .querySelectorAll<HTMLElement>(`[atk-only-admin-show]`)\r\n    .forEach((item) => els.push(item))\r\n\r\n  // TODO: provide a Artalk.conf hook to set whitelist of admin-only elements,\r\n  // and move following code to that hook (move into @artalk/artalk-sidebar)\r\n\r\n  // elements in sidebar\r\n  const $sidebarEl = document.querySelector<HTMLElement>('.atk-sidebar')\r\n  if ($sidebarEl)\r\n    $sidebarEl\r\n      .querySelectorAll<HTMLElement>(`[atk-only-admin-show]`)\r\n      .forEach((item) => els.push(item))\r\n\r\n  return els\r\n}\r\n\r\nfunction applyAdminOnlyEls(isAdmin: boolean, els: HTMLElement[]) {\r\n  els.forEach(($item: HTMLElement) => {\r\n    if (isAdmin) $item.classList.remove('atk-hide')\r\n    else $item.classList.add('atk-hide')\r\n  })\r\n}\r\n","import { WithEditor } from './with-editor'\r\nimport { Unread } from './unread'\r\nimport { Count } from './count'\r\nimport { SidebarBtn } from './sidebar-btn'\r\nimport { UnreadBadge } from './unread-badge'\r\nimport { GotoDispatcher } from './goto-dispatcher'\r\nimport { GotoFocus } from './goto-focus'\r\nimport { Copyright } from './copyright'\r\nimport { NoComment } from './no-comment'\r\nimport { Dropdown } from './dropdown'\r\nimport { TimeTicking } from './time-ticking'\r\nimport { ErrorDialog } from './error-dialog'\r\nimport { Loading } from './loading'\r\nimport { Fetch } from './fetch'\r\nimport { ReachBottom } from './reach-bottom'\r\nimport { GotoFirst } from './goto-first'\r\nimport type { ArtalkPlugin } from '@/types'\r\n\r\nconst ListPlugins: ArtalkPlugin[] = [\r\n  Fetch,\r\n  Loading,\r\n  Unread,\r\n  WithEditor,\r\n  Count,\r\n  // SidebarBtn,\r\n  UnreadBadge,\r\n  Dropdown,\r\n  GotoDispatcher,\r\n  GotoFocus,\r\n  NoComment,\r\n  Copyright,\r\n  TimeTicking,\r\n  ErrorDialog,\r\n  ReachBottom,\r\n  GotoFirst,\r\n]\r\n\r\nexport { ListPlugins }\r\n","import type { ListFetchParams, ArtalkPlugin } from '@/types'\r\n\r\nexport const Fetch: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', (_params) => {\r\n    if (ctx.getData().getLoading()) return\r\n    ctx.getData().setLoading(true)\r\n\r\n    const params: ListFetchParams = {\r\n      // default params\r\n      offset: 0,\r\n      limit: ctx.conf.pagination.pageSize,\r\n      flatMode: ctx.conf.flatMode as boolean, // always be boolean because had been handled in Artalk.init\r\n      paramsModifier: ctx.conf.listFetchParamsModifier,\r\n      ..._params,\r\n    }\r\n\r\n    // must before other function call\r\n    ctx.getData().setListLastFetch({\r\n      params,\r\n    })\r\n\r\n    // prepare params for request\r\n    const reqParams = {\r\n      limit: params.limit,\r\n      offset: params.offset,\r\n      flat_mode: params.flatMode,\r\n      page_key: ctx.getConf().pageKey,\r\n      site_name: ctx.getConf().site,\r\n    }\r\n\r\n    // call the modifier function\r\n    if (params.paramsModifier) params.paramsModifier(reqParams)\r\n\r\n    // start request\r\n    ctx\r\n      .getApi()\r\n      .comments.getComments({\r\n        ...reqParams,\r\n        ...ctx.getApi().getUserFields(),\r\n      })\r\n      .then(({ data }) => {\r\n        // Must before all other function call and event trigger,\r\n        // because it will depend on the lastData\r\n        // TODO: this is global variable, easy to use, but not good, consider to refactor.\r\n        // refactor work is hard, because it is used in many places.\r\n        ctx.getData().setListLastFetch({ params, data })\r\n\r\n        // 装置评论\r\n        ctx.getData().loadComments(data.comments)\r\n\r\n        // 更新页面数据\r\n        ctx.getData().updatePage(data.page)\r\n\r\n        // trigger events when success\r\n        params.onSuccess && params.onSuccess(data)\r\n\r\n        ctx.trigger('list-fetched', { params, data })\r\n      })\r\n      .catch((e) => {\r\n        // 显示错误对话框\r\n        const error = {\r\n          msg: e.msg || String(e),\r\n          data: e.data,\r\n        }\r\n\r\n        params.onError && params.onError(error)\r\n\r\n        // trigger events when error\r\n        ctx.trigger('list-failed', error)\r\n        ctx.trigger('list-fetched', { params, error })\r\n\r\n        throw e\r\n      })\r\n      .finally(() => {\r\n        ctx.getData().setLoading(false)\r\n      })\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport const Loading: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', (p) => {\r\n    const list = ctx.get('list')\r\n\r\n    if (p.offset === 0)\r\n      // only show loading when fetch first page\r\n      Ui.setLoading(true, list.$el)\r\n    // else if not first page, show loading in paginator (code not there)\r\n  })\r\n\r\n  ctx.on('list-fetched', () => {\r\n    const list = ctx.get('list')\r\n    Ui.setLoading(false, list.$el)\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport const Unread: ArtalkPlugin = (ctx) => {\r\n  ctx.on('comment-rendered', (comment) => {\r\n    // comment unread highlight\r\n    if (ctx.conf.listUnreadHighlight === true) {\r\n      const notifies = ctx.getData().getNotifies()\r\n      const notify = notifies.find((o) => o.comment_id === comment.getID())\r\n\r\n      if (notify) {\r\n        // if comment contains in unread list\r\n        comment.getRender().setUnread(true)\r\n        comment.getRender().setOpenAction(() => {\r\n          window.open(notify.read_link)\r\n\r\n          // remove notify which has been read\r\n          ctx.getData().updateNotifies(notifies.filter((o) => o.comment_id !== comment.getID()))\r\n        })\r\n      } else {\r\n        // comment not in unread list\r\n        comment.getRender().setUnread(false)\r\n      }\r\n    }\r\n  })\r\n\r\n  ctx.on('list-goto', (commentID) => {\r\n    const notifyKey = Utils.getQueryParam('atk_notify_key')\r\n    if (notifyKey) {\r\n      // mark as read\r\n      ctx\r\n        .getApi()\r\n        .notifies.markNotifyRead(commentID, notifyKey)\r\n        .then(() => {\r\n          // remove from unread list\r\n          ctx.getData().updateNotifies(\r\n            ctx\r\n              .getData()\r\n              .getNotifies()\r\n              .filter((o) => o.comment_id !== commentID),\r\n          )\r\n        })\r\n    }\r\n  })\r\n}\r\n","import type { ContextApi, ArtalkPlugin, PageData } from '@/types'\r\nimport $t from '@/i18n'\r\n\r\nexport const WithEditor: ArtalkPlugin = (ctx) => {\r\n  let $closeCommentBtn: HTMLElement | undefined\r\n\r\n  // on Artalk mounted\r\n  // (after all components had mounted)\r\n  ctx.on('mounted', () => {\r\n    const list = ctx.get('list')\r\n\r\n    $closeCommentBtn = list.$el.querySelector<HTMLElement>('[data-action=\"admin-close-comment\"]')!\r\n\r\n    // bind editor close button click event\r\n    $closeCommentBtn.addEventListener('click', () => {\r\n      const page = ctx.getData().getPage()\r\n      if (!page) throw new Error('Page data not found')\r\n\r\n      page.admin_only = !page.admin_only\r\n      adminPageEditSave(ctx, page)\r\n    })\r\n  })\r\n\r\n  // on comment list loaded (it will include page data update)\r\n  ctx.on('page-loaded', (page) => {\r\n    const editor = ctx.get('editor')\r\n\r\n    // if page comment is closed\r\n    if (page?.admin_only === true) {\r\n      // then close editor\r\n      editor.getPlugs()?.getEvents().trigger('editor-close')\r\n      $closeCommentBtn && ($closeCommentBtn.innerText = $t('openComment'))\r\n    } else {\r\n      // the open editor\r\n      editor.getPlugs()?.getEvents().trigger('editor-open')\r\n      $closeCommentBtn && ($closeCommentBtn.innerText = $t('closeComment'))\r\n    }\r\n  })\r\n\r\n  ctx.on('list-loaded', (comments) => {\r\n    // 防止评论框被吞\r\n    ctx.editorResetState()\r\n  })\r\n}\r\n\r\n/** 管理员设置页面信息 */\r\nfunction adminPageEditSave(ctx: ContextApi, page: PageData) {\r\n  ctx.editorShowLoading()\r\n  ctx\r\n    .getApi()\r\n    .pages.updatePage(page.id, page)\r\n    .then(({ data }) => {\r\n      ctx.getData().updatePage(data)\r\n    })\r\n    .catch((err) => {\r\n      ctx.editorShowNotify(`${$t('editFail')}: ${err.message || String(err)}`, 'e')\r\n    })\r\n    .finally(() => {\r\n      ctx.editorHideLoading()\r\n    })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nexport const Count: ArtalkPlugin = (ctx) => {\r\n  const refreshCountNumEl = () => {\r\n    const list = ctx.get('list')\r\n\r\n    const $count = list.$el.querySelector('.atk-comment-count .atk-text')\r\n    if (!$count) return\r\n\r\n    const text = Utils.htmlEncode(\r\n      $t('counter', {\r\n        count: `${Number(ctx.getData().getListLastFetch()?.data?.count) || 0}`,\r\n      }),\r\n    )\r\n    $count.innerHTML = text.replace(/(\\d+)/, '<span class=\"atk-comment-count-num\">$1</span>')\r\n  }\r\n\r\n  ctx.on('list-loaded', () => {\r\n    refreshCountNumEl()\r\n  })\r\n\r\n  ctx.on('comment-inserted', () => {\r\n    // 评论数增加 1\r\n    const last = ctx.getData().getListLastFetch()\r\n    if (last?.data) last.data.count += 1\r\n  })\r\n\r\n  ctx.on('comment-deleted', () => {\r\n    // 评论数减 1\r\n    const last = ctx.getData().getListLastFetch()\r\n    if (last?.data) last.data.count -= 1\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const UnreadBadge: ArtalkPlugin = (ctx) => {\r\n  let $unreadBadge: HTMLElement | null = null\r\n\r\n  const showUnreadBadge = (count: number) => {\r\n    if (!$unreadBadge) return\r\n\r\n    if (count > 0) {\r\n      $unreadBadge.innerText = `${Number(count || 0)}`\r\n      $unreadBadge.style.display = 'block'\r\n    } else {\r\n      $unreadBadge.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  ctx.on('mounted', () => {\r\n    const list = ctx.get('list')\r\n\r\n    $unreadBadge = list.$el.querySelector<HTMLElement>('.atk-unread-badge')\r\n  })\r\n\r\n  ctx.on('notifies-updated', (notifies) => {\r\n    showUnreadBadge(notifies.length || 0)\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nexport const Dropdown: ArtalkPlugin = (ctx) => {\r\n  const reloadUseParamsEditor = (func: (p: any) => void) => {\r\n    ctx.conf.listFetchParamsModifier = func\r\n    ctx.reload()\r\n  }\r\n\r\n  const initDropdown = ($dropdownOn: HTMLElement) => {\r\n    renderDropdown({\r\n      $dropdownWrap: $dropdownOn,\r\n      dropdownList: [\r\n        [\r\n          $t('sortLatest'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.sort_by = 'date_desc'\r\n            })\r\n          },\r\n        ],\r\n        [\r\n          $t('sortBest'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.sort_by = 'vote'\r\n            })\r\n          },\r\n        ],\r\n        [\r\n          $t('sortOldest'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.sort_by = 'date_asc'\r\n            })\r\n          },\r\n        ],\r\n        [\r\n          $t('sortAuthor'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.view_only_admin = true\r\n            })\r\n          },\r\n        ],\r\n      ],\r\n    })\r\n  }\r\n\r\n  ctx.watchConf(['listSort', 'locale'], (conf) => {\r\n    const list = ctx.get('list')\r\n\r\n    const $count = list.$el.querySelector<HTMLElement>('.atk-comment-count')\r\n    if (!$count) return\r\n\r\n    // 评论列表排序 Dropdown 下拉选择层\r\n    if (conf.listSort) {\r\n      initDropdown($count)\r\n    } else {\r\n      removeDropdown({\r\n        $dropdownWrap: $count,\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n/** 评论排序方式选择下拉菜单 */\r\nfunction renderDropdown(conf: {\r\n  $dropdownWrap: HTMLElement\r\n  dropdownList: [string, () => void][]\r\n}) {\r\n  const { $dropdownWrap, dropdownList } = conf\r\n  if ($dropdownWrap.querySelector('.atk-dropdown')) return\r\n\r\n  // 修改 class\r\n  $dropdownWrap.classList.add('atk-dropdown-wrap')\r\n\r\n  // 插入图标\r\n  $dropdownWrap.append(Utils.createElement(`<span class=\"atk-arrow-down-icon\"></span>`))\r\n\r\n  // 列表项点击事件\r\n  let curtActive = 0 // 当前选中\r\n  const onItemClick = (i: number, $item: HTMLElement, name: string, action: () => void) => {\r\n    action()\r\n\r\n    // set active\r\n    curtActive = i\r\n    $dropdown.querySelectorAll('.active').forEach((e) => {\r\n      e.classList.remove('active')\r\n    })\r\n    $item.classList.add('active')\r\n\r\n    // 关闭层 (临时消失，取消 :hover)\r\n    $dropdown.style.display = 'none'\r\n    setTimeout(() => {\r\n      $dropdown.style.display = ''\r\n    }, 80)\r\n  }\r\n\r\n  // 生成列表元素\r\n  const $dropdown = Utils.createElement(`<ul class=\"atk-dropdown atk-fade-in\"></ul>`)\r\n  dropdownList.forEach((item, i) => {\r\n    const [name, action] = item\r\n\r\n    const $item = Utils.createElement(`<li class=\"atk-dropdown-item\"><span></span></li>`)\r\n    const $link = $item.querySelector<HTMLElement>('span')!\r\n    $link.innerText = name\r\n    $link.onclick = () => {\r\n      onItemClick(i, $item, name, action)\r\n    }\r\n    $dropdown.append($item)\r\n\r\n    if (i === curtActive) $item.classList.add('active') // 默认选中项\r\n  })\r\n\r\n  $dropdownWrap.append($dropdown)\r\n}\r\n\r\n/** 删除评论排序方式选择下拉菜单 */\r\nfunction removeDropdown(conf: { $dropdownWrap: HTMLElement }) {\r\n  const { $dropdownWrap } = conf\r\n  $dropdownWrap.classList.remove('atk-dropdown-wrap')\r\n  $dropdownWrap.querySelector('.atk-arrow-down-icon')?.remove()\r\n  $dropdownWrap.querySelector('.atk-dropdown')?.remove()\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport const GotoDispatcher: ArtalkPlugin = (ctx) => {\r\n  let lastID = 0\r\n  const check = ({ locker }: { locker: boolean }) => {\r\n    const commentID = extractCommentID()\r\n    if (!commentID) return\r\n\r\n    if (locker && lastID === commentID) return // if the commentID is the same as the last one, do nothing\r\n    lastID = commentID // record the last commentID\r\n\r\n    ctx.trigger('list-goto', commentID) // trigger event\r\n  }\r\n\r\n  const hashChangeHandler = () => check({ locker: false })\r\n  const listLoadedHandler = () => check({ locker: true })\r\n  ctx.on('mounted', () => {\r\n    window.addEventListener('hashchange', hashChangeHandler)\r\n    ctx.on('list-loaded', listLoadedHandler)\r\n  })\r\n  ctx.on('unmounted', () => {\r\n    window.removeEventListener('hashchange', hashChangeHandler)\r\n    ctx.off('list-loaded', listLoadedHandler)\r\n  })\r\n}\r\n\r\nfunction extractCommentID(): number | null {\r\n  // Try get from hash\r\n  // Hash retrieval priority is higher than query,\r\n  // Because click goto will change hash.\r\n  const match = window.location.hash.match(/#atk-comment-([0-9]+)/)\r\n  let commentId =\r\n    match && match[1] && !Number.isNaN(parseFloat(match[1])) ? parseFloat(match[1]) : null\r\n\r\n  // Fail over to get from query\r\n  if (!commentId) {\r\n    commentId = Number(Utils.getQueryParam('atk_comment')) // same as backend GetReplyLink()\r\n  }\r\n\r\n  return commentId || null\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport { sanitize } from '@/lib/sanitizer'\r\n\r\nexport const NoComment: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-loaded', (comments) => {\r\n    const list = ctx.get('list')!\r\n\r\n    // 无评论\r\n    const isNoComment = comments.length <= 0\r\n    let $noComment = list.getCommentsWrapEl().querySelector<HTMLElement>('.atk-list-no-comment')\r\n\r\n    if (isNoComment) {\r\n      if (!$noComment) {\r\n        $noComment = Utils.createElement('<div class=\"atk-list-no-comment\"></div>')\r\n\r\n        // sanitize before set innerHTML\r\n        $noComment.innerHTML = sanitize(list.ctx.conf.noComment || list.ctx.$t('noComment'))\r\n        list.getCommentsWrapEl().appendChild($noComment)\r\n      }\r\n    } else {\r\n      $noComment?.remove()\r\n    }\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport { version as ARTALK_VERSION } from '~/package.json'\r\n\r\nexport const Copyright: ArtalkPlugin = (ctx) => {\r\n  ctx.on('mounted', () => {\r\n    const list = ctx.get('list')\r\n\r\n    const $copyright = list.$el.querySelector<HTMLElement>('.atk-copyright')\r\n    if (!$copyright) return\r\n\r\n    $copyright.innerHTML =\r\n      `Powered By <a href=\"https://artalk.js.org\" ` +\r\n      `target=\"_blank\" title=\"Artalk v${ARTALK_VERSION}\">` +\r\n      `Artalk</a>`\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\n/** 评论时间自动更新 */\r\nexport const TimeTicking: ArtalkPlugin = (ctx) => {\r\n  let timer: number | null = null\r\n\r\n  ctx.on('mounted', () => {\r\n    timer = window.setInterval(() => {\r\n      const list = ctx.get('list')\r\n\r\n      list.$el.querySelectorAll<HTMLElement>('[data-atk-comment-date]').forEach((el) => {\r\n        const date = el.getAttribute('data-atk-comment-date')\r\n        el.innerText = Utils.timeAgo(new Date(Number(date)), ctx.$t)\r\n      })\r\n    }, 30 * 1000) // 30s 更新一次\r\n  })\r\n\r\n  ctx.on('unmounted', () => {\r\n    timer && window.clearInterval(timer)\r\n  })\r\n}\r\n","import * as Ui from '../../lib/ui'\r\nimport type { ArtalkPlugin, ContextApi } from '@/types'\r\nimport { showErrorDialog } from '@/components/error-dialog'\r\n\r\nexport const ErrorDialog: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', () => {\r\n    const list = ctx.get('list')\r\n\r\n    // clear the original error when a new fetch is triggered\r\n    Ui.setError(list.$el, null)\r\n  })\r\n\r\n  ctx.on('list-failed', (err) => {\r\n    showErrorDialog({\r\n      $err: ctx.get('list').$el,\r\n      errMsg: err.msg,\r\n      errData: err.data,\r\n      retryFn: () => ctx.fetch({ offset: 0 }),\r\n    })\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const ReachBottom: ArtalkPlugin = (ctx) => {\r\n  let observer: IntersectionObserver | null = null\r\n\r\n  const setupObserver = ($target: HTMLElement) => {\r\n    const scrollEvtAt = (ctx.conf.scrollRelativeTo && ctx.conf.scrollRelativeTo()) || null\r\n\r\n    observer = new IntersectionObserver(\r\n      ([entries]) => {\r\n        if (entries.isIntersecting) {\r\n          clearObserver() // clear before trigger event to avoid trigger twice `list-reach-bottom`\r\n\r\n          // note that this event will be triggered only once\r\n          // until the next list is loaded\r\n          ctx.trigger('list-reach-bottom')\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.9, // when the target is 90% visible\r\n\r\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\r\n        // If the root is null, then the bounds of the actual document viewport are used.\r\n        root: scrollEvtAt,\r\n      },\r\n    )\r\n    observer.observe($target)\r\n  }\r\n\r\n  const clearObserver = () => {\r\n    observer?.disconnect()\r\n    observer = null\r\n  }\r\n\r\n  ctx.on('list-loaded', () => {\r\n    clearObserver()\r\n\r\n    const list = ctx.get('list')\r\n\r\n    // get the second last child\r\n    const children = list.getCommentsWrapEl().childNodes\r\n    const $target = children.length > 2 ? (children[children.length - 2] as HTMLElement) : null\r\n    if (!$target) return\r\n\r\n    // check IntersectionObserver support\r\n    if (!('IntersectionObserver' in window)) {\r\n      console.warn('IntersectionObserver api not supported')\r\n      return\r\n    }\r\n\r\n    // use IntersectionObserver to detect reach bottom\r\n    setupObserver($target)\r\n  })\r\n\r\n  ctx.on('unmounted', () => {\r\n    clearObserver()\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\n/** List scroll to the first comment */\r\nexport const GotoFirst: ArtalkPlugin = (ctx) => {\r\n  const handler = () => {\r\n    const list = ctx.get('list')\r\n\r\n    const $relative = ctx.conf.scrollRelativeTo && ctx.conf.scrollRelativeTo()\r\n    ;($relative || window).scroll({\r\n      top: Utils.getOffset(list.$el, $relative).top,\r\n      left: 0,\r\n    })\r\n  }\r\n\r\n  ctx.on('mounted', () => {\r\n    ctx.on('list-goto-first', handler)\r\n  })\r\n\r\n  ctx.on('unmounted', () => {\r\n    ctx.off('list-goto-first', handler)\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const Notifies: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', (params) => {\r\n    if (params.offset !== 0) return\r\n\r\n    const user = ctx.getApi().getUserFields()\r\n    if (!user) return\r\n\r\n    // Fetch all unread notifies\r\n    ctx\r\n      .getApi()\r\n      .notifies.getNotifies(user)\r\n      .then((res) => {\r\n        ctx.getData().updateNotifies(res.data.notifies)\r\n      })\r\n  })\r\n}\r\n","import { DefaultPlugins } from './plugins'\r\nimport type { ArtalkConfig, ArtalkPlugin, ContextApi } from '@/types'\r\nimport { handleConfFormServer } from '@/config'\r\nimport { showErrorDialog } from '@/components/error-dialog'\r\n\r\n/**\r\n * Global Plugins for all Artalk instances\r\n */\r\nexport const GlobalPlugins: Set<ArtalkPlugin> = new Set([...DefaultPlugins])\r\n\r\n/**\r\n * Plugin options for plugin initialization\r\n */\r\nexport const PluginOptions: WeakMap<ArtalkPlugin, any> = new WeakMap()\r\n\r\nexport async function load(ctx: ContextApi) {\r\n  const loadedPlugins = new Set<ArtalkPlugin>()\r\n  const loadPlugins = (plugins: Set<ArtalkPlugin>) => {\r\n    plugins.forEach((plugin) => {\r\n      if (typeof plugin === 'function' && !loadedPlugins.has(plugin)) {\r\n        plugin(ctx, PluginOptions.get(plugin))\r\n        loadedPlugins.add(plugin)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Load local plugins\r\n  loadPlugins(GlobalPlugins)\r\n\r\n  // Get conf from server\r\n  const { data } = await ctx\r\n    .getApi()\r\n    .conf.conf()\r\n    .catch((err) => {\r\n      onLoadErr(ctx, err)\r\n      throw err\r\n    })\r\n\r\n  // Initial config\r\n  let conf: Partial<ArtalkConfig> = {\r\n    apiVersion: data.version?.version, // version info\r\n  }\r\n\r\n  // Reference conf from backend\r\n  if (ctx.conf.useBackendConf) {\r\n    if (!data.frontend_conf)\r\n      throw new Error(\r\n        'The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled',\r\n      )\r\n    conf = { ...conf, ...handleConfFormServer(data.frontend_conf) }\r\n  }\r\n\r\n  // Apply conf modifier\r\n  ctx.conf.remoteConfModifier && ctx.conf.remoteConfModifier(conf)\r\n\r\n  // Dynamically load network plugins\r\n  conf.pluginURLs &&\r\n    (await loadNetworkPlugins(conf.pluginURLs, ctx.conf.server)\r\n      .then((plugins) => {\r\n        loadPlugins(plugins)\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to load plugin', err)\r\n      }))\r\n\r\n  // After all plugins are loaded\r\n  ctx.trigger('created')\r\n\r\n  // Apply conf updating\r\n  ctx.updateConf(conf)\r\n\r\n  // Trigger mounted event\r\n  ctx.trigger('mounted')\r\n\r\n  // Load comment list\r\n  if (!ctx.conf.remoteConfModifier) {\r\n    // only auto fetch when no remoteConfModifier\r\n    ctx.fetch({ offset: 0 })\r\n  }\r\n}\r\n\r\n/**\r\n * Dynamically load plugins from Network\r\n */\r\nasync function loadNetworkPlugins(scripts: string[], apiBase: string): Promise<Set<ArtalkPlugin>> {\r\n  const networkPlugins = new Set<ArtalkPlugin>()\r\n  if (!scripts || !Array.isArray(scripts)) return networkPlugins\r\n\r\n  const tasks: Promise<void>[] = []\r\n\r\n  scripts.forEach((url) => {\r\n    // check url valid\r\n    if (!/^(http|https):\\/\\//.test(url))\r\n      url = `${apiBase.replace(/\\/$/, '')}/${url.replace(/^\\//, '')}`\r\n\r\n    tasks.push(\r\n      new Promise<void>((resolve, reject) => {\r\n        // check if loaded\r\n        if (document.querySelector(`script[src=\"${url}\"]`)) {\r\n          resolve()\r\n          return\r\n        }\r\n\r\n        // load script\r\n        const script = document.createElement('script')\r\n        script.src = url\r\n        document.head.appendChild(script)\r\n        script.onload = () => resolve()\r\n        script.onerror = (err) => reject(err)\r\n      }),\r\n    )\r\n  })\r\n\r\n  await Promise.all(tasks)\r\n\r\n  // Read ArtalkPlugins object from window\r\n  Object.values(window.ArtalkPlugins || {}).forEach((plugin) => {\r\n    if (typeof plugin === 'function') networkPlugins.add(plugin)\r\n  })\r\n\r\n  return networkPlugins\r\n}\r\n\r\nexport function onLoadErr(ctx: ContextApi, err: any) {\r\n  let sidebarOpenView = ''\r\n\r\n  // if response err_no_site, modify the sidebar open view to create site\r\n  if (err.data?.err_no_site) {\r\n    const viewLoadParam = {\r\n      create_name: ctx.conf.site,\r\n      create_urls: `${window.location.protocol}//${window.location.host}`,\r\n    }\r\n    sidebarOpenView = `sites|${JSON.stringify(viewLoadParam)}`\r\n  }\r\n\r\n  showErrorDialog({\r\n    $err: ctx.get('list').$el,\r\n    errMsg: err.msg || String(err),\r\n    errData: err.data,\r\n    retryFn: () => load(ctx),\r\n    onOpenSidebar: ctx.get('user').getData().isAdmin\r\n      ? () =>\r\n          ctx.showSidebar({\r\n            view: sidebarOpenView as any,\r\n          })\r\n      : undefined, // only show open sidebar button when user is admin\r\n  })\r\n}\r\n","import './style/main.scss'\r\n\r\nimport type { EventHandler } from './lib/event-manager'\r\nimport Context from './context'\r\nimport { handelCustomConf, convertApiOptions } from './config'\r\nimport Services from './service'\r\nimport * as Stat from './plugins/stat'\r\nimport { Api } from './api'\r\nimport type { TInjectedServices } from './service'\r\nimport { GlobalPlugins, PluginOptions, load } from './load'\r\nimport type { ArtalkConfig, EventPayloadMap, ArtalkPlugin, ContextApi } from '@/types'\r\n\r\n/**\r\n * Artalk\r\n *\r\n * @see https://artalk.js.org\r\n */\r\nexport default class Artalk {\r\n  public ctx!: ContextApi\r\n\r\n  constructor(conf: Partial<ArtalkConfig>) {\r\n    // Init Config\r\n    const handledConf = handelCustomConf(conf, true)\r\n\r\n    // Init Context\r\n    this.ctx = new Context(handledConf)\r\n\r\n    // Init Services\r\n    Object.entries(Services).forEach(([name, initService]) => {\r\n      const obj = initService(this.ctx)\r\n      obj && this.ctx.inject(name as keyof TInjectedServices, obj) // auto inject deps to ctx\r\n    })\r\n\r\n    if (import.meta.env.DEV && import.meta.env.VITEST) {\r\n      global.devLoadArtalk = () => load(this.ctx)\r\n    } else {\r\n      load(this.ctx)\r\n    }\r\n  }\r\n\r\n  /** Get the config of Artalk */\r\n  public getConf() {\r\n    return this.ctx.getConf()\r\n  }\r\n\r\n  /** Get the root element of Artalk */\r\n  public getEl() {\r\n    return this.ctx.$root\r\n  }\r\n\r\n  /** Update config of Artalk */\r\n  public update(conf: Partial<ArtalkConfig>) {\r\n    this.ctx.updateConf(conf)\r\n    return this\r\n  }\r\n\r\n  /** Reload comment list of Artalk */\r\n  public reload() {\r\n    this.ctx.reload()\r\n  }\r\n\r\n  /** Destroy instance of Artalk */\r\n  public destroy() {\r\n    this.ctx.trigger('unmounted')\r\n    while (this.ctx.$root.firstChild) {\r\n      this.ctx.$root.removeChild(this.ctx.$root.firstChild)\r\n    }\r\n  }\r\n\r\n  /** Add an event listener */\r\n  public on<K extends keyof EventPayloadMap>(name: K, handler: EventHandler<EventPayloadMap[K]>) {\r\n    this.ctx.on(name, handler)\r\n  }\r\n\r\n  /** Remove an event listener */\r\n  public off<K extends keyof EventPayloadMap>(name: K, handler: EventHandler<EventPayloadMap[K]>) {\r\n    this.ctx.off(name, handler)\r\n  }\r\n\r\n  /** Trigger an event */\r\n  public trigger<K extends keyof EventPayloadMap>(name: K, payload?: EventPayloadMap[K]) {\r\n    this.ctx.trigger(name, payload)\r\n  }\r\n\r\n  /** Set dark mode */\r\n  public setDarkMode(darkMode: boolean) {\r\n    this.ctx.setDarkMode(darkMode)\r\n  }\r\n\r\n  // ===========================\r\n  //       Static Members\r\n  // ===========================\r\n\r\n  /** Init Artalk */\r\n  public static init(conf: Partial<ArtalkConfig>): Artalk {\r\n    return new Artalk(conf)\r\n  }\r\n\r\n  /** Use plugin, the plugin will be used when Artalk.init */\r\n  public static use<T = any>(plugin: ArtalkPlugin<T>, options?: T) {\r\n    GlobalPlugins.add(plugin)\r\n    PluginOptions.set(plugin, options)\r\n  }\r\n\r\n  /** Load count widget */\r\n  public static loadCountWidget(c: Partial<ArtalkConfig>) {\r\n    const conf = handelCustomConf(c, true)\r\n\r\n    Stat.initCountWidget({\r\n      getApi: () => new Api(convertApiOptions(conf)),\r\n      siteName: conf.site,\r\n      countEl: conf.countEl,\r\n      pvEl: conf.pvEl,\r\n      pageKeyAttr: conf.statPageKeyAttr,\r\n      pvAdd: false,\r\n    })\r\n  }\r\n\r\n  // ===========================\r\n  //         Deprecated\r\n  // ===========================\r\n\r\n  /** @deprecated Please use `getEl()` instead */\r\n  public get $root() {\r\n    return this.ctx.$root\r\n  }\r\n\r\n  /** @description Please use `getConf()` instead */\r\n  public get conf() {\r\n    return this.ctx.getConf()\r\n  }\r\n}\r\n","import Artalk from './artalk'\r\nimport type * as ArtalkType from './types'\r\n\r\nexport type * from './types'\r\nexport { ArtalkType }\r\n\r\nexport default Artalk\r\n\r\n// Expose the static methods from the Artalk class\r\n// because direct export of static methods is not supported\r\n// for adapting to different environments like CommonJS and browser IIFE\r\n// for example, we can use `Artalk.init()` rather than `Artalk.default.init()`\r\n// therefore, we need to manually expose the static methods in the Artalk class.\r\nexport const init = Artalk.init\r\nexport const use = Artalk.use\r\nexport const loadCountWidget = Artalk.loadCountWidget\r\n"],"names":["HttpClient","constructor","apiConfig","__publicField","this","Map","fetchParams","fetch","credentials","headers","redirect","referrerPolicy","data","securityData","input","JSON","stringify","Object","keys","reduce","formData","key","property","append","Blob","FormData","toQueryString","cancelToken","abortControllers","has","abortController","get","signal","AbortController","set","abort","delete","_a","__async","_b","body","secure","path","type","query","format","baseUrl","params","__objRest","secureParams","baseApiParams","securityWorker","requestParams","mergeRequestParams","queryString","payloadFormatter","contentFormatters","responseFormat","customFetch","__spreadProps","__spreadValues","createAbortSignal","then","response","r","error","ok","catch","e","assign","encodeQueryParam","value","encodeURIComponent","addQueryParam","addArrayQueryParam","map","v","join","rawQuery","filter","Array","isArray","addQueryParams","params1","params2","super","arguments","loginByEmail","request","method","registerByEmail","sendVerifyEmail","checkDataMerge","applyDataMerge","flushCache","warmUpCache","getCaptcha","getCaptchaStatus","verifyCaptcha","getComments","createComment","comment","getComment","id","updateComment","deleteComment","conf","getSocialLoginProviders","getDomain","getNotifies","markAllNotifyRead","options","markNotifyRead","commentId","notifyKey","getPages","fetchAllPages","getPageFetchStatus","logPv","page","updatePage","deletePage","fetchPage","sendEmail","email","getSettings","applySettings","settings","getSettingsTemplate","locale","getSites","createSite","site","updateSite","deleteSite","getStats","exportArtrans","importArtrans","uploadArtrans","upload","getUser","login","user","getUserStatus","createUser","updateUser","deleteUser","getUsers","getVersion","syncVotes","vote","targetId","Fetch","opts","init","exports","apiToken","getApiToken","Headers","Authorization","resp","json","retry","handlers","promise","item","action","handler","Promise","resolve","code","err","FetchException","message","msg","console","createError","status","Error","Api","ApiV2","baseURL","_opts","getUserFields","userInfo","name","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","html","encode","test","replace","unescapeTest","caret","edit","regex","opt","obj","val","valSource","getRegex","cleanUrl","href","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","i","trim","shift","length","pop","splice","push","rtrim","c","invert","l","suffLen","currChar","charAt","slice","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","tokens","inlineTokens","_Tokenizer","space","src","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","indentCodeCompensation","lang","inline","anyPunctuation","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","bull","isordered","ordered","start","loose","items","itemRegex","itemContents","endsWithBlankLine","endEarly","substring","line","t","repeat","nextLine","indent","trimStart","search","blankLine","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","ischecked","istask","task","checked","trimEnd","spacers","hasMultipleLineBreaks","some","pre","def","tag","toLowerCase","table","aligns","rows","header","align","row","cell","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","indexOf","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","emStrongLDelim","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","emStrongRDelimAst","emStrongRDelimUnd","lastIndex","lastCharLength","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","bullet","_paragraph","_blockLabel","_tag","_comment","blockNormal","gfmTable","blockGfm","blockPedantic","_punctuation","_inlineComment","_inlineLabel","inlineNormal","blockSkip","reflinkSearch","inlinePedantic","inlineGfm","inlineBreaks","normal","_Lexer","create","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","_","leading","tabs","extTokenizer","call","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","keepPrevChar","includes","lastIndexOf","startInline","_Renderer","infostring","quote","listitem","checkbox","tablerow","content","tablecell","flags","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","parse","parser","parseInline","renderers","genericToken","ret","headingToken","n","String","fromCharCode","parseInt","codeToken","tableToken","j","k","blockquoteToken","listToken","itemBody","unshift","htmlToken","paragraphToken","textToken","escapeToken","tagToken","linkToken","imageToken","strongToken","emToken","codespanToken","delToken","_Hooks","preprocess","markdown","postprocess","processAllTokens","Set","_parseMarkdown","WeakSet","parseMarkdown_fn","origOpt","defaults","warn","throwError","__privateMethod","_onError","onError_fn","prototype","toString","all","reject","markedInstance","args","__privateAdd","setOptions","use","callback","values","concat","childTokens","flat","pack","ext","prevRenderer","apply","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","arg","packWalktokens","marked","getDefaults","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","escapes","unescapes","rescaped","runescaped","escapeHtmlChar","unescapeHtmlChar","escapeHtml","unescapeHtml","she","decode","unescape","version","assignment_1","assignment","result","stack","hasOwnProperty","lowercase","string","asKey","accumulator","toMap_1","attributes","uris","require$$0","elements","voids","he","require$$1","require$$3","rstart","rend","rattrs","rtag","rtagend","require$$2","chars","lastItem","createStack","last","parsePart","substr","parseEdge","parseEndTag","parseStartTag","same","tagName","rest","unary","attrs","low","u","doubleQuotedValue","singleQuotedValue","unquotedValue","pos","end","sanitizer","buffer","context","o","ignoring","ignore","allowedTags","classesOk","allowedClasses","attrsOk","allowedAttributes","lkey","className","colon","questionmark","hash","allowedSchemes","matches","scheme","testUrl","unignore","transformText","reset","a","iframe","img","insane","strict","configuration","insaneOptions","span","reg","class","style","sanitize","createCommonjsModule","fn","module","index$1","defaultColors","toComment","cm","ref","colors","cache","re","m","word","color","factory","renderCode","hanabi","getRenderer","markedLinkRenderer","markedCodeRenderer","markedImageRenderer","orgLinkRenderer","isSameOriginLink","URL","origin","getLinkOrigin","window","location","realLang","colorized","hljs","getLanguage","highlight","orgImageRenderer","imgLazyLoad","instance","replacers","markedOptions","getInstance","markedContent","alt","imgSrc","simpleMarked","dest","replacer","mergeDeep","objects","isObject","prev","pVal","oVal","DataManager","events","getLoading","loading","setLoading","getListLastFetch","listLastFetch","setListLastFetch","comments","fetchComments","trigger","findComment","find","clearComments","loadComments","partialComments","insertComment","notifies","updateNotifies","getPage","pageData","createElement","htmlStr","div","document","innerHTML","firstElementChild","htmlEncode","temp","innerText","getQueryParam","decodeURIComponent","getOffset","el","relativeTo","getOffsetRecursive","element","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","left","elOffset","relativeToOffset","padWithZeros","vNumber","width","numAsString","timeAgo","date","$t","oldTime","getTime","diffValue","Date","days","floor","leave1","hours","leave2","minutes","leave3","seconds","round","vDay","getDate","vMonth","getMonth","getFullYear","dateFormat","getCorrectUserAgent","uaRaw","navigator","userAgent","userAgentData","getHighEntropyValues","uaData","uaGot","majorPlatformVersion","Number","platformVersion","platform","getURLBasedOnApi","base","en","placeholder","noComment","send","signIn","signUp","save","nick","emoticon","preview","uploadImage","uploadFail","commentFail","restoredMsg","onlyAdminCanReply","uploadLoginMsg","counter","sortLatest","sortOldest","sortBest","sortAuthor","openComment","closeComment","listLoadFailMsg","listRetry","loadMore","admin","reply","voteUp","voteDown","voteFail","readMore","actionConfirm","collapse","collapsed","collapsedMsg","expand","approved","pending","pendingMsg","editCancel","deleteConfirm","pin","unpin","now","adminCheck","captchaCheck","confirm","cancel","msgCenter","ctrlCenter","noAccountPrompt","haveAccountPrompt","forgetPassword","resetPassword","verificationCode","verifySend","verifyResend","waitSeconds","emailVerified","password","username","nextStep","skipNotVerify","logoutConfirm","accountMergeNotice","accountMergeSelectOne","accountMergeConfirm","dismiss","merge","frontend","backend","loadFail","editing","editFail","deleting","deleteFail","reqGot","reqAborted","updateMsg","currentVersion","open","openName","GLOBAL_LOCALES_KEY","internal","findLocaleSet","p1","p2","toUpperCase","LocaleConf","LocaleDict","setLocale","Utils.htmlEncode","EventManager","on","off","evt","payload","once","pageKey","pageTitle","server","sendBtn","darkMode","editorTravel","flatMode","nestMax","nestSort","emoticons","uaBadge","listSort","countEl","pvEl","statPageKeyAttr","gravatar","mirror","pagination","pageSize","autoLoad","heightLimit","children","scrollable","imgUpload","reqTimeout","versionCheck","useBackendConf","handelCustomConf","customConf","full","Defaults","findEl","querySelector","pathname","language","matchMedia","convertApiOptions","ctx","siteName","timeout","getData","checkHasBasicUserInfo","getApiHandlers","watchConf","effect","lastVal","newVal","getConf","res","Context","getCommentNodes","$root","classList","add","mounted","inject","depName","getApi","apiHandlers","h","createApiHandlers","checkCaptcha","checkAdmin","createNewApiHandlers","replyComment","commentData","$comment","editor","setReply","editComment","setEditComment","reload","listGotoFirst","editorShowLoading","showLoading","editorHideLoading","hideLoading","editorShowNotify","showNotify","editorResetState","resetState","showSidebar","sidebarLayer","show","hideSidebar","hide","checkerLauncher","I18n.t","setDarkMode","updateConf","nConf","getEl","getMarked","marked.getInstance","parentElem","$loading","Utils.createElement","transparentBg","background","appendChild","display","$spinner","setTimeout","isConnected","scrollIntoView","elem","enableAnim","containerRect","clientHeight","scrollY","innerHeight","height","scrollOptions","behavior","scroll","playFadeInAnim","after","onAnimEnded","remove","removeEventListener","addEventListener","playFadeAnim","setError","errorTextEl","HTMLElement","iframeBody","checker","$iframeWrap","$iframe","Ui.showLoading","getOpts","getCaptchaIframeURL","onload","Ui.hideLoading","$closeBtn","hideInteractInput","stop","queryStatus","ms","isPass","captcha","is_pass","triggerSuccess","onclick","CaptchaChecker","inputVal","render.iframeBody","imgEl","setAttribute","img_data","render.imgBody","onSuccess","formEl","onError","click","AdminChecker","inputType","update","isAdmin","onReload","Dialog","contentEl","$el","$actions","$content","setYes","btn","onBtnClick","setNo","currentTarget","wrapPromise","cancelFn","onCancel","successFn","CheckerLauncher","p","fire","postFire","layer","getCtx","close","destroy","checkerStore","checkerCtx","$input","btnTextOrg","focus","onkeyup","keyCode","preventDefault","dialog","btnEl","btnTextRestore","btnText","tf","onfocus","clearTimeout","onMount","Component","Sel","$header","$nick","$email","$link","$textareaWrap","$textarea","$bottom","$submitBtn","$notifyWrap","$bottomLeft","$stateWrap","$plugBtnWrap","$plugPanelWrap","EditorPlug","kit","useBtn","$btn","usePanel","$panel","useContentTransformer","func","contentTransformer","usePanelShow","useEvents","aPlug","usePanelHide","useEditorStateEffect","stateName","effectFn","editorStateEffectWhen","editorStateEffect","Mover","move","afterEl","isMoved","editorEl","useUI","$travelPlace","replaceWith","back","useGlobalCtx","EditorStateManager","stateCurt","stateUnmountFn","getPlugs","moveAfterEl","_d","_c","$relative","scrollRelativeTo","Ui.scrollIntoView","getUI","plugin","_e","Editor","ui","entries","sel","render","getState","getHeaderInputEls","getContentFinal","getContentRaw","plugs","getTransformedContent","getContentMarked","setContent","getEvents","insertContent","selection","createRange","selectionStart","sStart","sEnd","selectionEnd","sT","switch","submit","beforeSubmit","SidebarLayer","refreshOnShow","transform","initLayer","createIframe","view","iFrameSrc","getDarkMode","iframeLoad","authCheck","animTimer","is_admin","is_login","setOnAfterHide","Utils.getURLBasedOnApi","time","urlParams","URLSearchParams","createNestStrategy","import","srcData","sortBy","nodeList","rid","root","rootNode","parent","loadChildren","parentNode","child","childNode","sortFunc","vote_up","sortLevels","nodes","sort","ListNest.makeNestCommentNodeList","nestSortBy","rootC","createCommentNode","$commentsWrap","getRender","parentC","replyD","childD","childC","putChild","checkHeightLimit","insert","prepend","findCommentNode","getParents","heightLimitRemoveForChildren","insertMode","is_collapsed","is_allow_reply","visible","$listCommentsWrap","ListLayout","getStrategy","check","max","imgCheck","maxHeight","lock","_check","Utils.getHeight","parseFloat","getComputedStyle","contains","HEIGHT_LIMIT_SCROLL_CSS","applyScrollableHeightLimit","HEIGHT_LIMIT_CSS","overflow","$expandBtn","stopPropagation","disposeHeightLimit","afterExpandBtnClick","applyHeightLimit","imgs","querySelectorAll","from","renderNick","$headerNick","renderVerifyBadge","$headerBadgeWrap","badgeText","badge_name","badgeColor","badge_color","$badge","backgroundColor","is_verified","$verifiedBadge","is_pinned","$pinnedBadge","renderDate","$date","getDateFormatted","renderUABadge","ip_region","$uaWrap","$regionBadge","browser","os","getUserUA","$uaBrowser","$usOS","ActionBtn","getText","adminOnly","isMessaging","msgRecTimer","appendTo","dom","setClick","isLoading","confirmRestore","isConfirming","confirmText","confirmRecTimer","fireMsgRecTimer","clearMsgRecTimer","updateText","loadingText","setMsg","setWarn","setSuccess","duringTime","setMsgRecTimer","msgRecTimerFunc","renderVote","voteBtnUp","getActions","voteBtnDown","vote_down","renderReply","replyBtn","Renders","Avatar","$avatar","$avatarImg","avatarURLBuilder","getGravatarURL","Header","Content","collapsedInfoEl","$body","insertAdjacentElement","contentShowBtn","Ui.playFadeInAnim","ReplyAt","replyTo","$replyAt","goToReplyComment","firstChild","ReplyTo","$replyTo","replyContent","Pending","is_pending","pendingEl","Actions","Render","$main","$childrenWrap","contentMaxH","childrenMaxH","HeightLimit.check","getChildren","HeightLimit.disposeHeightLimit","playFadeAnimForBody","playFlashAnim","getChildrenWrap","setUnread","setOpenable","setOpenURL","setOpenAction","CommentActions","actionBtn","votes","up","down","adminEdit","btnElem","modify","setData","adminDelete","onDelete","origHash","modifyHash","dispatchEvent","Event","CommentNode","nestCurt","actionInstance","renderInstance","CommentUI","newEl","onAfterRender","getParent","getNestCurt","getIsRoot","getID","getChildrenWrapEl","$childComment","flattenParents","emailHash","email_encrypted","Utils.timeAgo","info","win","nav","osVersion","engine","device","engineMatch","Trident","Presto","WebKit","Gecko","browserMatch","Safari","Chrome","IE","Edge","Firefox","Chromium","Opera","Vivaldi","Yandex","Kindle","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","TheWorld","MIUI","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi","osMatch","Windows","Linux","macOS","Android","Ubuntu","FreeBSD","Debian","BlackBerry","MeeGo","Symbian","iOS","WebOS","deviceMatch","Mobile","Tablet","showModalDialog","chrome","arr","browserLanguage","UADetect","ua","ReadMoreBtn","origText","$text","hasMore","total","onClick","checkDisabled","showErr","ReadMorePaginator","readMoreAutoLoad","onReachedBottom","getHasMore","getIsClearComments","dispose","Pagination","oninput","onkeydown","keydown","$prevBtn","$nextBtn","maxPage","ceil","setInput","inputTimer","isNaN","change","onChange","which","UpDownPaginator","PaginationComponent","getPageDataByLastData","roots_count","initListPaginatorFunc","paginator","createPaginatorByConf","$paginator","List","initCrudEvents","getCommentsWrapEl","commentNodes","getListLayout","forceFlatMode","d","bodyOrgOverflow","bodyOrgPaddingRight","getScrollbarHelper","paddingRight","unlock","barPaddingRight","getPropertyValue","inner","outer","position","visibility","w1","offsetWidth","w2","clientWidth","removeChild","Ui.getScrollBarWidth","Layer","onAfterHide","setAllowMaskClose","allow","allowMaskClose","getAllowMaskClose","onShow","onHide","LayerWrap","$wrap","$mask","createItem","createItemElement","hideWrap","showWrap","getMask","getWrap","LayerManager","wrap","LOCAL_USER_KEY","User","localUser","localStorage","getItem","setItem","onUserChanged","logout","services","i18n","I18n.setLocale","layerManager","editorPlugs","initCountWidget","loadStatCount","containers","loadCommentCount","cacheData","pvAdd","pvCount","pages","page_key","page_title","site_name","pv","incrementPvCount","loadPvCount","els","selector","retrieveElements","pageKeys","pageKeyAttr","getAttribute","getPageKeys","stats","page_keys","defaultPageKey","updateElementsText","LocalStorageKey","SubmitAddPreset","reqAdd","useApi","getSubmitAddParams","useUser","useConf","useEditor","Utils.getCorrectUserAgent","postSubmitAdd","commentNew","Submit","defaultPreset","onEditorSubmit","do","useMounted","useUnmounted","registerCustom","customs","custom","activeCond","nComment","req","post","Emoticons","transEmoticonImageText","loadEmoticonsData","isImgLoaded","initEmoticonsList","changeListHeight","parentElement","isListLoaded","loadingTask","handleData","Ui.setError","pushGrp","grp","remoteLoad","grpData","isOwOFormat","convertOwO","solveNullKey","solveSameKey","tmp","container","owoData","grpName","nGrp","iconStr","icon","$grpWrap","$grp","$item","$grpSwitcher","openGrp","AllowImgExts","Upload","initDragImg","$imgUploadInput","accept","onchange","files","file","uploadImg","uploadFromFileList","onDragover","onDrop","dataTransfer","onPaste","clipboardData","fileExt","insertPrefix","uploadPlaceholderTxt","customUploaderFn","imgUploader","public_url","imgURL","urlRaw","protocol","Utils.isValidURL","Preview","isPlugPanelShow","updateContent","EDITOR_PLUGS","onContentUpdated","localContent","$inputs","inputEventFns","changeEventFns","field","timer","abortFn","onInput","fetchUserInfo","api","CANCEL_TOKEN","abortRequest","onUserInfoFetched","finally","onKeydown","adaptiveHeightByContent","diff","offsetHeight","scrollHeight","cancelReply","submitPlug","useDeps","page_url","$sendReplyBtn","cancelEdit","saveData","$editCancelBtn","updateSubmitBtnText","restoreSubmitBtnText","originalSubmitBtnText","onOpen","onClose","PlugKit","plug","PlugManager","confLoaded","clear","confRefs","getEnabledPlugs","Plug","loadPluginUI","closePlugPanel","openedPlug","loadPluginItem","openPlugPanel","plugPanel","rawContent","showErrorDialog","errEl","retryFn","$retryBtn","onOpenSidebar","$openSidebar","$err","IgnoreVersionCheck","darkModeMedia","updateClassnames","$els","DarkModeClassName","DefaultPlugins","libMarked","initMarked","markedReplacers","scanApply","$sidebarEl","getAdminOnlyEls","_params","limit","paramsModifier","listFetchParamsModifier","reqParams","flat_mode","listUnreadHighlight","notify","comment_id","read_link","commentID","Utils.getQueryParam","$closeCommentBtn","admin_only","adminPageEditSave","$count","$unreadBadge","reloadUseParamsEditor","initDropdown","$dropdownOn","$dropdownWrap","dropdownList","curtActive","onItemClick","$dropdown","renderDropdown","sort_by","view_only_admin","removeDropdown","lastID","locker","extractCommentID","hashChangeHandler","listLoadedHandler","reply_comment","isNoComment","$noComment","$copyright","ARTALK_VERSION","setInterval","clearInterval","errData","observer","clearObserver","disconnect","childNodes","$target","scrollEvtAt","IntersectionObserver","isIntersecting","threshold","observe","setupObserver","Utils.getOffset","apiVersion","feVer","beVer","comp","pa","pb","na","nb","Utils.versionCompare","ignoreBtn","darkModeAutoHandler","sync","GlobalPlugins","PluginOptions","WeakMap","load","loadedPlugins","loadPlugins","plugins","sidebarOpenView","err_no_site","viewLoadParam","create_name","create_urls","host","onLoadErr","frontend_conf","ExcludedKeys","startsWith","handleConfFormServer","remoteConfModifier","pluginURLs","scripts","apiBase","networkPlugins","tasks","script","head","onerror","ArtalkPlugins","loadNetworkPlugins","Artalk","handledConf","Services","initService","loadCountWidget"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,13,15]}