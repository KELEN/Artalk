{"version":3,"file":"ArtalkLite.js","sources":["../src/api/v2.ts","../src/api/fetch.ts","../src/api/index.ts","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/she.js","../../../node_modules/.pnpm/assignment@2.0.0/node_modules/assignment/assignment.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/lowercase.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/toMap.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/attributes.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/elements.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/parser.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/sanitizer.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/insane.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/defaults.js","../src/lib/sanitizer.ts","../../../node_modules/.pnpm/hanabi@0.4.0/node_modules/hanabi/dist/hanabi.js","../src/lib/highlight.ts","../src/lib/marked-renderer.ts","../src/lib/marked.ts","../src/lib/merge-deep.ts","../src/data.ts","../src/lib/utils.ts","../src/i18n/en.ts","../src/i18n/external.ts","../src/i18n/index.ts","../src/i18n/zh-CN.ts","../src/lib/event-manager.ts","../src/defaults.ts","../src/config.ts","../src/lib/watch-conf.ts","../src/context.ts","../src/api/handler.ts","../src/lib/ui.ts","../src/components/checker/captcha-renders.ts","../src/components/checker/captcha.ts","../src/components/checker/admin.ts","../src/components/dialog.ts","../src/components/checker/index.ts","../src/lib/component.ts","../src/editor/editor.html?raw","../src/editor/ui.ts","../src/plugins/editor/_plug.ts","../src/plugins/editor/mover.ts","../src/editor/state.ts","../src/editor/editor.ts","../src/layer/sidebar-layer.ts","../src/layer/sidebar-layer.html?raw","../src/list/layout/nest.ts","../src/list/nest.ts","../src/list/layout/flat.ts","../src/list/layout/index.ts","../src/comment/height-limit.ts","../src/comment/renders/header.ts","../src/components/action-btn.ts","../src/comment/renders/actions.ts","../src/comment/renders/index.ts","../src/comment/renders/avatar.ts","../src/comment/renders/content.ts","../src/comment/renders/reply-at.ts","../src/comment/renders/reply-to.ts","../src/comment/renders/pending.ts","../src/comment/render.ts","../src/comment/comment.html?raw","../src/comment/actions.ts","../src/comment/comment-node.ts","../src/lib/detect.ts","../src/components/read-more-btn.ts","../src/list/paginator/read-more.ts","../src/components/pagination.ts","../src/list/paginator/up-down.ts","../src/list/page.ts","../src/list/list.ts","../src/list/list.html?raw","../src/list/comment.ts","../src/layer/scrollbar-helper.ts","../src/layer/layer.ts","../src/layer/wrap.ts","../src/layer/layer-manager.ts","../src/lib/user.ts","../src/service.ts","../src/plugins/stat.ts","../src/plugins/markdown.ts","../src/plugins/editor/local-storage.ts","../src/plugins/editor/submit-add.ts","../src/plugins/editor/submit.ts","../src/plugins/editor/emoticons.ts","../src/plugins/editor/upload.ts","../src/plugins/editor/preview.ts","../src/plugins/editor/index.ts","../src/plugins/editor/header-event.ts","../src/plugins/editor/header-user.ts","../src/plugins/editor/textarea.ts","../src/plugins/editor/submit-btn.ts","../src/plugins/editor/state-reply.ts","../src/plugins/editor/state-edit.ts","../src/plugins/editor/closable.ts","../src/plugins/editor/_kit.ts","../src/plugins/editor-kit.ts","../src/plugins/list/goto-focus.ts","../src/components/error-dialog.ts","../src/plugins/version-check.ts","../src/plugins/dark-mode.ts","../src/plugins/index.ts","../src/plugins/admin-only-elem.ts","../src/plugins/list/index.ts","../src/plugins/list/fetch.ts","../src/plugins/list/loading.ts","../src/plugins/list/unread.ts","../src/plugins/list/with-editor.ts","../src/plugins/list/count.ts","../src/plugins/list/unread-badge.ts","../src/plugins/list/dropdown.ts","../src/plugins/list/goto-dispatcher.ts","../src/plugins/list/no-comment.ts","../src/plugins/list/copyright.ts","../src/plugins/list/time-ticking.ts","../src/plugins/list/error-dialog.ts","../src/plugins/list/reach-bottom.ts","../src/plugins/list/goto-first.ts","../src/plugins/notifies.ts","../src/load.ts","../src/artalk.ts","../src/main.ts"],"sourcesContent":["/* eslint-disable */\r\n/* tslint:disable */\r\n/*\r\n * ---------------------------------------------------------------\r\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\r\n * ##                                                           ##\r\n * ## AUTHOR: acacode                                           ##\r\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\r\n * ---------------------------------------------------------------\r\n */\r\n\r\nexport interface AuthAuthProviderInfo {\r\n  icon: string\r\n  label: string\r\n  name: string\r\n  path?: string\r\n}\r\n\r\nexport interface CommonApiVersionData {\r\n  app: string\r\n  commit_hash: string\r\n  version: string\r\n}\r\n\r\nexport interface CommonConfData {\r\n  frontend_conf: CommonMap\r\n  version: CommonApiVersionData\r\n}\r\n\r\nexport interface CommonJSONResult {\r\n  /** Data */\r\n  data: any\r\n  /** Message */\r\n  msg: string\r\n}\r\n\r\nexport type CommonMap = Record<string, any>\r\n\r\nexport interface EntityCookedComment {\r\n  badge_color: string\r\n  badge_name: string\r\n  content: string\r\n  content_marked: string\r\n  date: string\r\n  email_encrypted: string\r\n  id: number\r\n  ip_region: string\r\n  is_allow_reply: boolean\r\n  is_collapsed: boolean\r\n  is_pending: boolean\r\n  is_pinned: boolean\r\n  is_verified: boolean\r\n  link: string\r\n  nick: string\r\n  page_key: string\r\n  page_url: string\r\n  rid: number\r\n  site_name: string\r\n  ua: string\r\n  user_id: number\r\n  visible: boolean\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface EntityCookedNotify {\r\n  comment_id: number\r\n  id: number\r\n  is_emailed: boolean\r\n  is_read: boolean\r\n  read_link: string\r\n  user_id: number\r\n}\r\n\r\nexport interface EntityCookedPage {\r\n  admin_only: boolean\r\n  date: string\r\n  id: number\r\n  key: string\r\n  pv: number\r\n  site_name: string\r\n  title: string\r\n  url: string\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface EntityCookedSite {\r\n  first_url: string\r\n  id: number\r\n  name: string\r\n  urls: string[]\r\n  urls_raw: string\r\n}\r\n\r\nexport interface EntityCookedUser {\r\n  badge_color: string\r\n  badge_name: string\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface EntityCookedUserForAdmin {\r\n  badge_color: string\r\n  badge_name: string\r\n  comment_count: number\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  is_in_conf: boolean\r\n  last_ip: string\r\n  last_ua: string\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport type HandlerMap = Record<string, any>\r\n\r\nexport interface HandlerParamsCaptchaVerify {\r\n  /** The captcha value to check */\r\n  value: string\r\n}\r\n\r\nexport interface HandlerParamsCommentCreate {\r\n  /** The comment content */\r\n  content: string\r\n  /** The comment email */\r\n  email: string\r\n  /** The comment link */\r\n  link?: string\r\n  /** The comment name */\r\n  name: string\r\n  /** The comment page_key */\r\n  page_key: string\r\n  /** The comment page_title */\r\n  page_title?: string\r\n  /** The comment rid */\r\n  rid?: number\r\n  /** The site name of your content scope */\r\n  site_name: string\r\n  /** The comment ua */\r\n  ua?: string\r\n}\r\n\r\nexport interface HandlerParamsCommentUpdate {\r\n  /** The comment content */\r\n  content: string\r\n  /** The comment email */\r\n  email?: string\r\n  /** The comment ip */\r\n  ip?: string\r\n  /** The comment is_collapsed */\r\n  is_collapsed: boolean\r\n  /** The comment is_pending */\r\n  is_pending: boolean\r\n  /** The comment is_pinned */\r\n  is_pinned: boolean\r\n  /** The comment link */\r\n  link?: string\r\n  /** The comment nick */\r\n  nick?: string\r\n  /** The comment page_key */\r\n  page_key: string\r\n  /** The comment rid */\r\n  rid: number\r\n  /** The site name of your content scope */\r\n  site_name: string\r\n  /** The comment ua */\r\n  ua?: string\r\n}\r\n\r\nexport interface HandlerParamsEmailSend {\r\n  /** The body of email */\r\n  body: string\r\n  /** The subject of email */\r\n  subject: string\r\n  /** The email address of the receiver */\r\n  to_addr: string\r\n}\r\n\r\nexport interface HandlerParamsNotifyReadAll {\r\n  /** The user email */\r\n  email: string\r\n  /** The username */\r\n  name: string\r\n}\r\n\r\nexport interface HandlerParamsPageFetchAll {\r\n  /** If not empty, only fetch pages of this site */\r\n  site_name?: string\r\n}\r\n\r\nexport interface HandlerParamsPagePV {\r\n  /** The page key */\r\n  page_key: string\r\n  /** The page title */\r\n  page_title?: string\r\n  /** The site name of your content scope */\r\n  site_name?: string\r\n}\r\n\r\nexport interface HandlerParamsPageUpdate {\r\n  /** Updated page admin_only option */\r\n  admin_only: boolean\r\n  /** Updated page key */\r\n  key: string\r\n  /** The site name of your content scope */\r\n  site_name: string\r\n  /** Updated page title */\r\n  title: string\r\n}\r\n\r\nexport interface HandlerParamsSettingApply {\r\n  /** The content of the config file in YAML format */\r\n  yaml: string\r\n}\r\n\r\nexport interface HandlerParamsSiteCreate {\r\n  /** The site name */\r\n  name: string\r\n  /** The site urls */\r\n  urls: string[]\r\n}\r\n\r\nexport interface HandlerParamsSiteUpdate {\r\n  /** Updated site name */\r\n  name: string\r\n  /** Updated site urls */\r\n  urls: string[]\r\n}\r\n\r\nexport interface HandlerParamsTransferImport {\r\n  /** Automatically answer yes for all questions */\r\n  assumeyes?: boolean\r\n  /** The JSON data */\r\n  json_data?: string\r\n  /** The JSON file path */\r\n  json_file?: string\r\n  /** The target site name */\r\n  target_site_name?: string\r\n  /** The target site url */\r\n  target_site_url?: string\r\n  /** Keep domain */\r\n  url_keep_domain?: boolean\r\n  /** Enable URL resolver */\r\n  url_resolver?: boolean\r\n}\r\n\r\nexport interface HandlerParamsUserCreate {\r\n  /** The user badge color (hex format) */\r\n  badge_color?: string\r\n  /** The user badge name */\r\n  badge_name?: string\r\n  /** The user email */\r\n  email: string\r\n  /** The user is an admin */\r\n  is_admin: boolean\r\n  /** The user link */\r\n  link?: string\r\n  /** The user name */\r\n  name: string\r\n  /** The user password */\r\n  password?: string\r\n  /** The user receive email */\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerParamsUserLogin {\r\n  /** The user email */\r\n  email: string\r\n  /** The username */\r\n  name?: string\r\n  /** The user password */\r\n  password: string\r\n}\r\n\r\nexport interface HandlerParamsUserUpdate {\r\n  /** The user badge color (hex format) */\r\n  badge_color?: string\r\n  /** The user badge name */\r\n  badge_name?: string\r\n  /** The user email */\r\n  email: string\r\n  /** The user is an admin */\r\n  is_admin: boolean\r\n  /** The user link */\r\n  link?: string\r\n  /** The user name */\r\n  name: string\r\n  /** The user password */\r\n  password?: string\r\n  /** The user receive email */\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerParamsVote {\r\n  /** The user email */\r\n  email?: string\r\n  /** The username */\r\n  name?: string\r\n}\r\n\r\nexport interface HandlerRequestAuthDataMergeApply {\r\n  user_name: string\r\n}\r\n\r\nexport interface HandlerRequestAuthEmailLogin {\r\n  code?: string\r\n  email: string\r\n  password?: string\r\n}\r\n\r\nexport interface HandlerRequestAuthEmailRegister {\r\n  code: string\r\n  email: string\r\n  link?: string\r\n  name?: string\r\n  password: string\r\n}\r\n\r\nexport interface HandlerRequestAuthEmailSend {\r\n  email: string\r\n}\r\n\r\nexport interface HandlerResponseAdminUserList {\r\n  count: number\r\n  users: EntityCookedUserForAdmin[]\r\n}\r\n\r\nexport interface HandlerResponseAuthDataMergeApply {\r\n  deleted_user_count: number\r\n  update_comments_count: number\r\n  update_notifies_count: number\r\n  update_votes_count: number\r\n  /** Empty if login user is target user no need to re-login */\r\n  user_token: string\r\n}\r\n\r\nexport interface HandlerResponseAuthDataMergeCheck {\r\n  need_merge: boolean\r\n  user_names: string[]\r\n}\r\n\r\nexport interface HandlerResponseCaptchaGet {\r\n  img_data: string\r\n}\r\n\r\nexport interface HandlerResponseCaptchaStatus {\r\n  is_pass: boolean\r\n}\r\n\r\nexport interface HandlerResponseCommentCreate {\r\n  badge_color: string\r\n  badge_name: string\r\n  content: string\r\n  content_marked: string\r\n  date: string\r\n  email_encrypted: string\r\n  id: number\r\n  ip_region: string\r\n  is_allow_reply: boolean\r\n  is_collapsed: boolean\r\n  is_pending: boolean\r\n  is_pinned: boolean\r\n  is_verified: boolean\r\n  link: string\r\n  nick: string\r\n  page_key: string\r\n  page_url: string\r\n  rid: number\r\n  site_name: string\r\n  ua: string\r\n  user_id: number\r\n  visible: boolean\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponseCommentGet {\r\n  /** The comment detail */\r\n  comment: EntityCookedComment\r\n  /** The reply comment if exists (like reply) */\r\n  reply_comment: EntityCookedComment\r\n}\r\n\r\nexport interface HandlerResponseCommentList {\r\n  comments: EntityCookedComment[]\r\n  count: number\r\n  page: EntityCookedPage\r\n  roots_count: number\r\n}\r\n\r\nexport interface HandlerResponseCommentUpdate {\r\n  badge_color: string\r\n  badge_name: string\r\n  content: string\r\n  content_marked: string\r\n  date: string\r\n  email_encrypted: string\r\n  id: number\r\n  ip_region: string\r\n  is_allow_reply: boolean\r\n  is_collapsed: boolean\r\n  is_pending: boolean\r\n  is_pinned: boolean\r\n  is_verified: boolean\r\n  link: string\r\n  nick: string\r\n  page_key: string\r\n  page_url: string\r\n  rid: number\r\n  site_name: string\r\n  ua: string\r\n  user_id: number\r\n  visible: boolean\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponseConfAuthProviders {\r\n  anonymous: boolean\r\n  providers: AuthAuthProviderInfo[]\r\n}\r\n\r\nexport interface HandlerResponseConfDomain {\r\n  /** Is the domain trusted */\r\n  is_trusted: boolean\r\n  /** The origin of the domain */\r\n  origin: string\r\n}\r\n\r\nexport interface HandlerResponseNotifyList {\r\n  count: number\r\n  notifies: EntityCookedNotify[]\r\n}\r\n\r\nexport interface HandlerResponsePageFetch {\r\n  admin_only: boolean\r\n  date: string\r\n  id: number\r\n  key: string\r\n  pv: number\r\n  site_name: string\r\n  title: string\r\n  url: string\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponsePageFetchStatus {\r\n  /** The number of pages that have been fetched */\r\n  done: number\r\n  /** If the task is in progress */\r\n  is_progress: boolean\r\n  /** The message of the task status */\r\n  msg: string\r\n  /** The total number of pages */\r\n  total: number\r\n}\r\n\r\nexport interface HandlerResponsePageList {\r\n  count: number\r\n  pages: EntityCookedPage[]\r\n}\r\n\r\nexport interface HandlerResponsePagePV {\r\n  pv: number\r\n}\r\n\r\nexport interface HandlerResponsePageUpdate {\r\n  admin_only: boolean\r\n  date: string\r\n  id: number\r\n  key: string\r\n  pv: number\r\n  site_name: string\r\n  title: string\r\n  url: string\r\n  vote_down: number\r\n  vote_up: number\r\n}\r\n\r\nexport interface HandlerResponseSettingGet {\r\n  yaml: string\r\n}\r\n\r\nexport interface HandlerResponseSettingTemplate {\r\n  yaml: string\r\n}\r\n\r\nexport interface HandlerResponseSiteCreate {\r\n  first_url: string\r\n  id: number\r\n  name: string\r\n  urls: string[]\r\n  urls_raw: string\r\n}\r\n\r\nexport interface HandlerResponseSiteList {\r\n  count: number\r\n  sites: EntityCookedSite[]\r\n}\r\n\r\nexport interface HandlerResponseSiteUpdate {\r\n  first_url: string\r\n  id: number\r\n  name: string\r\n  urls: string[]\r\n  urls_raw: string\r\n}\r\n\r\nexport interface HandlerResponseTransferExport {\r\n  /** The exported data which is a JSON string */\r\n  artrans: string\r\n}\r\n\r\nexport interface HandlerResponseTransferUpload {\r\n  /** The uploaded file name which can be used to import */\r\n  filename: string\r\n}\r\n\r\nexport interface HandlerResponseUpload {\r\n  file_name: string\r\n  file_type: string\r\n  public_url: string\r\n}\r\n\r\nexport interface HandlerResponseUserCreate {\r\n  badge_color: string\r\n  badge_name: string\r\n  comment_count: number\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  is_in_conf: boolean\r\n  last_ip: string\r\n  last_ua: string\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerResponseUserInfo {\r\n  is_login: boolean\r\n  notifies: EntityCookedNotify[]\r\n  notifies_count: number\r\n  user: EntityCookedUser\r\n}\r\n\r\nexport interface HandlerResponseUserLogin {\r\n  token: string\r\n  user: EntityCookedUser\r\n}\r\n\r\nexport interface HandlerResponseUserStatus {\r\n  is_admin: boolean\r\n  is_login: boolean\r\n}\r\n\r\nexport interface HandlerResponseUserUpdate {\r\n  badge_color: string\r\n  badge_name: string\r\n  comment_count: number\r\n  email: string\r\n  id: number\r\n  is_admin: boolean\r\n  is_in_conf: boolean\r\n  last_ip: string\r\n  last_ua: string\r\n  link: string\r\n  name: string\r\n  receive_email: boolean\r\n}\r\n\r\nexport interface HandlerResponseVote {\r\n  down: number\r\n  up: number\r\n}\r\n\r\nexport type QueryParamsType = Record<string | number, any>\r\nexport type ResponseFormat = keyof Omit<Body, 'body' | 'bodyUsed'>\r\n\r\nexport interface FullRequestParams extends Omit<RequestInit, 'body'> {\r\n  /** set parameter to `true` for call `securityWorker` for this request */\r\n  secure?: boolean\r\n  /** request path */\r\n  path: string\r\n  /** content type of request body */\r\n  type?: ContentType\r\n  /** query params */\r\n  query?: QueryParamsType\r\n  /** format of response (i.e. response.json() -> format: \"json\") */\r\n  format?: ResponseFormat\r\n  /** request body */\r\n  body?: unknown\r\n  /** base url */\r\n  baseUrl?: string\r\n  /** request cancellation token */\r\n  cancelToken?: CancelToken\r\n}\r\n\r\nexport type RequestParams = Omit<FullRequestParams, 'body' | 'method' | 'query' | 'path'>\r\n\r\nexport interface ApiConfig<SecurityDataType = unknown> {\r\n  baseUrl?: string\r\n  baseApiParams?: Omit<RequestParams, 'baseUrl' | 'cancelToken' | 'signal'>\r\n  securityWorker?: (\r\n    securityData: SecurityDataType | null,\r\n  ) => Promise<RequestParams | void> | RequestParams | void\r\n  customFetch?: typeof fetch\r\n}\r\n\r\nexport interface HttpResponse<D extends unknown, E extends unknown = unknown> extends Response {\r\n  data: D\r\n  error: E\r\n}\r\n\r\ntype CancelToken = Symbol | string | number\r\n\r\nexport enum ContentType {\r\n  Json = 'application/json',\r\n  FormData = 'multipart/form-data',\r\n  UrlEncoded = 'application/x-www-form-urlencoded',\r\n  Text = 'text/plain',\r\n}\r\n\r\nexport class HttpClient<SecurityDataType = unknown> {\r\n  public baseUrl: string = '/api/v2'\r\n  private securityData: SecurityDataType | null = null\r\n  private securityWorker?: ApiConfig<SecurityDataType>['securityWorker']\r\n  private abortControllers = new Map<CancelToken, AbortController>()\r\n  private customFetch = (...fetchParams: Parameters<typeof fetch>) => fetch(...fetchParams)\r\n\r\n  private baseApiParams: RequestParams = {\r\n    credentials: 'same-origin',\r\n    headers: {},\r\n    redirect: 'follow',\r\n    referrerPolicy: 'no-referrer',\r\n  }\r\n\r\n  constructor(apiConfig: ApiConfig<SecurityDataType> = {}) {\r\n    Object.assign(this, apiConfig)\r\n  }\r\n\r\n  public setSecurityData = (data: SecurityDataType | null) => {\r\n    this.securityData = data\r\n  }\r\n\r\n  protected encodeQueryParam(key: string, value: any) {\r\n    const encodedKey = encodeURIComponent(key)\r\n    return `${encodedKey}=${encodeURIComponent(typeof value === 'number' ? value : `${value}`)}`\r\n  }\r\n\r\n  protected addQueryParam(query: QueryParamsType, key: string) {\r\n    return this.encodeQueryParam(key, query[key])\r\n  }\r\n\r\n  protected addArrayQueryParam(query: QueryParamsType, key: string) {\r\n    const value = query[key]\r\n    return value.map((v: any) => this.encodeQueryParam(key, v)).join('&')\r\n  }\r\n\r\n  protected toQueryString(rawQuery?: QueryParamsType): string {\r\n    const query = rawQuery || {}\r\n    const keys = Object.keys(query).filter((key) => 'undefined' !== typeof query[key])\r\n    return keys\r\n      .map((key) =>\r\n        Array.isArray(query[key])\r\n          ? this.addArrayQueryParam(query, key)\r\n          : this.addQueryParam(query, key),\r\n      )\r\n      .join('&')\r\n  }\r\n\r\n  protected addQueryParams(rawQuery?: QueryParamsType): string {\r\n    const queryString = this.toQueryString(rawQuery)\r\n    return queryString ? `?${queryString}` : ''\r\n  }\r\n\r\n  private contentFormatters: Record<ContentType, (input: any) => any> = {\r\n    [ContentType.Json]: (input: any) =>\r\n      input !== null && (typeof input === 'object' || typeof input === 'string')\r\n        ? JSON.stringify(input)\r\n        : input,\r\n    [ContentType.Text]: (input: any) =>\r\n      input !== null && typeof input !== 'string' ? JSON.stringify(input) : input,\r\n    [ContentType.FormData]: (input: any) =>\r\n      Object.keys(input || {}).reduce((formData, key) => {\r\n        const property = input[key]\r\n        formData.append(\r\n          key,\r\n          property instanceof Blob\r\n            ? property\r\n            : typeof property === 'object' && property !== null\r\n            ? JSON.stringify(property)\r\n            : `${property}`,\r\n        )\r\n        return formData\r\n      }, new FormData()),\r\n    [ContentType.UrlEncoded]: (input: any) => this.toQueryString(input),\r\n  }\r\n\r\n  protected mergeRequestParams(params1: RequestParams, params2?: RequestParams): RequestParams {\r\n    return {\r\n      ...this.baseApiParams,\r\n      ...params1,\r\n      ...(params2 || {}),\r\n      headers: {\r\n        ...(this.baseApiParams.headers || {}),\r\n        ...(params1.headers || {}),\r\n        ...((params2 && params2.headers) || {}),\r\n      },\r\n    }\r\n  }\r\n\r\n  protected createAbortSignal = (cancelToken: CancelToken): AbortSignal | undefined => {\r\n    if (this.abortControllers.has(cancelToken)) {\r\n      const abortController = this.abortControllers.get(cancelToken)\r\n      if (abortController) {\r\n        return abortController.signal\r\n      }\r\n      return void 0\r\n    }\r\n\r\n    const abortController = new AbortController()\r\n    this.abortControllers.set(cancelToken, abortController)\r\n    return abortController.signal\r\n  }\r\n\r\n  public abortRequest = (cancelToken: CancelToken) => {\r\n    const abortController = this.abortControllers.get(cancelToken)\r\n\r\n    if (abortController) {\r\n      abortController.abort()\r\n      this.abortControllers.delete(cancelToken)\r\n    }\r\n  }\r\n\r\n  public request = async <T = any, E = any>({\r\n    body,\r\n    secure,\r\n    path,\r\n    type,\r\n    query,\r\n    format,\r\n    baseUrl,\r\n    cancelToken,\r\n    ...params\r\n  }: FullRequestParams): Promise<HttpResponse<T, E>> => {\r\n    const secureParams =\r\n      ((typeof secure === 'boolean' ? secure : this.baseApiParams.secure) &&\r\n        this.securityWorker &&\r\n        (await this.securityWorker(this.securityData))) ||\r\n      {}\r\n    const requestParams = this.mergeRequestParams(params, secureParams)\r\n    const queryString = query && this.toQueryString(query)\r\n    const payloadFormatter = this.contentFormatters[type || ContentType.Json]\r\n    const responseFormat = format || requestParams.format\r\n\r\n    return this.customFetch(\r\n      `${baseUrl || this.baseUrl || ''}${path}${queryString ? `?${queryString}` : ''}`,\r\n      {\r\n        ...requestParams,\r\n        headers: {\r\n          ...(requestParams.headers || {}),\r\n          ...(type && type !== ContentType.FormData ? { 'Content-Type': type } : {}),\r\n        },\r\n        signal: (cancelToken ? this.createAbortSignal(cancelToken) : requestParams.signal) || null,\r\n        body: typeof body === 'undefined' || body === null ? null : payloadFormatter(body),\r\n      },\r\n    ).then(async (response) => {\r\n      const r = response as HttpResponse<T, E>\r\n      r.data = null as unknown as T\r\n      r.error = null as unknown as E\r\n\r\n      const data = !responseFormat\r\n        ? r\r\n        : await response[responseFormat]()\r\n            .then((data) => {\r\n              if (r.ok) {\r\n                r.data = data\r\n              } else {\r\n                r.error = data\r\n              }\r\n              return r\r\n            })\r\n            .catch((e) => {\r\n              r.error = e\r\n              return r\r\n            })\r\n\r\n      if (cancelToken) {\r\n        this.abortControllers.delete(cancelToken)\r\n      }\r\n\r\n      if (!response.ok) throw data\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * @title Artalk API\r\n * @version 2.0\r\n * @license MIT (https://github.com/ArtalkJS/Artalk/blob/master/LICENSE)\r\n * @baseUrl /api/v2\r\n * @contact API Support <artalkjs@gmail.com> (https://artalk.js.org)\r\n *\r\n * Artalk is a modern comment system based on Golang.\r\n */\r\nexport class Api<SecurityDataType extends unknown> extends HttpClient<SecurityDataType> {\r\n  auth = {\r\n    /**\r\n * @description Login by email with verify code (Need send email verify code first) or password\r\n *\r\n * @tags Auth\r\n * @name LoginByEmail\r\n * @summary Login by email\r\n * @request POST:/auth/email/login\r\n * @response `200` `HandlerResponseUserLogin` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    loginByEmail: (data: HandlerRequestAuthEmailLogin, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserLogin,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/email/login`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Register by email and verify code (if user exists, will update user, like forget password. Need send email verify code first)\r\n *\r\n * @tags Auth\r\n * @name RegisterByEmail\r\n * @summary Register by email\r\n * @request POST:/auth/email/register\r\n * @response `200` `HandlerResponseUserLogin` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    registerByEmail: (data: HandlerRequestAuthEmailRegister, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserLogin,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/email/register`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Send email including verify code to user\r\n *\r\n * @tags Auth\r\n * @name SendVerifyEmail\r\n * @summary Send verify email\r\n * @request POST:/auth/email/send\r\n * @response `200` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    sendVerifyEmail: (data: HandlerRequestAuthEmailSend, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap & {\r\n          msg?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/email/send`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get all users with same email, if there are more than one user with same email, need merge\r\n *\r\n * @tags Auth\r\n * @name CheckDataMerge\r\n * @summary Check data merge\r\n * @request GET:/auth/merge\r\n * @secure\r\n * @response `200` `HandlerResponseAuthDataMergeCheck` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    checkDataMerge: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseAuthDataMergeCheck,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/merge`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description This function is to solve the problem of multiple users with the same email address, should be called after user login and then check, and perform data merge.\r\n *\r\n * @tags Auth\r\n * @name ApplyDataMerge\r\n * @summary Apply data merge\r\n * @request POST:/auth/merge\r\n * @secure\r\n * @response `200` `HandlerResponseAuthDataMergeApply` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    applyDataMerge: (data: HandlerRequestAuthDataMergeApply, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseAuthDataMergeApply,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/auth/merge`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  cache = {\r\n    /**\r\n * @description Flush all cache on the server\r\n *\r\n * @tags Cache\r\n * @name FlushCache\r\n * @summary Flush Cache\r\n * @request POST:/cache/flush\r\n * @secure\r\n * @response `200` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    flushCache: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap & {\r\n          msg?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/cache/flush`,\r\n        method: 'POST',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Cache warming helps you to pre-load the cache to improve the performance of the first request\r\n *\r\n * @tags Cache\r\n * @name WarmUpCache\r\n * @summary Warm-Up Cache\r\n * @request POST:/cache/warm_up\r\n * @secure\r\n * @response `200` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    warmUpCache: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap & {\r\n          msg?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/cache/warm_up`,\r\n        method: 'POST',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  captcha = {\r\n    /**\r\n * @description Get a base64 encoded captcha image or a HTML page to verify for user\r\n *\r\n * @tags Captcha\r\n * @name GetCaptcha\r\n * @summary Get Captcha\r\n * @request GET:/captcha\r\n * @response `200` `HandlerResponseCaptchaGet` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getCaptcha: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCaptchaGet,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/captcha`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get the status of the user's captcha verification\r\n     *\r\n     * @tags Captcha\r\n     * @name GetCaptchaStatus\r\n     * @summary Get Captcha Status\r\n     * @request GET:/captcha/status\r\n     * @response `200` `HandlerResponseCaptchaStatus` OK\r\n     */\r\n    getCaptchaStatus: (params: RequestParams = {}) =>\r\n      this.request<HandlerResponseCaptchaStatus, any>({\r\n        path: `/captcha/status`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Verify user enters correct captcha code\r\n *\r\n * @tags Captcha\r\n * @name VerifyCaptcha\r\n * @summary Verify Captcha\r\n * @request POST:/captcha/verify\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    img_data?: string,\r\n\r\n})` Forbidden\r\n */\r\n    verifyCaptcha: (data: HandlerParamsCaptchaVerify, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          img_data?: string\r\n        }\r\n      >({\r\n        path: `/captcha/verify`,\r\n        method: 'POST',\r\n        body: data,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  comments = {\r\n    /**\r\n * @description Get a list of comments by some conditions\r\n *\r\n * @tags Comment\r\n * @name GetComments\r\n * @summary Get Comment List\r\n * @request GET:/comments\r\n * @secure\r\n * @response `200` `HandlerResponseCommentList` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getComments: (\r\n      query: {\r\n        /** The user email */\r\n        email?: string\r\n        /** Enable flat_mode */\r\n        flat_mode?: boolean\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** The username */\r\n        name?: string\r\n        /** The offset for pagination */\r\n        offset?: number\r\n        /** The comment page_key */\r\n        page_key: string\r\n        /** The scope of comments */\r\n        scope?: 'page' | 'user' | 'site'\r\n        /** Search keywords */\r\n        search?: string\r\n        /** The site name of your content scope */\r\n        site_name?: string\r\n        /** Sort by condition */\r\n        sort_by?: 'date_asc' | 'date_desc' | 'vote'\r\n        /** Message center show type */\r\n        type?: 'all' | 'mentions' | 'mine' | 'pending'\r\n        /** Only show comments by admin */\r\n        view_only_admin?: boolean\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseCommentList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Create a new comment\r\n *\r\n * @tags Comment\r\n * @name CreateComment\r\n * @summary Create Comment\r\n * @request POST:/comments\r\n * @secure\r\n * @response `200` `HandlerResponseCommentCreate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    createComment: (comment: HandlerParamsCommentCreate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCommentCreate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments`,\r\n        method: 'POST',\r\n        body: comment,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get the detail of a comment by comment id\r\n *\r\n * @tags Comment\r\n * @name GetComment\r\n * @summary Get a comment\r\n * @request GET:/comments/{id}\r\n * @response `200` `HandlerResponseCommentGet` OK\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getComment: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCommentGet,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments/${id}`,\r\n        method: 'GET',\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Update a specific comment\r\n *\r\n * @tags Comment\r\n * @name UpdateComment\r\n * @summary Update Comment\r\n * @request PUT:/comments/{id}\r\n * @secure\r\n * @response `200` `HandlerResponseCommentUpdate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    updateComment: (id: number, comment: HandlerParamsCommentUpdate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseCommentUpdate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments/${id}`,\r\n        method: 'PUT',\r\n        body: comment,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific comment\r\n *\r\n * @tags Comment\r\n * @name DeleteComment\r\n * @summary Delete Comment\r\n * @request DELETE:/comments/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deleteComment: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/comments/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  conf = {\r\n    /**\r\n     * @description Get System Configs for UI\r\n     *\r\n     * @tags System\r\n     * @name Conf\r\n     * @summary Get System Configs\r\n     * @request GET:/conf\r\n     * @response `200` `CommonConfData` OK\r\n     */\r\n    conf: (params: RequestParams = {}) =>\r\n      this.request<CommonConfData, any>({\r\n        path: `/conf`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get social login providers\r\n *\r\n * @tags System\r\n * @name GetSocialLoginProviders\r\n * @summary Get Social Login Providers\r\n * @request GET:/conf/auth/providers\r\n * @response `200` `HandlerResponseConfAuthProviders` OK\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n */\r\n    getSocialLoginProviders: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseConfAuthProviders,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/conf/auth/providers`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get Domain Info\r\n     *\r\n     * @tags System\r\n     * @name GetDomain\r\n     * @summary Get Domain Info\r\n     * @request GET:/conf/domain\r\n     * @response `200` `HandlerResponseConfDomain` OK\r\n     */\r\n    getDomain: (\r\n      query?: {\r\n        /** Domain URL */\r\n        url?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<HandlerResponseConfDomain, any>({\r\n        path: `/conf/domain`,\r\n        method: 'GET',\r\n        query: query,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  notifies = {\r\n    /**\r\n * @description Get a list of notifies for user\r\n *\r\n * @tags Notify\r\n * @name GetNotifies\r\n * @summary Get Notifies\r\n * @request GET:/notifies\r\n * @response `200` `HandlerResponseNotifyList` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getNotifies: (\r\n      query: {\r\n        /** The user email */\r\n        email: string\r\n        /** The user name */\r\n        name: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseNotifyList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/notifies`,\r\n        method: 'GET',\r\n        query: query,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Mark all notifies as read for user\r\n *\r\n * @tags Notify\r\n * @name MarkAllNotifyRead\r\n * @summary Mark All Notifies as Read\r\n * @request POST:/notifies/read\r\n * @response `200` `HandlerMap` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    markAllNotifyRead: (options: HandlerParamsNotifyReadAll, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/notifies/read`,\r\n        method: 'POST',\r\n        body: options,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Mark specific notification as read for user\r\n *\r\n * @tags Notify\r\n * @name MarkNotifyRead\r\n * @summary Mark Notify as Read\r\n * @request POST:/notifies/{comment_id}/{notify_key}\r\n * @response `200` `HandlerMap` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    markNotifyRead: (commentId: number, notifyKey: string, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/notifies/${commentId}/${notifyKey}`,\r\n        method: 'POST',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  pages = {\r\n    /**\r\n * @description Get a list of pages by some conditions\r\n *\r\n * @tags Page\r\n * @name GetPages\r\n * @summary Get Page List\r\n * @request GET:/pages\r\n * @secure\r\n * @response `200` `HandlerResponsePageList` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    getPages: (\r\n      query?: {\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** The offset for pagination */\r\n        offset?: number\r\n        /** The site name of your content scope */\r\n        site_name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponsePageList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Fetch the data of all pages\r\n *\r\n * @tags Page\r\n * @name FetchAllPages\r\n * @summary Fetch All Pages Data\r\n * @request POST:/pages/fetch\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    fetchAllPages: (options: HandlerParamsPageFetchAll, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/fetch`,\r\n        method: 'POST',\r\n        body: options,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get the status of the task of fetching all pages\r\n     *\r\n     * @tags Page\r\n     * @name GetPageFetchStatus\r\n     * @summary Get Pages Fetch Status\r\n     * @request GET:/pages/fetch/status\r\n     * @secure\r\n     * @response `200` `HandlerResponsePageFetchStatus` OK\r\n     */\r\n    getPageFetchStatus: (params: RequestParams = {}) =>\r\n      this.request<HandlerResponsePageFetchStatus, any>({\r\n        path: `/pages/fetch/status`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Increase and get the number of page views\r\n     *\r\n     * @tags Page\r\n     * @name LogPv\r\n     * @summary Increase Page Views (PV)\r\n     * @request POST:/pages/pv\r\n     * @response `200` `HandlerResponsePagePV` OK\r\n     */\r\n    logPv: (page: HandlerParamsPagePV, params: RequestParams = {}) =>\r\n      this.request<HandlerResponsePagePV, any>({\r\n        path: `/pages/pv`,\r\n        method: 'POST',\r\n        body: page,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Update a specific page\r\n *\r\n * @tags Page\r\n * @name UpdatePage\r\n * @summary Update Page\r\n * @request PUT:/pages/{id}\r\n * @secure\r\n * @response `200` `HandlerResponsePageUpdate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    updatePage: (id: number, page: HandlerParamsPageUpdate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponsePageUpdate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/${id}`,\r\n        method: 'PUT',\r\n        body: page,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific page\r\n *\r\n * @tags Page\r\n * @name DeletePage\r\n * @summary Delete Page\r\n * @request DELETE:/pages/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deletePage: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Fetch the data of a specific page\r\n *\r\n * @tags Page\r\n * @name FetchPage\r\n * @summary Fetch Page Data\r\n * @request POST:/pages/{id}/fetch\r\n * @secure\r\n * @response `200` `HandlerResponsePageFetch` OK\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    fetchPage: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponsePageFetch,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/pages/${id}/fetch`,\r\n        method: 'POST',\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  sendEmail = {\r\n    /**\r\n * @description Send an email to test the email sender\r\n *\r\n * @tags System\r\n * @name SendEmail\r\n * @summary Send Email\r\n * @request POST:/send_email\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `HandlerMap` Internal Server Error\r\n */\r\n    sendEmail: (email: HandlerParamsEmailSend, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        | (HandlerMap & {\r\n            msg?: string\r\n          })\r\n        | HandlerMap\r\n      >({\r\n        path: `/send_email`,\r\n        method: 'POST',\r\n        body: email,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  settings = {\r\n    /**\r\n * @description Get settings from app config file\r\n *\r\n * @tags System\r\n * @name GetSettings\r\n * @summary Get Settings\r\n * @request GET:/settings\r\n * @secure\r\n * @response `200` `HandlerResponseSettingGet` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getSettings: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseSettingGet,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/settings`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Apply settings and restart the server\r\n *\r\n * @tags System\r\n * @name ApplySettings\r\n * @summary Save and apply Settings\r\n * @request PUT:/settings\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    applySettings: (settings: HandlerParamsSettingApply, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/settings`,\r\n        method: 'PUT',\r\n        body: settings,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get config templates in different languages for rendering the settings page in the frontend\r\n     *\r\n     * @tags System\r\n     * @name GetSettingsTemplate\r\n     * @summary Get Settings Template\r\n     * @request GET:/settings/template/{locale}\r\n     * @secure\r\n     * @response `200` `HandlerResponseSettingTemplate` OK\r\n     */\r\n    getSettingsTemplate: (locale: string, params: RequestParams = {}) =>\r\n      this.request<HandlerResponseSettingTemplate, any>({\r\n        path: `/settings/template/${locale}`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  sites = {\r\n    /**\r\n     * @description Get a list of sites by some conditions\r\n     *\r\n     * @tags Site\r\n     * @name GetSites\r\n     * @summary Get Site List\r\n     * @request GET:/sites\r\n     * @secure\r\n     * @response `200` `HandlerResponseSiteList` OK\r\n     */\r\n    getSites: (params: RequestParams = {}) =>\r\n      this.request<HandlerResponseSiteList, any>({\r\n        path: `/sites`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Create a new site\r\n *\r\n * @tags Site\r\n * @name CreateSite\r\n * @summary Create Site\r\n * @request POST:/sites\r\n * @secure\r\n * @response `200` `HandlerResponseSiteCreate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    createSite: (site: HandlerParamsSiteCreate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseSiteCreate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/sites`,\r\n        method: 'POST',\r\n        body: site,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Update a specific site\r\n     *\r\n     * @tags Site\r\n     * @name UpdateSite\r\n     * @summary Update Site\r\n     * @request PUT:/sites/{id}\r\n     * @secure\r\n     * @response `200` `HandlerResponseSiteUpdate` OK\r\n     */\r\n    updateSite: (id: number, site: HandlerParamsSiteUpdate, params: RequestParams = {}) =>\r\n      this.request<HandlerResponseSiteUpdate, any>({\r\n        path: `/sites/${id}`,\r\n        method: 'PUT',\r\n        body: site,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific site\r\n *\r\n * @tags Site\r\n * @name DeleteSite\r\n * @summary Site Delete\r\n * @request DELETE:/sites/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deleteSite: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/sites/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  stats = {\r\n    /**\r\n * @description Get the statistics of various data analysis\r\n *\r\n * @tags Statistic\r\n * @name GetStats\r\n * @summary Statistic\r\n * @request GET:/stats/{type}\r\n * @response `200` `CommonJSONResult` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    getStats: (\r\n      type:\r\n        | 'latest_comments'\r\n        | 'latest_pages'\r\n        | 'pv_most_pages'\r\n        | 'comment_most_pages'\r\n        | 'page_pv'\r\n        | 'site_pv'\r\n        | 'page_comment'\r\n        | 'site_comment'\r\n        | 'rand_comments'\r\n        | 'rand_pages',\r\n      query?: {\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** multiple page keys separated by commas */\r\n        page_keys?: string\r\n        /** The site name of your content scope */\r\n        site_name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        CommonJSONResult,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/stats/${type}`,\r\n        method: 'GET',\r\n        query: query,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  transfer = {\r\n    /**\r\n * @description Export data from Artalk\r\n *\r\n * @tags Transfer\r\n * @name ExportArtrans\r\n * @summary Export Artrans\r\n * @request GET:/transfer/export\r\n * @secure\r\n * @response `200` `HandlerResponseTransferExport` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    exportArtrans: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseTransferExport,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/transfer/export`,\r\n        method: 'GET',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Import data to Artalk\r\n     *\r\n     * @tags Transfer\r\n     * @name ImportArtrans\r\n     * @summary Import Artrans\r\n     * @request POST:/transfer/import\r\n     * @secure\r\n     * @response `200` `string` OK\r\n     */\r\n    importArtrans: (data: HandlerParamsTransferImport, params: RequestParams = {}) =>\r\n      this.request<string, any>({\r\n        path: `/transfer/import`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Upload a file to prepare to import\r\n *\r\n * @tags Transfer\r\n * @name UploadArtrans\r\n * @summary Upload Artrans\r\n * @request POST:/transfer/upload\r\n * @secure\r\n * @response `200` `(HandlerResponseTransferUpload & {\r\n    filename?: string,\r\n\r\n})` OK\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    uploadArtrans: (\r\n      data: {\r\n        /**\r\n         * Upload file in preparation for import task\r\n         * @format binary\r\n         */\r\n        file: File\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseTransferUpload & {\r\n          filename?: string\r\n        },\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/transfer/upload`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.FormData,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  upload = {\r\n    /**\r\n * @description Upload file from this endpoint\r\n *\r\n * @tags Upload\r\n * @name Upload\r\n * @summary Upload\r\n * @request POST:/upload\r\n * @secure\r\n * @response `200` `HandlerResponseUpload` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    upload: (\r\n      data: {\r\n        /**\r\n         * Upload file\r\n         * @format binary\r\n         */\r\n        file: File\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseUpload,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/upload`,\r\n        method: 'POST',\r\n        body: data,\r\n        secure: true,\r\n        type: ContentType.FormData,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  user = {\r\n    /**\r\n * @description Get user info to prepare for login or check current user status\r\n *\r\n * @tags Auth\r\n * @name GetUser\r\n * @summary Get User Info\r\n * @request GET:/user\r\n * @secure\r\n * @response `200` `HandlerResponseUserInfo` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n */\r\n    getUser: (\r\n      query?: {\r\n        /** The user email */\r\n        email?: string\r\n        /** The username */\r\n        name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseUserInfo,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/user`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Login user by name or email\r\n *\r\n * @tags Auth\r\n * @name Login\r\n * @summary Get Access Token\r\n * @request POST:/user/access_token\r\n * @response `200` `HandlerResponseUserLogin` OK\r\n * @response `400` `(HandlerMap & {\r\n    data?: {\r\n    need_name_select?: (string)[],\r\n\r\n},\r\n    msg?: string,\r\n\r\n})` Multiple users with the same email address are matched\r\n * @response `401` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Unauthorized\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    login: (user: HandlerParamsUserLogin, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserLogin,\r\n        | (HandlerMap & {\r\n            data?: {\r\n              need_name_select?: string[]\r\n            }\r\n            msg?: string\r\n          })\r\n        | (HandlerMap & {\r\n            msg?: string\r\n          })\r\n      >({\r\n        path: `/user/access_token`,\r\n        method: 'POST',\r\n        body: user,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n     * @description Get user login status by header Authorization\r\n     *\r\n     * @tags Auth\r\n     * @name GetUserStatus\r\n     * @summary Get Login Status\r\n     * @request GET:/user/status\r\n     * @secure\r\n     * @response `200` `HandlerResponseUserStatus` OK\r\n     */\r\n    getUserStatus: (\r\n      query?: {\r\n        /** The user email */\r\n        email?: string\r\n        /** The username */\r\n        name?: string\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<HandlerResponseUserStatus, any>({\r\n        path: `/user/status`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  users = {\r\n    /**\r\n * @description Create a new user\r\n *\r\n * @tags User\r\n * @name CreateUser\r\n * @summary Create User\r\n * @request POST:/users\r\n * @secure\r\n * @response `200` `HandlerResponseUserCreate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    createUser: (user: HandlerParamsUserCreate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserCreate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users`,\r\n        method: 'POST',\r\n        body: user,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Update a specific user\r\n *\r\n * @tags User\r\n * @name UpdateUser\r\n * @summary Update User\r\n * @request PUT:/users/{id}\r\n * @secure\r\n * @response `200` `HandlerResponseUserUpdate` OK\r\n * @response `400` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Bad Request\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    updateUser: (id: number, user: HandlerParamsUserUpdate, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerResponseUserUpdate,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users/${id}`,\r\n        method: 'PUT',\r\n        body: user,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Delete a specific user\r\n *\r\n * @tags User\r\n * @name DeleteUser\r\n * @summary Delete User\r\n * @request DELETE:/users/{id}\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    deleteUser: (id: number, params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users/${id}`,\r\n        method: 'DELETE',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Get a list of users by some conditions\r\n *\r\n * @tags User\r\n * @name GetUsers\r\n * @summary Get User List\r\n * @request GET:/users/{type}\r\n * @secure\r\n * @response `200` `HandlerResponseAdminUserList` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    getUsers: (\r\n      type?: 'all' | 'admin' | 'in_conf',\r\n      query?: {\r\n        /** The limit for pagination */\r\n        limit?: number\r\n        /** The offset for pagination */\r\n        offset?: number\r\n      },\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseAdminUserList,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/users/${type}`,\r\n        method: 'GET',\r\n        query: query,\r\n        secure: true,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  version = {\r\n    /**\r\n     * @description Get the version of Artalk\r\n     *\r\n     * @tags System\r\n     * @name GetVersion\r\n     * @summary Get Version Info\r\n     * @request GET:/version\r\n     * @response `200` `CommonApiVersionData` OK\r\n     */\r\n    getVersion: (params: RequestParams = {}) =>\r\n      this.request<CommonApiVersionData, any>({\r\n        path: `/version`,\r\n        method: 'GET',\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n  votes = {\r\n    /**\r\n * @description Sync the number of votes in the `comments` or `pages` data tables to keep them the same as the `votes` table\r\n *\r\n * @tags Vote\r\n * @name SyncVotes\r\n * @summary Sync Vote Data\r\n * @request POST:/votes/sync\r\n * @secure\r\n * @response `200` `HandlerMap` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n */\r\n    syncVotes: (params: RequestParams = {}) =>\r\n      this.request<\r\n        HandlerMap,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/votes/sync`,\r\n        method: 'POST',\r\n        secure: true,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n\r\n    /**\r\n * @description Vote for a specific comment or page\r\n *\r\n * @tags Vote\r\n * @name Vote\r\n * @summary Vote\r\n * @request POST:/votes/{type}/{target_id}\r\n * @response `200` `HandlerResponseVote` OK\r\n * @response `403` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Forbidden\r\n * @response `404` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Not Found\r\n * @response `500` `(HandlerMap & {\r\n    msg?: string,\r\n\r\n})` Internal Server Error\r\n */\r\n    vote: (\r\n      type: 'comment_up' | 'comment_down' | 'page_up' | 'page_down',\r\n      targetId: number,\r\n      vote: HandlerParamsVote,\r\n      params: RequestParams = {},\r\n    ) =>\r\n      this.request<\r\n        HandlerResponseVote,\r\n        HandlerMap & {\r\n          msg?: string\r\n        }\r\n      >({\r\n        path: `/votes/${type}/${targetId}`,\r\n        method: 'POST',\r\n        body: vote,\r\n        type: ContentType.Json,\r\n        format: 'json',\r\n        ...params,\r\n      }),\r\n  }\r\n}\r\n","import { ApiOptions } from './options'\r\nimport { FetchError } from '@/types'\r\n\r\nexport const Fetch = async (\r\n  opts: ApiOptions,\r\n  input: string | URL | Request,\r\n  init?: RequestInit,\r\n) => {\r\n  const apiToken = opts.getApiToken && opts.getApiToken()\r\n\r\n  const headers = new Headers({\r\n    Authorization: apiToken ? `Bearer ${apiToken}` : '',\r\n    ...init?.headers,\r\n  })\r\n\r\n  if (!headers.get('Authorization')) headers.delete('Authorization')\r\n\r\n  // 请求操作\r\n  const resp = await fetch(input, {\r\n    ...init,\r\n    headers,\r\n  })\r\n\r\n  if (!resp.ok) {\r\n    // Deserialize response body (if it is JSON, otherwise returns `{}`)\r\n    const json: any = (await resp.json().catch(() => {})) || {}\r\n\r\n    let retry = false\r\n    opts.handlers &&\r\n      (await opts.handlers.get().reduce(async (promise, item) => {\r\n        await promise\r\n        if (json[item.action] === true) {\r\n          await item.handler(json)\r\n          retry = true\r\n        }\r\n      }, Promise.resolve()))\r\n\r\n    if (retry) return Fetch(opts, input, init)\r\n    throw createError(resp.status, json)\r\n  }\r\n\r\n  return resp\r\n}\r\n\r\nexport class FetchException extends Error implements FetchError {\r\n  code: number = 0\r\n  message: string = 'fetch error'\r\n  data?: any\r\n}\r\n\r\nfunction createError(code: number, data: any): FetchException {\r\n  const err = new FetchException()\r\n  err.message = data.msg || data.message || 'fetch error'\r\n  err.code = code\r\n  err.data = data\r\n  console.error(err)\r\n  return err\r\n}\r\n","import { ApiOptions } from './options'\r\nimport { Api as ApiV2 } from './v2'\r\nimport { Fetch } from './fetch'\r\n\r\nexport * from './options'\r\nexport * from './handler'\r\n\r\nexport class Api extends ApiV2<void> {\r\n  private _opts: ApiOptions\r\n\r\n  constructor(opts: ApiOptions) {\r\n    super({\r\n      baseUrl: opts.baseURL,\r\n      customFetch: (input, init) => Fetch(opts, input, init),\r\n    })\r\n\r\n    this._opts = opts\r\n  }\r\n\r\n  /**\r\n   * Get user info as params for request\r\n   *\r\n   * @returns Request params with user info\r\n   */\r\n  getUserFields() {\r\n    const user = this._opts.userInfo\r\n    if (!user?.name || !user?.email) return undefined\r\n    return { name: user.name, email: user.email }\r\n  }\r\n}\r\n","'use strict';\n\nvar escapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nvar unescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\nvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\nvar runescaped = /[&<>\"']/g;\n\nfunction escapeHtmlChar (match) {\n  return escapes[match];\n}\nfunction unescapeHtmlChar (match) {\n  return unescapes[match];\n}\n\nfunction escapeHtml (text) {\n  return text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n}\n\nfunction unescapeHtml (html) {\n  return html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n}\n\nescapeHtml.options = unescapeHtml.options = {};\n\nmodule.exports = {\n  encode: escapeHtml,\n  escape: escapeHtml,\n  decode: unescapeHtml,\n  unescape: unescapeHtml,\n  version: '1.0.0-browser'\n};\n","'use strict';\n\nfunction assignment (result) {\n  var stack = Array.prototype.slice.call(arguments, 1);\n  var item;\n  var key;\n  while (stack.length) {\n    item = stack.shift();\n    for (key in item) {\n      if (item.hasOwnProperty(key)) {\n        if (Object.prototype.toString.call(result[key]) === '[object Object]') {\n          result[key] = assignment(result[key], item[key]);\n        } else {\n          result[key] = item[key];\n        }\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = assignment;\n","'use strict';\n\nmodule.exports = function lowercase (string) {\n  return typeof string === 'string' ? string.toLowerCase() : string;\n};\n","'use strict';\n\nfunction toMap (list) {\n  return list.reduce(asKey, {});\n}\n\nfunction asKey (accumulator, item) {\n  accumulator[item] = true;\n  return accumulator;\n}\n\nmodule.exports = toMap;\n","'use strict';\n\nvar toMap = require('./toMap');\nvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\nmodule.exports = {\n  uris: toMap(uris) // attributes that have an href and hence need to be sanitized\n};\n","'use strict';\n\nvar toMap = require('./toMap');\nvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\nmodule.exports = {\n  voids: toMap(voids)\n};\n","'use strict';\n\nvar he = require('he');\nvar lowercase = require('./lowercase');\nvar attributes = require('./attributes');\nvar elements = require('./elements');\nvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\nvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\nvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\nvar rtag = /^</;\nvar rtagend = /^<\\s*\\//;\n\nfunction createStack () {\n  var stack = [];\n  stack.lastItem = function lastItem () {\n    return stack[stack.length - 1];\n  };\n  return stack;\n}\n\nfunction parser (html, handler) {\n  var stack = createStack();\n  var last = html;\n  var chars;\n\n  while (html) {\n    parsePart();\n  }\n  parseEndTag(); // clean up any remaining tags\n\n  function parsePart () {\n    chars = true;\n    parseTag();\n\n    var same = html === last;\n    last = html;\n\n    if (same) { // discard, because it's invalid\n      html = '';\n    }\n  }\n\n  function parseTag () {\n    if (html.substr(0, 4) === '<!--') { // comments\n      parseComment();\n    } else if (rtagend.test(html)) {\n      parseEdge(rend, parseEndTag);\n    } else if (rtag.test(html)) {\n      parseEdge(rstart, parseStartTag);\n    }\n    parseTagDecode();\n  }\n\n  function parseEdge (regex, parser) {\n    var match = html.match(regex);\n    if (match) {\n      html = html.substring(match[0].length);\n      match[0].replace(regex, parser);\n      chars = false;\n    }\n  }\n\n  function parseComment () {\n    var index = html.indexOf('-->');\n    if (index >= 0) {\n      if (handler.comment) {\n        handler.comment(html.substring(4, index));\n      }\n      html = html.substring(index + 3);\n      chars = false;\n    }\n  }\n\n  function parseTagDecode () {\n    if (!chars) {\n      return;\n    }\n    var text;\n    var index = html.indexOf('<');\n    if (index >= 0) {\n      text = html.substring(0, index);\n      html = html.substring(index);\n    } else {\n      text = html;\n      html = '';\n    }\n    if (handler.chars) {\n      handler.chars(text);\n    }\n  }\n\n  function parseStartTag (tag, tagName, rest, unary) {\n    var attrs = {};\n    var low = lowercase(tagName);\n    var u = elements.voids[low] || !!unary;\n\n    rest.replace(rattrs, attrReplacer);\n\n    if (!u) {\n      stack.push(low);\n    }\n    if (handler.start) {\n      handler.start(low, attrs, u);\n    }\n\n    function attrReplacer (match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n      if (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n        attrs[name] = void 0; // attribute is like <button disabled></button>\n      } else {\n        attrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n      }\n    }\n  }\n\n  function parseEndTag (tag, tagName) {\n    var i;\n    var pos = 0;\n    var low = lowercase(tagName);\n    if (low) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos] === low) {\n          break; // find the closest opened tag of the same type\n        }\n      }\n    }\n    if (pos >= 0) {\n      for (i = stack.length - 1; i >= pos; i--) {\n        if (handler.end) { // close all the open elements, up the stack\n          handler.end(stack[i]);\n        }\n      }\n      stack.length = pos;\n    }\n  }\n}\n\nmodule.exports = parser;\n","'use strict';\n\nvar he = require('he');\nvar lowercase = require('./lowercase');\nvar attributes = require('./attributes');\nvar elements = require('./elements');\n\nfunction sanitizer (buffer, options) {\n  var last;\n  var context;\n  var o = options || {};\n\n  reset();\n\n  return {\n    start: start,\n    end: end,\n    chars: chars\n  };\n\n  function out (value) {\n    buffer.push(value);\n  }\n\n  function start (tag, attrs, unary) {\n    var low = lowercase(tag);\n\n    if (context.ignoring) {\n      ignore(low); return;\n    }\n    if ((o.allowedTags || []).indexOf(low) === -1) {\n      ignore(low); return;\n    }\n    if (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n      ignore(low); return;\n    }\n\n    out('<');\n    out(low);\n    Object.keys(attrs).forEach(parse);\n    out(unary ? '/>' : '>');\n\n    function parse (key) {\n      var value = attrs[key];\n      var classesOk = (o.allowedClasses || {})[low] || [];\n      var attrsOk = (o.allowedAttributes || {})[low] || [];\n      var valid;\n      var lkey = lowercase(key);\n      if (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n        value = value.split(' ').filter(isValidClass).join(' ').trim();\n        valid = value.length;\n      } else {\n        valid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n      }\n      if (valid) {\n        out(' ');\n        out(key);\n        if (typeof value === 'string') {\n          out('=\"');\n          out(he.encode(value));\n          out('\"');\n        }\n      }\n      function isValidClass (className) {\n        return classesOk && classesOk.indexOf(className) !== -1;\n      }\n    }\n  }\n\n  function end (tag) {\n    var low = lowercase(tag);\n    var allowed = (o.allowedTags || []).indexOf(low) !== -1;\n    if (allowed) {\n      if (context.ignoring === false) {\n        out('</');\n        out(low);\n        out('>');\n      } else {\n        unignore(low);\n      }\n    } else {\n      unignore(low);\n    }\n  }\n\n  function testUrl (text) {\n    var start = text[0];\n    if (start === '#' || start === '/') {\n      return true;\n    }\n    var colon = text.indexOf(':');\n    if (colon === -1) {\n      return true;\n    }\n    var questionmark = text.indexOf('?');\n    if (questionmark !== -1 && colon > questionmark) {\n      return true;\n    }\n    var hash = text.indexOf('#');\n    if (hash !== -1 && colon > hash) {\n      return true;\n    }\n    return o.allowedSchemes.some(matches);\n\n    function matches (scheme) {\n      return text.indexOf(scheme + ':') === 0;\n    }\n  }\n\n  function chars (text) {\n    if (context.ignoring === false) {\n      out(o.transformText ? o.transformText(text) : text);\n    }\n  }\n\n  function ignore (tag) {\n    if (elements.voids[tag]) {\n      return;\n    }\n    if (context.ignoring === false) {\n      context = { ignoring: tag, depth: 1 };\n    } else if (context.ignoring === tag) {\n      context.depth++;\n    }\n  }\n\n  function unignore (tag) {\n    if (context.ignoring === tag) {\n      if (--context.depth <= 0) {\n        reset();\n      }\n    }\n  }\n\n  function reset () {\n    context = { ignoring: false, depth: 0 };\n  }\n}\n\nmodule.exports = sanitizer;\n","'use strict';\n\nvar he = require('he');\nvar assign = require('assignment');\nvar parser = require('./parser');\nvar sanitizer = require('./sanitizer');\nvar defaults = require('./defaults');\n\nfunction insane (html, options, strict) {\n  var buffer = [];\n  var configuration = strict === true ? options : assign({}, defaults, options);\n  var handler = sanitizer(buffer, configuration);\n\n  parser(html, handler);\n\n  return buffer.join('');\n}\n\ninsane.defaults = defaults;\nmodule.exports = insane;\n","'use strict';\n\nvar defaults = {\n  allowedAttributes: {\n    a: ['href', 'name', 'target', 'title', 'aria-label'],\n    iframe: ['allowfullscreen', 'frameborder', 'src'],\n    img: ['src', 'alt', 'title', 'aria-label']\n  },\n  allowedClasses: {},\n  allowedSchemes: ['http', 'https', 'mailto'],\n  allowedTags: [\n    'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n    'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n    'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n  ],\n  filter: null\n};\n\nmodule.exports = defaults;\n","import insane from 'insane'\r\n\r\nconst insaneOptions = {\r\n  allowedClasses: {},\r\n  // @refer CVE-2018-8495\r\n  // @link https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8495\r\n  // @link https://leucosite.com/Microsoft-Edge-RCE/\r\n  // @link https://medium.com/@knownsec404team/analysis-of-the-security-issues-of-url-scheme-in-pc-from-cve-2018-8495-934478a36756\r\n  allowedSchemes: [\r\n    'http',\r\n    'https',\r\n    'mailto',\r\n    'data', // for support base64 encoded image (安全性有待考虑)\r\n  ],\r\n  allowedTags: [\r\n    'a',\r\n    'abbr',\r\n    'article',\r\n    'b',\r\n    'blockquote',\r\n    'br',\r\n    'caption',\r\n    'code',\r\n    'del',\r\n    'details',\r\n    'div',\r\n    'em',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'hr',\r\n    'i',\r\n    'img',\r\n    'ins',\r\n    'kbd',\r\n    'li',\r\n    'main',\r\n    'mark',\r\n    'ol',\r\n    'p',\r\n    'pre',\r\n    'section',\r\n    'span',\r\n    'strike',\r\n    'strong',\r\n    'sub',\r\n    'summary',\r\n    'sup',\r\n    'table',\r\n    'tbody',\r\n    'td',\r\n    'th',\r\n    'thead',\r\n    'tr',\r\n    'u',\r\n    'ul',\r\n  ],\r\n  allowedAttributes: {\r\n    '*': ['title', 'accesskey'],\r\n    a: ['href', 'name', 'target', 'aria-label', 'rel'],\r\n    img: ['src', 'alt', 'title', 'atk-emoticon', 'aria-label', 'data-src', 'class', 'loading'],\r\n    // for code highlight\r\n    code: ['class'],\r\n    span: ['class', 'style'],\r\n  },\r\n  filter: (node) => {\r\n    // class whitelist\r\n    const allowed = [\r\n      ['code', /^hljs\\W+language-(.*)$/],\r\n      ['span', /^(hljs-.*)$/],\r\n      ['img', /^lazyload$/],\r\n    ]\r\n    allowed.forEach(([tag, reg]) => {\r\n      if (node.tag === tag && !!node.attrs.class && !(reg as RegExp).test(node.attrs.class)) {\r\n        delete node.attrs.class\r\n      }\r\n    })\r\n\r\n    // allow <span> set color sty\r\n    if (\r\n      node.tag === 'span' &&\r\n      !!node.attrs.style &&\r\n      !/^color:(\\W+)?#[0-9a-f]{3,6};?$/i.test(node.attrs.style)\r\n    ) {\r\n      delete node.attrs.style\r\n    }\r\n\r\n    return true\r\n  },\r\n}\r\n\r\nexport function sanitize(content: string): string {\r\n  // @link https://github.com/markedjs/marked/discussions/1232\r\n  // @link https://gist.github.com/lionel-rowe/bb384465ba4e4c81a9c8dada84167225\r\n  return insane(content, insaneOptions)\r\n}\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.hanabi = factory());\n}(this, (function () { 'use strict';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar index$1 = createCommonjsModule(function (module) {\n'use strict';\n\nvar comment = module.exports = function () {\n\treturn new RegExp('(?:' + comment.line().source + ')|(?:' + comment.block().source + ')', 'gm');\n};\n\ncomment.line = function () {\n\treturn /(?:^|\\s)\\/\\/(.+?)$/gm;\n};\n\ncomment.block = function () {\n\treturn /\\/\\*([\\S\\s]*?)\\*\\//gm;\n};\n});\n\nvar defaultColors = ['23AC69', '91C132', 'F19726', 'E8552D', '1AAB8E', 'E1147F', '2980C1', '1BA1E6', '9FA0A0', 'F19726', 'E30B20', 'E30B20', 'A3338B'];\n\nvar index = function (input, ref) {\n  if ( ref === void 0 ) ref = {};\n  var colors = ref.colors; if ( colors === void 0 ) colors = defaultColors;\n\n  var index = 0;\n  var cache = {};\n  var wordRe = /[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af\\u0400-\\u04FF]+|\\w+/;\n  var leftAngleRe = /</;\n\n  var re = new RegExp((\"(\" + (wordRe.source) + \"|\" + (leftAngleRe.source) + \")|(\" + (index$1().source) + \")\"), 'gmi');\n  return input\n  .replace(re, function (m, word, cm) {\n    if (cm) {\n      return toComment(cm)\n    }\n\n    if (word === '<') {\n      return '&lt;'\n    }\n    var color;\n    if (cache[word]) {\n      color = cache[word];\n    } else {\n      color = colors[index];\n      cache[word] = color;\n    }\n\n    var out = \"<span style=\\\"color: #\" + color + \"\\\">\" + word + \"</span>\";\n    index = ++index % colors.length;\n    return out\n  })\n};\n\nfunction toComment(cm) {\n  return (\"<span style=\\\"color: slategray\\\">\" + cm + \"</span>\")\n}\n\nreturn index;\n\n})));\n","import hanabi from 'hanabi'\r\n\r\nexport function renderCode(code: string) {\r\n  return hanabi(code)\r\n}\r\n","import { marked } from 'marked'\r\nimport { renderCode } from './highlight'\r\nimport type { ArtalkConfig } from '@/types'\r\n\r\nexport interface RendererOptions {\r\n  imgLazyLoad: ArtalkConfig['imgLazyLoad']\r\n}\r\n\r\nexport function getRenderer(options: RendererOptions) {\r\n  const renderer = new marked.Renderer()\r\n  renderer.link = markedLinkRenderer(renderer, renderer.link)\r\n  renderer.code = markedCodeRenderer()\r\n  renderer.image = markedImageRenderer(renderer, renderer.image, options)\r\n  return renderer\r\n}\r\n\r\nconst markedLinkRenderer =\r\n  (renderer: any, orgLinkRenderer: (href: string, title: string, text: string) => string) =>\r\n  (href: string, title: string, text: string): string => {\r\n    const getLinkOrigin = (link: string) => {\r\n      try {\r\n        return new URL(link).origin\r\n      } catch {\r\n        return ''\r\n      }\r\n    }\r\n    const isSameOriginLink = getLinkOrigin(href) === window.location.origin\r\n    const html = orgLinkRenderer.call(renderer, href, title, text)\r\n    return html.replace(\r\n      /^<a /,\r\n      `<a target=\"_blank\" ${!isSameOriginLink ? `rel=\"noreferrer noopener nofollow\"` : ''} `,\r\n    )\r\n  }\r\n\r\nconst markedCodeRenderer =\r\n  () =>\r\n  (block: string, lang: string | undefined): string => {\r\n    // Colorize the block only if the language is known to highlight.js\r\n    const realLang = !lang ? 'plaintext' : lang\r\n    let colorized = block\r\n    if ((window as any).hljs) {\r\n      if (realLang && (window as any).hljs.getLanguage(realLang)) {\r\n        colorized = (window as any).hljs.highlight(realLang, block).value\r\n      }\r\n    } else {\r\n      colorized = renderCode(block)\r\n    }\r\n\r\n    return (\r\n      `<pre rel=\"${realLang}\">\\n` +\r\n      `<code class=\"hljs language-${realLang}\">${colorized.replace(/&amp;/g, '&')}</code>\\n` +\r\n      `</pre>`\r\n    )\r\n  }\r\n\r\nconst markedImageRenderer =\r\n  (\r\n    renderer: any,\r\n    orgImageRenderer: (href: string, title: string | null, text: string) => string,\r\n    { imgLazyLoad }: RendererOptions,\r\n  ) =>\r\n  (href: string, title: string | null, text: string): string => {\r\n    const html = orgImageRenderer.call(renderer, href, title, text)\r\n    if (!imgLazyLoad) return html\r\n    if (imgLazyLoad === 'native' || (imgLazyLoad as any) === true)\r\n      return html.replace(/^<img /, '<img class=\"lazyload\" loading=\"lazy\" ')\r\n    if (imgLazyLoad === 'data-src')\r\n      return html.replace(/^<img /, '<img class=\"lazyload\" ').replace('src=', 'data-src=')\r\n    return html\r\n  }\r\n","import { marked as libMarked, MarkedOptions } from 'marked'\r\n\r\nimport { sanitize } from './sanitizer'\r\nimport { renderCode } from './highlight'\r\nimport { getRenderer } from './marked-renderer'\r\nimport type { ArtalkConfig } from '@/types'\r\n\r\ntype Replacer = (raw: string) => string\r\n\r\nlet instance: typeof libMarked | undefined\r\nlet replacers: Replacer[] = []\r\n\r\nconst markedOptions: MarkedOptions = {\r\n  gfm: true,\r\n  breaks: true,\r\n  async: false,\r\n}\r\n\r\n/** Get Marked instance */\r\nexport function getInstance() {\r\n  return instance\r\n}\r\n\r\nexport function setReplacers(arr: Replacer[]) {\r\n  replacers = arr\r\n}\r\n\r\nexport interface MarkedInitOptions {\r\n  markedOptions: ArtalkConfig['markedOptions']\r\n  imgLazyLoad: ArtalkConfig['imgLazyLoad']\r\n}\r\n\r\n/** 初始化 marked */\r\nexport function initMarked(options: MarkedInitOptions) {\r\n  try {\r\n    if (!libMarked.name) return\r\n  } catch {\r\n    return\r\n  }\r\n\r\n  // @see https://github.com/markedjs/marked/blob/4afb228d956a415624c4e5554bb8f25d047676fe/src/Tokenizer.js#L329\r\n  libMarked.setOptions({\r\n    renderer: getRenderer({\r\n      imgLazyLoad: options.imgLazyLoad,\r\n    }),\r\n    ...markedOptions,\r\n    ...options.markedOptions,\r\n  })\r\n\r\n  instance = libMarked\r\n}\r\n\r\n/** 解析 markdown */\r\nexport default function marked(src: string): string {\r\n  let markedContent = getInstance()?.parse(src) as string\r\n  if (!markedContent) {\r\n    // 无 Markdown 模式简单处理\r\n    markedContent = simpleMarked(src)\r\n  }\r\n\r\n  let dest = sanitize(markedContent)\r\n\r\n  // 内容替换器\r\n  replacers.forEach((replacer) => {\r\n    if (typeof replacer === 'function') dest = replacer(dest)\r\n  })\r\n\r\n  return dest\r\n}\r\n\r\nfunction simpleMarked(src: string) {\r\n  return (\r\n    src\r\n      // .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(\r\n        /```\\s*([^]+?.*?[^]+?[^]+?)```/g,\r\n        (_, code) => `<pre><code>${renderCode(code)}</code></pre>`,\r\n      )\r\n      // .replace(/`([^`]+?)`/g, '<code>$1</code>')\r\n      .replace(/!\\[(.*?)\\]\\((.*?)\\)/g, (_, alt, imgSrc) => `<img src=\"${imgSrc}\" alt=\"${alt}\" />`)\r\n      .replace(\r\n        /\\[(.*?)\\]\\((.*?)\\)/g,\r\n        (_, text, link) => `<a href=\"${link}\" target=\"_blank\">${text}</a>`,\r\n      )\r\n      .replace(/\\n/g, '<br>')\r\n  )\r\n}\r\n","/**\r\n * Performs a deep merge of objects and returns new object.\r\n * Does not modify objects (immutable) and merges arrays via concatenation.\r\n *\r\n * @param objects - Objects to merge\r\n * @returns New object with merged key/values\r\n */\r\nexport function mergeDeep<T>(...objects: any[]): T {\r\n  const isObject = (obj: any) => obj && typeof obj === 'object' && obj.constructor === Object\r\n\r\n  return objects.reduce((prev, obj) => {\r\n    Object.keys(obj ?? {}).forEach((key) => {\r\n      // Avoid prototype pollution\r\n      if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\r\n        return\r\n      }\r\n\r\n      const pVal = prev[key]\r\n      const oVal = obj[key]\r\n\r\n      if (Array.isArray(pVal) && Array.isArray(oVal)) {\r\n        prev[key] = pVal.concat(...oVal)\r\n      } else if (isObject(pVal) && isObject(oVal)) {\r\n        prev[key] = mergeDeep(pVal, oVal)\r\n      } else {\r\n        prev[key] = oVal\r\n      }\r\n    })\r\n\r\n    return prev\r\n  }, {})\r\n}\r\n","import EventManager from './lib/event-manager'\r\nimport type {\r\n  NotifyData,\r\n  PageData,\r\n  CommentData,\r\n  DataManagerApi,\r\n  ListFetchParams,\r\n  ListLastFetchData,\r\n  EventPayloadMap,\r\n} from '@/types'\r\n\r\nexport class DataManager implements DataManagerApi {\r\n  private loading: boolean = false\r\n  private listLastFetch?: ListLastFetchData\r\n  private comments: CommentData[] = [] // Note: 无层级结构 + 无须排列\r\n  private notifies: NotifyData[] = []\r\n  private page?: PageData\r\n\r\n  constructor(protected events: EventManager<EventPayloadMap>) {}\r\n\r\n  getLoading() {\r\n    return this.loading\r\n  }\r\n\r\n  setLoading(val: boolean) {\r\n    this.loading = val\r\n  }\r\n\r\n  getListLastFetch() {\r\n    return this.listLastFetch\r\n  }\r\n\r\n  setListLastFetch(val: ListLastFetchData) {\r\n    this.listLastFetch = val\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  //  Comments\r\n  // -------------------------------------------------------------------\r\n  getComments() {\r\n    return this.comments\r\n  }\r\n\r\n  fetchComments(params: Partial<ListFetchParams>) {\r\n    this.events.trigger('list-fetch', params)\r\n  }\r\n\r\n  findComment(id: number) {\r\n    return this.comments.find((c) => c.id === id)\r\n  }\r\n\r\n  clearComments() {\r\n    this.comments = []\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  loadComments(partialComments: CommentData[]) {\r\n    this.events.trigger('list-load', partialComments)\r\n\r\n    this.comments.push(...partialComments)\r\n\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  insertComment(comment: CommentData) {\r\n    this.comments.push(comment)\r\n\r\n    this.events.trigger('comment-inserted', comment)\r\n    this.events.trigger('list-loaded', this.comments) // list-loaded should always keep the last\r\n  }\r\n\r\n  updateComment(comment: CommentData) {\r\n    this.comments = this.comments.map((c) => {\r\n      if (c.id === comment.id) return comment\r\n      return c\r\n    })\r\n\r\n    this.events.trigger('comment-updated', comment)\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  deleteComment(id: number) {\r\n    const comment = this.comments.find((c) => c.id === id)\r\n    if (!comment) throw new Error(`Comment ${id} not found`)\r\n    this.comments = this.comments.filter((c) => c.id !== id)\r\n\r\n    this.events.trigger('comment-deleted', comment)\r\n    this.events.trigger('list-loaded', this.comments)\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  //  Notifies\r\n  // -------------------------------------------------------------------\r\n  getNotifies() {\r\n    return this.notifies\r\n  }\r\n\r\n  updateNotifies(notifies: NotifyData[]) {\r\n    this.notifies = notifies\r\n\r\n    this.events.trigger('notifies-updated', this.notifies)\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  // Page\r\n  // -------------------------------------------------------------------\r\n  getPage() {\r\n    return this.page\r\n  }\r\n\r\n  updatePage(pageData: PageData) {\r\n    this.page = pageData\r\n\r\n    this.events.trigger('page-loaded', pageData)\r\n  }\r\n}\r\n","export function createElement<E extends HTMLElement = HTMLElement>(htmlStr: string = ''): E {\r\n  const div = document.createElement('div')\r\n  div.innerHTML = htmlStr.trim()\r\n  return (div.firstElementChild || div) as E\r\n}\r\n\r\nexport function getHeight(el: HTMLElement): number {\r\n  const num = parseFloat(getComputedStyle(el, null).height.replace('px', ''))\r\n  return num || 0 // NaN -> 0\r\n}\r\n\r\nexport function htmlEncode(str: string) {\r\n  const temp = document.createElement('div')\r\n  temp.innerText = str\r\n  const output = temp.innerHTML\r\n  return output\r\n}\r\n\r\nexport function htmlDecode(str: string) {\r\n  const temp = document.createElement('div')\r\n  temp.innerHTML = str\r\n  const output = temp.innerText\r\n  return output\r\n}\r\n\r\nexport function getQueryParam(name: string) {\r\n  const match = RegExp(`[?&]${name}=([^&]*)`).exec(window.location.search)\r\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '))\r\n}\r\n\r\nexport function getOffset(el: HTMLElement, relativeTo?: HTMLElement) {\r\n  const getOffsetRecursive = (element: HTMLElement): { top: number; left: number } => {\r\n    const rect = element.getBoundingClientRect()\r\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop\r\n    return {\r\n      top: rect.top + scrollTop,\r\n      left: rect.left + scrollLeft,\r\n    }\r\n  }\r\n\r\n  const elOffset = getOffsetRecursive(el)\r\n  if (!relativeTo) return elOffset\r\n\r\n  const relativeToOffset = getOffsetRecursive(relativeTo)\r\n\r\n  return {\r\n    top: elOffset.top - relativeToOffset.top,\r\n    left: elOffset.left - relativeToOffset.left,\r\n  }\r\n}\r\n\r\nexport function padWithZeros(vNumber: number, width: number) {\r\n  let numAsString = vNumber.toString()\r\n  while (numAsString.length < width) {\r\n    numAsString = `0${numAsString}`\r\n  }\r\n  return numAsString\r\n}\r\n\r\nexport function dateFormat(date: Date) {\r\n  const vDay = padWithZeros(date.getDate(), 2)\r\n  const vMonth = padWithZeros(date.getMonth() + 1, 2)\r\n  const vYear = padWithZeros(date.getFullYear(), 2)\r\n  // var vHour = padWithZeros(date.getHours(), 2);\r\n  // var vMinute = padWithZeros(date.getMinutes(), 2);\r\n  // var vSecond = padWithZeros(date.getSeconds(), 2);\r\n  return `${vYear}-${vMonth}-${vDay}`\r\n}\r\n\r\nexport function timeAgo(date: Date, $t = (n: any) => n) {\r\n  try {\r\n    const oldTime = date.getTime()\r\n    const currTime = new Date().getTime()\r\n    const diffValue = currTime - oldTime\r\n\r\n    const days = Math.floor(diffValue / (24 * 3600 * 1000))\r\n    if (days === 0) {\r\n      // 计算相差小时数\r\n      const leave1 = diffValue % (24 * 3600 * 1000) // 计算天数后剩余的毫秒数\r\n      const hours = Math.floor(leave1 / (3600 * 1000))\r\n      if (hours === 0) {\r\n        // 计算相差分钟数\r\n        const leave2 = leave1 % (3600 * 1000) // 计算小时数后剩余的毫秒数\r\n        const minutes = Math.floor(leave2 / (60 * 1000))\r\n        if (minutes === 0) {\r\n          // 计算相差秒数\r\n          const leave3 = leave2 % (60 * 1000) // 计算分钟数后剩余的毫秒数\r\n          const seconds = Math.round(leave3 / 1000)\r\n          if (seconds < 10) return $t('now')\r\n          return `${seconds} ${$t('seconds')}`\r\n        }\r\n        return `${minutes} ${$t('minutes')}`\r\n      }\r\n      return `${hours} ${$t('hours')}`\r\n    }\r\n    if (days < 0) return $t('now')\r\n\r\n    if (days < 8) {\r\n      return `${days} ${$t('days')}`\r\n    }\r\n\r\n    return dateFormat(date)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return ' - '\r\n  }\r\n}\r\n\r\nexport function getGravatarURL(opts: { params: string; mirror: string; emailHash: string }) {\r\n  return `${opts.mirror.replace(/\\/$/, '')}/${opts.emailHash}?${opts.params.replace(/^\\?/, '')}`\r\n}\r\n\r\nexport function sleep(ms: number) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\n/** 版本号比较（a < b :-1 | 0 | b < a :1） */\r\nexport function versionCompare(a: string, b: string) {\r\n  const pa = a.split('.')\r\n  const pb = b.split('.')\r\n  for (let i = 0; i < 3; i++) {\r\n    const na = Number(pa[i])\r\n    const nb = Number(pb[i])\r\n    if (na > nb) return 1\r\n    if (nb > na) return -1\r\n    if (!Number.isNaN(na) && Number.isNaN(nb)) return 1\r\n    if (Number.isNaN(na) && !Number.isNaN(nb)) return -1\r\n  }\r\n  return 0\r\n}\r\n\r\n/** 获取修正后的 UserAgent */\r\nexport async function getCorrectUserAgent() {\r\n  const uaRaw = navigator.userAgent\r\n  if (!(navigator as any).userAgentData || !(navigator as any).userAgentData.getHighEntropyValues) {\r\n    return uaRaw\r\n  }\r\n\r\n  // @link https://web.dev/migrate-to-ua-ch/\r\n  // @link https://web.dev/user-agent-client-hints/\r\n  const uaData = (navigator as any).userAgentData\r\n  let uaGot: any = null\r\n  try {\r\n    uaGot = await uaData.getHighEntropyValues(['platformVersion'])\r\n  } catch (err) {\r\n    console.error(err)\r\n    return uaRaw\r\n  }\r\n  const majorPlatformVersion = Number(uaGot.platformVersion.split('.')[0])\r\n\r\n  if (uaData.platform === 'Windows') {\r\n    if (majorPlatformVersion >= 13) {\r\n      // @link https://docs.microsoft.com/en-us/microsoft-edge/web-platform/how-to-detect-win11\r\n      // @date 2022-4-29\r\n      // Win 11 样本：\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36\"\r\n      return uaRaw.replace(/Windows NT 10.0/, 'Windows NT 11.0')\r\n    }\r\n  }\r\n  if (uaData.platform === 'macOS') {\r\n    if (majorPlatformVersion >= 11) {\r\n      // 11 => BigSur\r\n      // @date 2022-4-29\r\n      // (Intel Chip) macOS 12.3 样本：\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\"\r\n      // (Arm Chip) macOS 样本：\"Mozilla/5.0 (Macintosh; ARM Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.2 Safari/605.1.15\"\r\n      return uaRaw.replace(\r\n        /(Mac OS X \\d+_\\d+_\\d+|Mac OS X)/,\r\n        `Mac OS X ${uaGot.platformVersion.replace(/\\./g, '_')}`,\r\n      )\r\n    }\r\n  }\r\n\r\n  return uaRaw\r\n}\r\n\r\n/** 是否为完整的 URL */\r\nexport function isValidURL(urlRaw: string) {\r\n  // @link https://www.rfc-editor.org/rfc/rfc3986\r\n  let url: URL\r\n  try {\r\n    url = new URL(urlRaw)\r\n  } catch (_) {\r\n    return false\r\n  }\r\n  return url.protocol === 'http:' || url.protocol === 'https:'\r\n}\r\n\r\n/** 获取基于 conf.server 的 URL */\r\nexport function getURLBasedOnApi(opts: { base: string; path: string }) {\r\n  return getURLBasedOn(opts.base, opts.path)\r\n}\r\n\r\n/** 获取基于某个 baseURL 的 URL */\r\nexport function getURLBasedOn(baseURL: string, path: string) {\r\n  return `${baseURL.replace(/\\/$/, '')}/${path.replace(/^\\//, '')}`\r\n}\r\n","const en = {\r\n  /* Editor */\r\n  placeholder: 'Leave a comment',\r\n  noComment: 'No Comment',\r\n  send: 'Send',\r\n  signIn: 'Sign in',\r\n  signUp: 'Sign up',\r\n  save: 'Save',\r\n  nick: 'Nickname',\r\n  email: 'Email',\r\n  link: 'Website',\r\n  emoticon: 'Emoji',\r\n  preview: 'Preview',\r\n  uploadImage: 'Upload Image',\r\n  uploadFail: 'Upload Failed',\r\n  commentFail: 'Failed to comment',\r\n  restoredMsg: 'Content has been restored',\r\n  onlyAdminCanReply: 'Only admin can reply',\r\n  uploadLoginMsg: 'Please fill in your name and email to upload',\r\n\r\n  /* List */\r\n  counter: '{count} Comments',\r\n  sortLatest: 'Latest',\r\n  sortOldest: 'Oldest',\r\n  sortBest: 'Best',\r\n  sortAuthor: 'Author',\r\n  openComment: 'Open Comment',\r\n  closeComment: 'Close Comment',\r\n  listLoadFailMsg: 'Failed to load comments',\r\n  listRetry: 'Retry',\r\n  loadMore: 'Load More',\r\n\r\n  /* Comment */\r\n  admin: 'Admin',\r\n  reply: 'Reply',\r\n  voteUp: 'Up',\r\n  voteDown: 'Down',\r\n  voteFail: 'Vote Failed',\r\n  readMore: 'Read More',\r\n  actionConfirm: 'Confirm',\r\n  collapse: 'Collapse',\r\n  collapsed: 'Collapsed',\r\n  collapsedMsg: 'This comment has been collapsed',\r\n  expand: 'Expand',\r\n  approved: 'Approved',\r\n  pending: 'Pending',\r\n  pendingMsg: 'Pending, visible only to commenter.',\r\n  edit: 'Edit',\r\n  editCancel: 'Cancel Edit',\r\n  delete: 'Delete',\r\n  deleteConfirm: 'Confirm',\r\n  pin: 'Pin',\r\n  unpin: 'Unpin',\r\n\r\n  /* Time */\r\n  seconds: 'seconds ago',\r\n  minutes: 'minutes ago',\r\n  hours: 'hours ago',\r\n  days: 'days ago',\r\n  now: 'just now',\r\n\r\n  /* Checker */\r\n  adminCheck: 'Enter admin password:',\r\n  captchaCheck: 'Enter the CAPTCHA to continue:',\r\n  confirm: 'Confirm',\r\n  cancel: 'Cancel',\r\n\r\n  /* Sidebar */\r\n  msgCenter: 'Messages',\r\n  ctrlCenter: 'Admin',\r\n\r\n  /* Auth */\r\n  noAccountPrompt: \"Don't have an account?\",\r\n  haveAccountPrompt: 'Already have an account?',\r\n  forgetPassword: 'Forget Password',\r\n  resetPassword: 'Reset Password',\r\n  verificationCode: 'Verification Code',\r\n  verifySend: 'Verify',\r\n  verifyResend: 'Resend',\r\n  waitSeconds: 'Wait {seconds}s',\r\n  emailVerified: 'Email has been verified',\r\n  password: 'Password',\r\n  username: 'Username',\r\n  nextStep: 'Next Step',\r\n  skipNotVerify: 'Skip, do not verify',\r\n  logoutConfirm: 'Are you sure to logout?',\r\n  accountMergeNotice: 'Your email has multiple accounts with different id.',\r\n  accountMergeSelectOne: 'Please select one you want to merge all the data into it.',\r\n  accountMergeConfirm: 'All data will be merged into one account, the id is {id}.',\r\n  dismiss: 'Dismiss',\r\n  merge: 'Merge',\r\n\r\n  /* General */\r\n  frontend: 'Frontend',\r\n  backend: 'Backend',\r\n  loading: 'Loading',\r\n  loadFail: 'Load Failed',\r\n  editing: 'Editing',\r\n  editFail: 'Edit Failed',\r\n  deleting: 'Deleting',\r\n  deleteFail: 'Delete Failed',\r\n  reqGot: 'Request got',\r\n  reqAborted: 'Request timed out or terminated unexpectedly',\r\n  updateMsg: 'Please update Artalk {name} to get the best experience!',\r\n  currentVersion: 'Current Version',\r\n  ignore: 'Ignore',\r\n  open: 'Open',\r\n  openName: 'Open {name}',\r\n}\r\n\r\nexport type I18n = typeof en\r\nexport type I18nKeys = keyof I18n\r\n\r\nexport default en\r\n","import type { I18n } from '.'\r\n\r\nexport const GLOBAL_LOCALES_KEY = 'ArtalkI18n'\r\n\r\nexport function defineLocaleExternal(lang: string, locale: I18n, aliases?: string[]) {\r\n  if (!window[GLOBAL_LOCALES_KEY]) window[GLOBAL_LOCALES_KEY] = {}\r\n  window[GLOBAL_LOCALES_KEY][lang] = locale\r\n  if (aliases)\r\n    aliases.forEach((l) => {\r\n      window[GLOBAL_LOCALES_KEY][l] = locale\r\n    })\r\n  return locale\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport en, { I18n, I18nKeys } from './en'\r\nimport zhCN from './zh-CN'\r\nimport { GLOBAL_LOCALES_KEY } from './external'\r\n\r\nexport type * from './en'\r\n\r\n// @note the key of language is followed by `ISO 639`\r\n// https://en.wikipedia.org/wiki/ISO_639\r\n// https://datatracker.ietf.org/doc/html/rfc5646#section-2.1\r\nexport const internal = {\r\n  en,\r\n  'en-US': en,\r\n  'zh-CN': zhCN,\r\n}\r\n\r\n/**\r\n * find a locale object by language name\r\n */\r\nexport function findLocaleSet(lang: string): I18n {\r\n  // normalize a key of language to `ISO 639`\r\n  lang = lang.replace(\r\n    /^([a-zA-Z]+)(-[a-zA-Z]+)?$/,\r\n    (_, p1: string, p2: string) => p1.toLowerCase() + (p2 || '').toUpperCase(),\r\n  )\r\n\r\n  // internal finding\r\n  if (internal[lang]) {\r\n    return internal[lang]\r\n  }\r\n\r\n  // external finding\r\n  if (window[GLOBAL_LOCALES_KEY] && window[GLOBAL_LOCALES_KEY][lang]) {\r\n    return window[GLOBAL_LOCALES_KEY][lang]\r\n  }\r\n\r\n  // case when not found:\r\n  // use `en` by default\r\n  return internal.en\r\n}\r\n\r\n/**\r\n * System locale setting\r\n */\r\nlet LocaleConf: I18n | string = 'en'\r\nlet LocaleDict: I18n = findLocaleSet(LocaleConf) // en by default\r\n\r\n/**\r\n * Set system locale\r\n */\r\nexport function setLocale(locale: I18n | string) {\r\n  if (locale === LocaleConf) return\r\n  LocaleConf = locale\r\n  LocaleDict = typeof locale === 'string' ? findLocaleSet(locale) : locale\r\n}\r\n\r\n/**\r\n * Get an i18n message by key\r\n */\r\nexport function t(key: I18nKeys, args: { [key: string]: string } = {}) {\r\n  let str = LocaleDict?.[key] || key\r\n  str = str.replace(/\\{\\s*(\\w+?)\\s*\\}/g, (_, token) => args[token] || '')\r\n\r\n  return Utils.htmlEncode(str)\r\n}\r\n\r\nexport default t\r\n","import type { I18n } from '.'\r\n\r\nconst zhCN: I18n = {\r\n  /* Editor */\r\n  placeholder: '键入内容...',\r\n  noComment: '「此时无声胜有声」',\r\n  send: '发送',\r\n  signIn: '登录',\r\n  signUp: '注册',\r\n  save: '保存',\r\n  nick: '昵称',\r\n  email: '邮箱',\r\n  link: '网址',\r\n  emoticon: '表情',\r\n  preview: '预览',\r\n  uploadImage: '上传图片',\r\n  uploadFail: '上传失败',\r\n  commentFail: '评论失败',\r\n  restoredMsg: '内容已自动恢复',\r\n  onlyAdminCanReply: '仅管理员可评论',\r\n  uploadLoginMsg: '填入你的名字邮箱才能上传哦',\r\n\r\n  /* List */\r\n  counter: '{count} 条评论',\r\n  sortLatest: '最新',\r\n  sortOldest: '最早',\r\n  sortBest: '最热',\r\n  sortAuthor: '作者',\r\n  openComment: '打开评论',\r\n  closeComment: '关闭评论',\r\n  listLoadFailMsg: '无法获取评论列表数据',\r\n  listRetry: '点击重新获取',\r\n  loadMore: '加载更多',\r\n\r\n  /* Comment */\r\n  admin: '管理员',\r\n  reply: '回复',\r\n  voteUp: '赞同',\r\n  voteDown: '反对',\r\n  voteFail: '投票失败',\r\n  readMore: '阅读更多',\r\n  actionConfirm: '确认操作',\r\n  collapse: '折叠',\r\n  collapsed: '已折叠',\r\n  collapsedMsg: '该评论已被系统或管理员折叠',\r\n  expand: '展开',\r\n  approved: '已审',\r\n  pending: '待审',\r\n  pendingMsg: '审核中，仅本人可见。',\r\n  edit: '编辑',\r\n  editCancel: '取消编辑',\r\n  delete: '删除',\r\n  deleteConfirm: '确认删除',\r\n  pin: '置顶',\r\n  unpin: '取消置顶',\r\n\r\n  /* Time */\r\n  seconds: '秒前',\r\n  minutes: '分钟前',\r\n  hours: '小时前',\r\n  days: '天前',\r\n  now: '刚刚',\r\n\r\n  /* Checker */\r\n  adminCheck: '键入密码来验证管理员身份：',\r\n  captchaCheck: '键入验证码继续：',\r\n  confirm: '确认',\r\n  cancel: '取消',\r\n\r\n  /* Sidebar */\r\n  msgCenter: '通知中心',\r\n  ctrlCenter: '控制中心',\r\n\r\n  /* Auth */\r\n  noAccountPrompt: '没有账号？',\r\n  haveAccountPrompt: '已有账号？',\r\n  forgetPassword: '忘记密码',\r\n  resetPassword: '重置密码',\r\n  verificationCode: '验证码',\r\n  verifySend: '发送验证码',\r\n  verifyResend: '重新发送',\r\n  waitSeconds: '等待 {seconds}秒',\r\n  emailVerified: '邮箱已验证',\r\n  password: '密码',\r\n  username: '用户名',\r\n  nextStep: '下一步',\r\n  skipNotVerify: '跳过，不验证',\r\n  logoutConfirm: '确定要退出登录吗？',\r\n  accountMergeNotice: '您的电子邮件下有多个不同 ID 的账户。',\r\n  accountMergeSelectOne: '请选择将所有数据合并到其中的一个。',\r\n  accountMergeConfirm: '所有数据将合并到 ID 为 {id} 的账户中。',\r\n  dismiss: '忽略',\r\n  merge: '合并',\r\n\r\n  /* General */\r\n  frontend: '前端',\r\n  backend: '后端',\r\n  loading: '加载中',\r\n  loadFail: '加载失败',\r\n  editing: '修改中',\r\n  editFail: '修改失败',\r\n  deleting: '删除中',\r\n  deleteFail: '删除失败',\r\n  reqGot: '请求响应',\r\n  reqAborted: '请求超时或意外终止',\r\n  updateMsg: '请更新 Artalk {name} 以获得更好的体验！',\r\n  currentVersion: '当前版本',\r\n  ignore: '忽略',\r\n  open: '打开',\r\n  openName: '打开{name}',\r\n}\r\n\r\nexport default zhCN\r\n","export type EventHandler<T> = (payload: T) => void\r\nexport interface Event<PayloadMap, K extends keyof PayloadMap = keyof PayloadMap>\r\n  extends EventOptions {\r\n  name: K\r\n  handler: EventHandler<PayloadMap[K]>\r\n}\r\nexport interface EventOptions {\r\n  once?: boolean\r\n}\r\n\r\nexport interface EventManagerFuncs<PayloadMap> {\r\n  on<K extends keyof PayloadMap>(\r\n    name: K,\r\n    handler: EventHandler<PayloadMap[K]>,\r\n    opts?: EventOptions,\r\n  ): void\r\n  off<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>): void\r\n  trigger<K extends keyof PayloadMap>(name: K, payload?: PayloadMap[K]): void\r\n}\r\n\r\nexport default class EventManager<PayloadMap> implements EventManagerFuncs<PayloadMap> {\r\n  private events: Event<PayloadMap>[] = []\r\n\r\n  /**\r\n   * Add an event listener for a specific event name\r\n   */\r\n  public on<K extends keyof PayloadMap>(\r\n    name: K,\r\n    handler: EventHandler<PayloadMap[K]>,\r\n    opts: EventOptions = {},\r\n  ) {\r\n    this.events.push({\r\n      name,\r\n      handler: handler as EventHandler<PayloadMap[keyof PayloadMap]>,\r\n      ...opts,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener for a specific event name and handler\r\n   */\r\n  public off<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>) {\r\n    if (!handler) return // not allow remove all events with same name\r\n    this.events = this.events.filter((evt) => !(evt.name === name && evt.handler === handler))\r\n  }\r\n\r\n  /**\r\n   * Trigger an event with an optional payload\r\n   */\r\n  public trigger<K extends keyof PayloadMap>(name: K, payload?: PayloadMap[K]) {\r\n    this.events\r\n      .slice(0) // make a copy, in case listeners are removed while iterating\r\n      .filter((evt) => evt.name === name && typeof evt.handler === 'function')\r\n      .forEach((evt) => {\r\n        if (evt.once) this.off(name, evt.handler)\r\n        evt.handler(payload!)\r\n      })\r\n  }\r\n}\r\n","import type { ArtalkConfig } from '@/types'\r\n\r\nconst defaults: ArtalkConfig = {\r\n  el: '',\r\n  pageKey: '',\r\n  pageTitle: '',\r\n  server: '',\r\n  site: '',\r\n\r\n  placeholder: '',\r\n  noComment: '',\r\n  sendBtn: '',\r\n  darkMode: false,\r\n  editorTravel: true,\r\n\r\n  flatMode: 'auto',\r\n  nestMax: 2,\r\n  nestSort: 'DATE_ASC',\r\n\r\n  emoticons: 'https://cdn.jsdelivr.net/gh/ArtalkJS/Emoticons/grps/default.json',\r\n\r\n  vote: true,\r\n  voteDown: false,\r\n  uaBadge: true,\r\n  listSort: true,\r\n  preview: true,\r\n  countEl: '.artalk-comment-count',\r\n  pvEl: '.artalk-pv-count',\r\n  statPageKeyAttr: 'data-page-key',\r\n\r\n  gravatar: {\r\n    mirror: 'https://www.gravatar.com/avatar/',\r\n    params: 'sha256=1&d=mp&s=240',\r\n  },\r\n\r\n  pagination: {\r\n    pageSize: 20,\r\n    readMore: true,\r\n    autoLoad: true,\r\n  },\r\n\r\n  heightLimit: {\r\n    content: 300,\r\n    children: 400,\r\n    scrollable: false,\r\n  },\r\n\r\n  imgUpload: true,\r\n  reqTimeout: 15000,\r\n  versionCheck: true,\r\n  useBackendConf: true,\r\n\r\n  locale: 'en',\r\n}\r\n\r\nif (ARTALK_LITE) {\r\n  defaults.vote = false\r\n  defaults.uaBadge = false\r\n  defaults.emoticons = false\r\n  defaults.preview = false\r\n}\r\n\r\nexport default defaults\r\n","import type { ApiOptions } from './api/options'\r\nimport { mergeDeep } from './lib/merge-deep'\r\nimport { createApiHandlers } from './api'\r\nimport Defaults from './defaults'\r\nimport type { ArtalkConfig, ContextApi } from '@/types'\r\n\r\n/**\r\n * Handle the custom config which is provided by the user\r\n *\r\n * @param customConf - The custom config object which is provided by the user\r\n * @param full - If `full` is `true`, the return value will be the complete config for Artalk instance creation\r\n * @returns The config for Artalk instance creation\r\n */\r\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full: true): ArtalkConfig\r\nexport function handelCustomConf(\r\n  customConf: Partial<ArtalkConfig>,\r\n  full?: false,\r\n): Partial<ArtalkConfig>\r\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full = false) {\r\n  // 合并默认配置\r\n  const conf: Partial<ArtalkConfig> = full ? mergeDeep(Defaults, customConf) : customConf\r\n\r\n  // 绑定元素\r\n  if (conf.el && typeof conf.el === 'string') {\r\n    try {\r\n      const findEl = document.querySelector<HTMLElement>(conf.el)\r\n      if (!findEl) throw Error(`Target element \"${conf.el}\" was not found.`)\r\n      conf.el = findEl\r\n    } catch (e) {\r\n      console.error(e)\r\n      throw new Error('Please check your Artalk `el` config.')\r\n    }\r\n  }\r\n\r\n  // 默认 pageKey\r\n  if (conf.pageKey === '') conf.pageKey = `${window.location.pathname}` // @link http://bl.ocks.org/abernier/3070589\r\n\r\n  // 默认 pageTitle\r\n  if (conf.pageTitle === '') conf.pageTitle = `${document.title}`\r\n\r\n  // 服务器配置\r\n  if (conf.server) conf.server = conf.server.replace(/\\/$/, '').replace(/\\/api\\/?$/, '')\r\n\r\n  // 自适应语言\r\n  if (conf.locale === 'auto') conf.locale = navigator.language\r\n\r\n  // 自动判断启用平铺模式\r\n  if (conf.flatMode === 'auto') conf.flatMode = window.matchMedia('(max-width: 768px)').matches\r\n\r\n  // flatMode\r\n  if (typeof conf.nestMax === 'number' && Number(conf.nestMax) <= 1) conf.flatMode = true\r\n\r\n  return conf\r\n}\r\n\r\n/**\r\n * Handle the config which is provided by the server\r\n *\r\n * @param conf - The Server response config for control the frontend of Artalk remotely\r\n * @returns The config for Artalk instance creation\r\n */\r\nexport function handleConfFormServer(conf: Partial<ArtalkConfig>) {\r\n  const ExcludedKeys: (keyof ArtalkConfig)[] = [\r\n    'el',\r\n    'pageKey',\r\n    'pageTitle',\r\n    'server',\r\n    'site',\r\n    'pvEl',\r\n    'countEl',\r\n    'statPageKeyAttr',\r\n  ]\r\n  Object.keys(conf).forEach((k) => {\r\n    if (ExcludedKeys.includes(k as any)) delete conf[k]\r\n    if (k === 'darkMode' && conf[k] !== 'auto') delete conf[k]\r\n  })\r\n\r\n  // Patch: `emoticons` config string to json\r\n  if (conf.emoticons && typeof conf.emoticons === 'string') {\r\n    conf.emoticons = conf.emoticons.trim()\r\n    if (conf.emoticons.startsWith('[') || conf.emoticons.startsWith('{')) {\r\n      conf.emoticons = JSON.parse(conf.emoticons) // parse json\r\n    } else if (conf.emoticons === 'false') {\r\n      conf.emoticons = false\r\n    }\r\n  }\r\n\r\n  return conf\r\n}\r\n\r\n/**\r\n * Convert Artalk Config to ApiOptions for Api client\r\n *\r\n * @param conf - Artalk config\r\n * @param ctx - If `ctx` not provided, `checkAdmin` and `checkCaptcha` will be disabled\r\n * @returns ApiOptions for Api client instance creation\r\n */\r\nexport function convertApiOptions(conf: Partial<ArtalkConfig>, ctx?: ContextApi): ApiOptions {\r\n  return {\r\n    baseURL: `${conf.server}/api/v2`,\r\n    siteName: conf.site || '',\r\n    pageKey: conf.pageKey || '',\r\n    pageTitle: conf.pageTitle || '',\r\n    timeout: conf.reqTimeout,\r\n    getApiToken: () => ctx?.get('user').getData().token,\r\n    userInfo: ctx?.get('user').checkHasBasicUserInfo()\r\n      ? {\r\n          name: ctx?.get('user').getData().nick,\r\n          email: ctx?.get('user').getData().email,\r\n        }\r\n      : undefined,\r\n    handlers: ctx?.getApiHandlers(),\r\n  }\r\n}\r\n\r\nexport function createNewApiHandlers(ctx: ContextApi) {\r\n  const h = createApiHandlers()\r\n  h.add('need_captcha', (res) => ctx.checkCaptcha(res))\r\n  h.add('need_login', () => ctx.checkAdmin({}))\r\n\r\n  return h\r\n}\r\n","import type { ArtalkConfig, ContextApi } from '@/types'\r\n\r\nexport function watchConf<T extends (keyof ArtalkConfig)[]>(\r\n  ctx: ContextApi,\r\n  keys: T,\r\n  effect: (conf: Pick<ArtalkConfig, T[number]>) => void,\r\n): void {\r\n  const deepEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b)\r\n  const val = () => {\r\n    const conf = ctx.getConf()\r\n    const res: any = {}\r\n    keys.forEach((key) => {\r\n      res[key] = conf[key]\r\n    })\r\n    return res\r\n  }\r\n  let lastVal: any = null\r\n  const handler = () => {\r\n    const newVal = val()\r\n    const isDiff = lastVal == null || !deepEqual(lastVal, newVal)\r\n    // only trigger when specific keys changed\r\n    if (isDiff) {\r\n      lastVal = newVal\r\n      effect(newVal)\r\n    }\r\n  }\r\n  ctx.on('mounted', handler)\r\n  ctx.on('updated', handler)\r\n}\r\n","import type { TInjectedServices } from './service'\r\nimport { Api, ApiHandlers } from './api'\r\n\r\nimport * as marked from './lib/marked'\r\nimport { mergeDeep } from './lib/merge-deep'\r\nimport { CheckerCaptchaPayload, CheckerPayload } from './components/checker'\r\n\r\nimport { DataManager } from './data'\r\nimport * as I18n from './i18n'\r\n\r\nimport EventManager from './lib/event-manager'\r\nimport { convertApiOptions, createNewApiHandlers, handelCustomConf } from './config'\r\nimport { watchConf } from './lib/watch-conf'\r\n\r\nimport type {\r\n  ArtalkConfig,\r\n  CommentData,\r\n  ListFetchParams,\r\n  ContextApi,\r\n  EventPayloadMap,\r\n  SidebarShowPayload,\r\n} from '@/types'\r\n\r\n// Auto dependency injection\r\ninterface Context extends TInjectedServices {}\r\n\r\n/**\r\n * Artalk Context\r\n */\r\nclass Context implements ContextApi {\r\n  /* 运行参数 */\r\n  conf: ArtalkConfig\r\n  data: DataManager\r\n  $root: HTMLElement\r\n\r\n  /* Event Manager */\r\n  private events = new EventManager<EventPayloadMap>()\r\n  private mounted = false\r\n\r\n  constructor(conf: ArtalkConfig) {\r\n    this.conf = conf\r\n\r\n    this.$root = conf.el as HTMLElement\r\n    this.$root.classList.add('artalk')\r\n    this.$root.innerHTML = ''\r\n\r\n    this.data = new DataManager(this.events)\r\n\r\n    this.on('mounted', () => {\r\n      this.mounted = true\r\n    })\r\n  }\r\n\r\n  inject(depName: string, obj: any) {\r\n    this[depName] = obj\r\n  }\r\n\r\n  get(depName: string) {\r\n    return this[depName]\r\n  }\r\n\r\n  getApi() {\r\n    return new Api(convertApiOptions(this.conf, this))\r\n  }\r\n\r\n  private apiHandlers = <ApiHandlers | null>null\r\n  getApiHandlers() {\r\n    if (!this.apiHandlers) this.apiHandlers = createNewApiHandlers(this)\r\n    return this.apiHandlers\r\n  }\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n  replyComment(commentData: CommentData, $comment: HTMLElement): void {\r\n    this.editor.setReply(commentData, $comment)\r\n  }\r\n\r\n  editComment(commentData: CommentData, $comment: HTMLElement): void {\r\n    this.editor.setEditComment(commentData, $comment)\r\n  }\r\n\r\n  fetch(params: Partial<ListFetchParams>): void {\r\n    this.data.fetchComments(params)\r\n  }\r\n\r\n  reload(): void {\r\n    this.data.fetchComments({ offset: 0 })\r\n  }\r\n\r\n  /* List */\r\n  listGotoFirst(): void {\r\n    this.events.trigger('list-goto-first')\r\n  }\r\n\r\n  getCommentNodes() {\r\n    return this.list.getCommentNodes()\r\n  }\r\n\r\n  getComments() {\r\n    return this.data.getComments()\r\n  }\r\n\r\n  getCommentList = this.getCommentNodes\r\n  getCommentDataList = this.getComments\r\n\r\n  /* Editor */\r\n  editorShowLoading(): void {\r\n    this.editor.showLoading()\r\n  }\r\n\r\n  editorHideLoading(): void {\r\n    this.editor.hideLoading()\r\n  }\r\n\r\n  editorShowNotify(msg, type): void {\r\n    this.editor.showNotify(msg, type)\r\n  }\r\n\r\n  editorResetState(): void {\r\n    this.editor.resetState()\r\n  }\r\n\r\n  /* Sidebar */\r\n  showSidebar(payload?: SidebarShowPayload): void {\r\n    this.sidebarLayer.show(payload)\r\n  }\r\n\r\n  hideSidebar(): void {\r\n    this.sidebarLayer.hide()\r\n  }\r\n\r\n  /* Checker */\r\n  checkAdmin(payload: CheckerPayload): Promise<void> {\r\n    return this.checkerLauncher.checkAdmin(payload)\r\n  }\r\n\r\n  checkCaptcha(payload: CheckerCaptchaPayload): Promise<void> {\r\n    return this.checkerLauncher.checkCaptcha(payload)\r\n  }\r\n\r\n  /* Events */\r\n  on(name: any, handler: any) {\r\n    this.events.on(name, handler)\r\n  }\r\n\r\n  off(name: any, handler: any) {\r\n    this.events.off(name, handler)\r\n  }\r\n\r\n  trigger(name: any, payload?: any) {\r\n    this.events.trigger(name, payload)\r\n  }\r\n\r\n  /* i18n */\r\n  $t(key: I18n.I18nKeys, args: { [key: string]: string } = {}): string {\r\n    return I18n.t(key, args)\r\n  }\r\n\r\n  setDarkMode(darkMode: boolean | 'auto'): void {\r\n    this.updateConf({ darkMode })\r\n  }\r\n\r\n  updateConf(nConf: Partial<ArtalkConfig>): void {\r\n    this.conf = mergeDeep(this.conf, handelCustomConf(nConf, false))\r\n    this.mounted && this.events.trigger('updated', this.conf)\r\n  }\r\n\r\n  getConf(): ArtalkConfig {\r\n    return this.conf\r\n  }\r\n\r\n  getEl(): HTMLElement {\r\n    return this.$root\r\n  }\r\n\r\n  getMarked() {\r\n    return marked.getInstance()\r\n  }\r\n\r\n  watchConf<T extends (keyof ArtalkConfig)[]>(\r\n    keys: T,\r\n    effect: (conf: Pick<ArtalkConfig, T[number]>) => void,\r\n  ): void {\r\n    watchConf(this, keys, effect)\r\n  }\r\n}\r\n\r\nexport default Context\r\n","export interface ApiHandlerPayload {\r\n  need_captcha: { img_data?: string; iframe?: string }\r\n  need_login: object\r\n  need_auth_login: object\r\n}\r\n\r\ntype PayloadKey = keyof ApiHandlerPayload\r\n\r\nexport interface ApiHandler<T extends PayloadKey = PayloadKey> {\r\n  action: T\r\n  handler: (data: ApiHandlerPayload[T]) => Promise<void>\r\n}\r\n\r\nexport interface ApiHandlers {\r\n  add: <T extends PayloadKey>(\r\n    action: T,\r\n    handler: (data: ApiHandlerPayload[T]) => Promise<void>,\r\n  ) => void\r\n  get: () => ApiHandler[]\r\n}\r\n\r\nexport function createApiHandlers(): ApiHandlers {\r\n  const handlers: ApiHandler[] = []\r\n  return {\r\n    add: (action, handler) => {\r\n      handlers.push({ action, handler })\r\n    },\r\n    get: () => handlers,\r\n  }\r\n}\r\n","import * as Utils from './utils'\r\nimport type { NotifyLevel } from '@/types'\r\n\r\n/** 显示加载 */\r\nexport function showLoading(parentElem: HTMLElement, conf?: { transparentBg?: boolean }) {\r\n  // Use :scope https://developer.mozilla.org/en-US/docs/Web/CSS/:scope\r\n  let $loading = parentElem.querySelector<HTMLElement>(':scope > .atk-loading')\r\n  if (!$loading) {\r\n    $loading = Utils.createElement(\r\n      `<div class=\"atk-loading\" style=\"display: none;\">\r\n      <div class=\"atk-loading-spinner\">\r\n        <svg viewBox=\"25 25 50 50\"><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle></svg>\r\n      </div>\r\n    </div>`,\r\n    )\r\n    if (conf?.transparentBg) $loading.style.background = 'transparent'\r\n    parentElem.appendChild($loading)\r\n  }\r\n  $loading.style.display = ''\r\n\r\n  // spinner 延迟显示，若加载等待时间太短，没必要显示（闪一下即可）\r\n  const $spinner = $loading.querySelector<HTMLElement>('.atk-loading-spinner')\r\n  if ($spinner) {\r\n    $spinner.style.display = 'none'\r\n    window.setTimeout(() => {\r\n      if ($spinner.isConnected) $spinner.style.display = ''\r\n    }, 500)\r\n  }\r\n}\r\n\r\n/** 隐藏加载 */\r\nexport function hideLoading(parentElem: HTMLElement) {\r\n  const $loading = parentElem.querySelector<HTMLElement>(':scope > .atk-loading')\r\n  if ($loading) $loading.style.display = 'none'\r\n}\r\n\r\n/** 元素加载动画 */\r\nexport function setLoading(val: boolean, parentElem: HTMLElement) {\r\n  if (val) showLoading(parentElem)\r\n  else hideLoading(parentElem)\r\n}\r\n\r\n/** 元素是否用户可见 */\r\nexport function isVisible(el: HTMLElement, viewport: HTMLElement = document.documentElement) {\r\n  const viewportHeight = viewport.clientHeight\r\n\r\n  const docViewTop = viewport.scrollTop\r\n  const docViewBottom = docViewTop + viewportHeight\r\n\r\n  const rect = el.getBoundingClientRect()\r\n  const elemTop = rect.top + docViewTop\r\n  const elemBottom = elemTop + rect.height\r\n\r\n  return elemBottom <= docViewBottom //&& (elemTop >= docViewTop) 注释因为假如 el 比 viewport 还高就会失效\r\n}\r\n\r\n/** 滚动到元素中心 */\r\nexport function scrollIntoView(\r\n  elem: HTMLElement,\r\n  enableAnim: boolean = true,\r\n  relativeTo?: HTMLElement,\r\n) {\r\n  let top: number\r\n\r\n  if (relativeTo) {\r\n    const containerRect = relativeTo.getBoundingClientRect()\r\n    const elementRect = elem.getBoundingClientRect()\r\n    top =\r\n      elementRect.top -\r\n      containerRect.top +\r\n      relativeTo.scrollTop -\r\n      relativeTo.clientHeight / 2 +\r\n      elem.clientHeight / 2\r\n  } else {\r\n    const rect = elem.getBoundingClientRect()\r\n    const elemTop = rect.top + window.scrollY\r\n    top = elemTop - (window.innerHeight / 2 - rect.height / 2)\r\n  }\r\n\r\n  const scrollOptions: ScrollToOptions = {\r\n    top,\r\n    left: 0,\r\n    // behavior: enableAnim ? 'smooth' : 'instant',\r\n    behavior: 'instant',\r\n  }\r\n\r\n  if (relativeTo) relativeTo.scroll(scrollOptions)\r\n  else window.scroll(scrollOptions)\r\n}\r\n\r\n/** 显示消息 */\r\nexport function showNotify(wrapElem: HTMLElement, msg: string, type: NotifyLevel) {\r\n  const colors = { s: '#57d59f', e: '#ff6f6c', w: '#ffc721', i: '#2ebcfc' }\r\n  const timeout = 3000 // 持续显示时间 ms\r\n\r\n  const notifyElem = Utils.createElement(\r\n    `<div class=\"atk-notify atk-fade-in\" style=\"background-color: ${colors[type]}\"><span class=\"atk-notify-content\"></span></div>`,\r\n  )\r\n  const notifyContentEl = notifyElem.querySelector<HTMLElement>('.atk-notify-content')!\r\n  notifyContentEl.innerHTML = Utils.htmlEncode(msg).replace('\\n', '<br/>')\r\n\r\n  wrapElem.appendChild(notifyElem)\r\n\r\n  const notifyRemove = () => {\r\n    notifyElem.classList.add('atk-fade-out')\r\n    setTimeout(() => {\r\n      notifyElem.remove()\r\n    }, 200)\r\n  }\r\n\r\n  let timeoutFn: number\r\n  if (timeout > 0) {\r\n    timeoutFn = window.setTimeout(() => {\r\n      notifyRemove()\r\n    }, timeout)\r\n  }\r\n\r\n  notifyElem.addEventListener('click', () => {\r\n    notifyRemove()\r\n    window.clearTimeout(timeoutFn)\r\n  })\r\n}\r\n\r\n/** fade 动画 */\r\nexport function playFadeAnim(elem: HTMLElement, after?: () => void, type: 'in' | 'out' = 'in') {\r\n  elem.classList.add(`atk-fade-${type}`)\r\n  // 动画结束清除 class\r\n  const onAnimEnded = () => {\r\n    elem.classList.remove(`atk-fade-${type}`)\r\n    elem.removeEventListener('animationend', onAnimEnded)\r\n    if (after) after()\r\n  }\r\n  elem.addEventListener('animationend', onAnimEnded)\r\n}\r\n\r\n/** 渐入动画 */\r\nexport function playFadeInAnim(elem: HTMLElement, after?: () => void) {\r\n  playFadeAnim(elem, after, 'in')\r\n}\r\n\r\n/** 渐出动画 */\r\nexport function playFadeOutAnim(elem: HTMLElement, after?: () => void) {\r\n  playFadeAnim(elem, after, 'out')\r\n}\r\n\r\n/** 设置全局错误 */\r\nexport function setError(\r\n  parentElem: HTMLElement,\r\n  html: string | HTMLElement | null,\r\n  title: string = '<span class=\"atk-error-title\">Artalk Error</span>',\r\n) {\r\n  let elem = parentElem.querySelector<HTMLElement>('.atk-error-layer')\r\n  if (html === null) {\r\n    if (elem !== null) elem.remove()\r\n    return\r\n  }\r\n  if (!elem) {\r\n    elem = Utils.createElement(\r\n      `<div class=\"atk-error-layer\">${title}<span class=\"atk-error-text\"></span></div>`,\r\n    )\r\n    parentElem.appendChild(elem)\r\n  }\r\n\r\n  const errorTextEl = elem.querySelector<HTMLElement>('.atk-error-text')!\r\n  errorTextEl.innerHTML = ''\r\n  if (html === null) return\r\n\r\n  if (html instanceof HTMLElement) {\r\n    errorTextEl.appendChild(html)\r\n  } else {\r\n    errorTextEl.innerText = html\r\n  }\r\n}\r\n\r\nexport function getScrollBarWidth() {\r\n  const inner = document.createElement('p')\r\n  inner.style.width = '100%'\r\n  inner.style.height = '200px'\r\n\r\n  const outer = document.createElement('div')\r\n  outer.style.position = 'absolute'\r\n  outer.style.top = '0px'\r\n  outer.style.left = '0px'\r\n  outer.style.visibility = 'hidden'\r\n  outer.style.width = '200px'\r\n  outer.style.height = '150px'\r\n  outer.style.overflow = 'hidden'\r\n  outer.appendChild(inner)\r\n\r\n  document.body.appendChild(outer)\r\n  const w1 = inner.offsetWidth\r\n  outer.style.overflow = 'scroll'\r\n  let w2 = inner.offsetWidth\r\n  if (w1 === w2) w2 = outer.clientWidth\r\n\r\n  document.body.removeChild(outer)\r\n\r\n  return w1 - w2\r\n}\r\n","import type { CheckerCtx } from '.'\r\nimport $t from '@/i18n'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\n\r\n/** 图片验证码 */\r\nexport function imgBody(checker: CheckerCtx) {\r\n  // 图片验证方式\r\n  const elem = Utils.createElement(\r\n    `<span><img class=\"atk-captcha-img\" src=\"${checker.get('img_data') || ''}\">${$t('captchaCheck')}</span>`,\r\n  )\r\n\r\n  // 刷新验证码\r\n  elem.querySelector<HTMLElement>('.atk-captcha-img')!.onclick = () => {\r\n    const imgEl = elem.querySelector('.atk-captcha-img')\r\n    checker\r\n      .getApi()\r\n      .captcha.getCaptcha()\r\n      .then((res) => {\r\n        imgEl!.setAttribute('src', res.data.img_data)\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to get captcha image ', err)\r\n      })\r\n  }\r\n  return elem\r\n}\r\n\r\n/** iframe 形式的通用验证服务 */\r\nexport function iframeBody(checker: CheckerCtx) {\r\n  const $iframeWrap = Utils.createElement(`<div class=\"atk-checker-iframe-wrap\"></div>`)\r\n  const $iframe = Utils.createElement<HTMLIFrameElement>(\r\n    `<iframe class=\"atk-fade-in\" referrerpolicy=\"strict-origin-when-cross-origin\"></iframe>`,\r\n  )\r\n  $iframe.style.display = 'none'\r\n  Ui.showLoading($iframeWrap, { transparentBg: true })\r\n  $iframe.src = checker.getOpts().getCaptchaIframeURL()\r\n  $iframe.onload = () => {\r\n    $iframe.style.display = ''\r\n    Ui.hideLoading($iframeWrap)\r\n  }\r\n  $iframeWrap.append($iframe)\r\n\r\n  const $closeBtn = Utils.createElement(\r\n    `<div class=\"atk-close-btn\"><i class=\"atk-icon atk-icon-close\"></i></div>`,\r\n  )\r\n  $iframeWrap.append($closeBtn)\r\n\r\n  checker.hideInteractInput()\r\n\r\n  // 轮询状态\r\n  let stop = false // 打断\r\n  const sleep = (ms: number) =>\r\n    new Promise((resolve) => {\r\n      window.setTimeout(() => {\r\n        resolve(null)\r\n      }, ms)\r\n    })\r\n  ;(async function queryStatus() {\r\n    await sleep(1000)\r\n    if (stop) return\r\n    let isPass = false\r\n    try {\r\n      const resp = await checker.getApi().captcha.getCaptchaStatus()\r\n      isPass = resp.data.is_pass\r\n    } catch {\r\n      isPass = false\r\n    }\r\n    if (isPass) {\r\n      checker.triggerSuccess()\r\n    } else {\r\n      queryStatus()\r\n    }\r\n  })()\r\n\r\n  $closeBtn.onclick = () => {\r\n    stop = true\r\n    checker.cancel()\r\n  }\r\n\r\n  return $iframeWrap\r\n}\r\n","import * as render from './captcha-renders'\r\nimport type { Checker } from '.'\r\n\r\nconst CaptchaChecker: Checker = {\r\n  request(checker, inputVal) {\r\n    return checker.getApi().captcha.verifyCaptcha({\r\n      value: inputVal,\r\n    })\r\n  },\r\n\r\n  body(checker) {\r\n    if (checker.get('iframe')) return render.iframeBody(checker)\r\n    return render.imgBody(checker)\r\n  },\r\n\r\n  onSuccess(checker, data, inputVal, formEl) {\r\n    checker.set('val', inputVal)\r\n  },\r\n\r\n  onError(checker, err, inputVal, formEl) {\r\n    formEl.querySelector<HTMLElement>('.atk-captcha-img')!.click() // 刷新验证码\r\n    formEl.querySelector<HTMLInputElement>('input[type=\"text\"]')!.value = '' // 清空输入框输入\r\n  },\r\n}\r\n\r\nexport default CaptchaChecker\r\n","import type { Checker } from '.'\r\nimport $t from '@/i18n'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nconst AdminChecker: Checker<{ token: string }> = {\r\n  inputType: 'password',\r\n\r\n  async request(checker, inputVal) {\r\n    return (\r\n      await checker.getApi().user.login({\r\n        name: checker.getUser().getData().nick,\r\n        email: checker.getUser().getData().email,\r\n        password: inputVal,\r\n      })\r\n    ).data\r\n  },\r\n\r\n  body(checker) {\r\n    return Utils.createElement(`<span>${$t('adminCheck')}</span>`)\r\n  },\r\n\r\n  onSuccess(checker, res, inputVal, formEl) {\r\n    checker.getUser().update({\r\n      isAdmin: true,\r\n      token: res.token,\r\n    })\r\n    checker.getOpts().onReload()\r\n  },\r\n\r\n  onError(checker, err, inputVal, formEl) {},\r\n}\r\n\r\nexport default AdminChecker\r\n","import * as Utils from '../lib/utils'\r\nimport $t from '@/i18n'\r\n\r\ntype BtnClickHandler = (btnEl: HTMLElement, dialog: Dialog) => boolean | void\r\n\r\n/**\r\n * 对话框\r\n */\r\nexport default class Dialog {\r\n  public $el: HTMLElement\r\n  public $content: HTMLElement\r\n  public $actions: HTMLElement\r\n\r\n  constructor(contentEl: HTMLElement) {\r\n    this.$el = Utils.createElement(\r\n      `<div class=\"atk-layer-dialog-wrap\">\r\n        <div class=\"atk-layer-dialog\">\r\n          <div class=\"atk-layer-dialog-content\"></div>\r\n          <div class=\"atk-layer-dialog-actions\"></div>\r\n        </div>\r\n      </div>`,\r\n    )\r\n\r\n    // 按钮\r\n    this.$actions = this.$el.querySelector<HTMLElement>('.atk-layer-dialog-actions')!\r\n\r\n    // 内容\r\n    this.$content = this.$el.querySelector('.atk-layer-dialog-content')!\r\n    this.$content.appendChild(contentEl)\r\n  }\r\n\r\n  /** 按钮 · 确定 */\r\n  public setYes(handler: BtnClickHandler) {\r\n    const btn = Utils.createElement<HTMLButtonElement>(\r\n      `<button data-action=\"confirm\">${$t('confirm')}</button>`,\r\n    )\r\n    btn.onclick = this.onBtnClick(handler)\r\n    this.$actions.appendChild(btn)\r\n\r\n    return this\r\n  }\r\n\r\n  /** 按钮 · 取消 */\r\n  public setNo(handler: BtnClickHandler) {\r\n    const btn = Utils.createElement<HTMLButtonElement>(\r\n      `<button data-action=\"cancel\">${$t('cancel')}</button>`,\r\n    )\r\n    btn.onclick = this.onBtnClick(handler)\r\n    this.$actions.appendChild(btn)\r\n\r\n    return this\r\n  }\r\n\r\n  private onBtnClick(handler: BtnClickHandler) {\r\n    return (evt: Event) => {\r\n      const re = handler(evt.currentTarget as HTMLElement, this)\r\n      if (re === undefined || re === true) {\r\n        this.$el.remove()\r\n      }\r\n    }\r\n  }\r\n}\r\n","import CaptchaChecker from './captcha'\r\nimport AdminChecker from './admin'\r\nimport type { Api } from '@/api'\r\nimport Dialog from '@/components/dialog'\r\nimport $t from '@/i18n'\r\nimport type { ContextApi } from '@/types'\r\nimport type User from '@/lib/user'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport interface CheckerCaptchaPayload extends CheckerPayload {\r\n  img_data?: string\r\n  iframe?: string\r\n}\r\n\r\nexport interface CheckerPayload {\r\n  onSuccess?: () => void\r\n  onMount?: (dialogEl: HTMLElement) => void\r\n  onCancel?: () => void\r\n}\r\n\r\nexport interface CheckerLauncherOptions {\r\n  getCtx: () => ContextApi\r\n  getApi: () => Api\r\n  getCaptchaIframeURL: () => string\r\n  onReload: () => void\r\n}\r\n\r\nfunction wrapPromise<P extends CheckerPayload = CheckerPayload>(fn: (p: P) => void) {\r\n  return (payload: P) =>\r\n    new Promise<void>((resolve, reject) => {\r\n      const cancelFn = payload.onCancel\r\n      payload.onCancel = () => {\r\n        cancelFn && cancelFn()\r\n        reject(new Error('user canceled the checker'))\r\n      }\r\n      const successFn = payload.onSuccess\r\n      payload.onSuccess = () => {\r\n        successFn && successFn()\r\n        resolve()\r\n      }\r\n      fn(payload)\r\n    })\r\n}\r\n\r\n/**\r\n * Checker 发射台\r\n */\r\nexport default class CheckerLauncher {\r\n  constructor(private opts: CheckerLauncherOptions) {}\r\n\r\n  public checkCaptcha: (payload: CheckerCaptchaPayload) => Promise<void> = wrapPromise((p) => {\r\n    this.fire(CaptchaChecker, p, (ctx) => {\r\n      ctx.set('img_data', p.img_data)\r\n      ctx.set('iframe', p.iframe)\r\n    })\r\n  })\r\n\r\n  public checkAdmin: (payload: CheckerPayload) => Promise<void> = wrapPromise((p) => {\r\n    this.fire(AdminChecker, p)\r\n  })\r\n\r\n  public fire(checker: Checker, payload: CheckerPayload, postFire?: (c: CheckerCtx) => void) {\r\n    // 显示层\r\n    const layer = this.opts.getCtx().get('layerManager').create(`checker-${new Date().getTime()}`)\r\n    layer.show()\r\n\r\n    const close = () => {\r\n      layer.destroy()\r\n    }\r\n\r\n    // 构建 Checker 的上下文\r\n    const checkerStore: CheckerStore = {}\r\n    let hideInteractInput = false\r\n    const checkerCtx: CheckerCtx = {\r\n      set: (key, val) => {\r\n        checkerStore[key] = val\r\n      },\r\n      get: (key) => checkerStore[key],\r\n      getOpts: () => this.opts,\r\n      getUser: () => this.opts.getCtx().get('user'),\r\n      getApi: () => this.opts.getApi(),\r\n      hideInteractInput: () => {\r\n        hideInteractInput = true\r\n      },\r\n      triggerSuccess: () => {\r\n        close()\r\n        if (checker.onSuccess) checker.onSuccess(checkerCtx, '', '', formEl)\r\n        if (payload.onSuccess) payload.onSuccess()\r\n      },\r\n      cancel: () => {\r\n        close()\r\n        if (payload.onCancel) payload.onCancel()\r\n      },\r\n    }\r\n\r\n    if (postFire) postFire(checkerCtx)\r\n\r\n    // 创建表单\r\n    const formEl = Utils.createElement()\r\n    formEl.appendChild(checker.body(checkerCtx))\r\n\r\n    // 输入框\r\n    const $input = Utils.createElement<HTMLInputElement>(\r\n      `<input id=\"check\" type=\"${checker.inputType || 'text'}\" autocomplete=\"off\" required placeholder=\"\">`,\r\n    )\r\n    formEl.appendChild($input)\r\n    setTimeout(() => $input.focus(), 80) // 延迟 Focus\r\n\r\n    // 绑定键盘事件\r\n    $input.onkeyup = (evt) => {\r\n      if (evt.key === 'Enter' || evt.keyCode === 13) {\r\n        // 按下回车键\r\n        evt.preventDefault()\r\n        layer.getEl().querySelector<HTMLButtonElement>('button[data-action=\"confirm\"]')!.click()\r\n      }\r\n    }\r\n\r\n    let btnTextOrg: string | undefined\r\n    const dialog = new Dialog(formEl)\r\n\r\n    // 确认按钮\r\n    dialog.setYes((btnEl) => {\r\n      const inputVal = $input.value.trim()\r\n\r\n      // 按钮操作\r\n      if (!btnTextOrg) btnTextOrg = btnEl.innerText\r\n      const btnTextSet = (btnText: string) => {\r\n        btnEl.innerText = btnText\r\n        btnEl.classList.add('error')\r\n      }\r\n      const btnTextRestore = () => {\r\n        btnEl.innerText = btnTextOrg || ''\r\n        btnEl.classList.remove('error')\r\n      }\r\n\r\n      btnEl.innerText = `${$t('loading')}...`\r\n\r\n      // 发送请求\r\n      checker\r\n        .request(checkerCtx, inputVal)\r\n        .then((data) => {\r\n          // 请求成功\r\n          close()\r\n\r\n          if (checker.onSuccess) checker.onSuccess(checkerCtx, data, inputVal, formEl)\r\n          if (payload.onSuccess) payload.onSuccess()\r\n        })\r\n        .catch((err) => {\r\n          // 请求失败\r\n          btnTextSet(String(err.message || String(err)))\r\n\r\n          if (checker.onError) checker.onError(checkerCtx, err, inputVal, formEl)\r\n\r\n          // 错误显示 3s 后恢复按钮\r\n          const tf = setTimeout(() => btnTextRestore(), 3000)\r\n          $input.onfocus = () => {\r\n            btnTextRestore()\r\n            clearTimeout(tf)\r\n          }\r\n        })\r\n\r\n      return false\r\n    })\r\n\r\n    // 取消按钮\r\n    dialog.setNo(() => {\r\n      close()\r\n      if (payload.onCancel) payload.onCancel()\r\n      return false\r\n    })\r\n\r\n    if (hideInteractInput) {\r\n      $input.style.display = 'none'\r\n      dialog.$el.querySelector<HTMLElement>('.atk-layer-dialog-actions')!.style.display = 'none'\r\n    }\r\n\r\n    // 层装载 dialog 元素\r\n    layer.getEl().append(dialog.$el)\r\n\r\n    // onMount 回调\r\n    if (payload.onMount) payload.onMount(dialog.$el)\r\n  }\r\n}\r\n\r\nexport interface Checker<T = any> {\r\n  el?: HTMLElement\r\n  inputType?: 'password' | 'text'\r\n  body: (checker: CheckerCtx) => HTMLElement\r\n  request: (checker: CheckerCtx, inputVal: string) => Promise<T>\r\n  onSuccess?: (checker: CheckerCtx, respData: T, inputVal: string, formEl: HTMLElement) => void\r\n  onError?: (checker: CheckerCtx, errData: any, inputVal: string, formEl: HTMLElement) => void\r\n}\r\n\r\ninterface CheckerStore {\r\n  val?: string\r\n  img_data?: string\r\n  iframe?: string\r\n}\r\n\r\nexport interface CheckerCtx {\r\n  get<K extends keyof CheckerStore>(key: K): CheckerStore[K]\r\n  set<K extends keyof CheckerStore>(key: K, val: CheckerStore[K]): void\r\n  getOpts(): CheckerLauncherOptions\r\n  getApi(): Api\r\n  getUser(): User\r\n  hideInteractInput(): void\r\n  triggerSuccess(): void\r\n  cancel(): void\r\n}\r\n","import type { ContextApi } from '@/types'\r\n\r\nexport default abstract class Component {\r\n  public $el!: HTMLElement\r\n  public get conf() {\r\n    return this.ctx.conf\r\n  }\r\n\r\n  public constructor(public ctx: ContextApi) {}\r\n\r\n  getEl() {\r\n    return this.$el\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-main-editor\\\">\\r\\n  <div class=\\\"atk-header\\\">\\r\\n    <input name=\\\"nick\\\" class=\\\"atk-nick\\\" type=\\\"text\\\" required=\\\"required\\\" />\\r\\n    <input name=\\\"email\\\" class=\\\"atk-email\\\" type=\\\"email\\\" required=\\\"required\\\" />\\r\\n  </div>\\r\\n  <div class=\\\"atk-textarea-wrap\\\">\\r\\n    <textarea class=\\\"atk-textarea\\\"></textarea>\\r\\n  </div>\\r\\n  <div class=\\\"atk-plug-panel-wrap\\\" style=\\\"display: none\\\"></div>\\r\\n  <div class=\\\"atk-bottom\\\">\\r\\n    <div class=\\\"atk-item atk-bottom-left\\\">\\r\\n      <span class=\\\"atk-state-wrap\\\"></span>\\r\\n      <span class=\\\"atk-plug-btn-wrap\\\"></span>\\r\\n    </div>\\r\\n    <div class=\\\"atk-item\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"atk-send-btn\\\"></button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"atk-notify-wrap\\\"></div>\\r\\n</div>\\r\\n\"","import * as Utils from '../lib/utils'\r\nimport EditorHTML from './editor.html?raw'\r\n\r\nconst Sel = {\r\n  $header: '.atk-header',\r\n  $nick: '.atk-header [name=\"nick\"]',\r\n  $email: '.atk-header [name=\"email\"]',\r\n  $link: '.atk-header [name=\"link\"]',\r\n  $textareaWrap: '.atk-textarea-wrap',\r\n  $textarea: '.atk-textarea',\r\n  $bottom: '.atk-bottom',\r\n  $submitBtn: '.atk-send-btn',\r\n  $notifyWrap: '.atk-notify-wrap',\r\n  $bottomLeft: '.atk-bottom-left',\r\n  $stateWrap: '.atk-state-wrap',\r\n  $plugBtnWrap: '.atk-plug-btn-wrap',\r\n  $plugPanelWrap: '.atk-plug-panel-wrap',\r\n}\r\n\r\nexport interface EditorUI extends Record<keyof typeof Sel, HTMLElement> {\r\n  $el: HTMLElement\r\n  $nick: HTMLInputElement\r\n  $email: HTMLInputElement\r\n  $link: HTMLInputElement\r\n  $textarea: HTMLTextAreaElement\r\n  $submitBtn: HTMLButtonElement\r\n  $sendReplyBtn?: HTMLElement\r\n  $editCancelBtn?: HTMLElement\r\n}\r\n\r\nexport function render() {\r\n  const $el = Utils.createElement(EditorHTML)\r\n  const ui = { $el }\r\n  Object.entries(Sel).forEach(([k, sel]) => {\r\n    ui[k] = $el.querySelector(sel)\r\n  })\r\n  return ui as EditorUI\r\n}\r\n","import type PlugKit from './_kit'\r\nimport type { CommentData, EditorState } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\n/**\r\n * Editor 插件\r\n */\r\ninterface EditorPlug {\r\n  $btn?: HTMLElement\r\n  $panel?: HTMLElement\r\n  contentTransformer?(rawContent: string): string\r\n  editorStateEffectWhen?: EditorState\r\n  editorStateEffect?(comment: CommentData): () => void\r\n}\r\n\r\nclass EditorPlug {\r\n  constructor(protected kit: PlugKit) {}\r\n\r\n  /** Use plug btn will add a btn on the bottom of editor */\r\n  useBtn(html: string = '<div></div>') {\r\n    this.$btn = Utils.createElement(`<span class=\"atk-plug-btn\">${html}</span>`)\r\n    return this.$btn\r\n  }\r\n\r\n  /** Use plug panel will show the panel when btn is clicked */\r\n  usePanel(html: string = '<div></div>') {\r\n    this.$panel = Utils.createElement(html)\r\n    return this.$panel\r\n  }\r\n\r\n  /** Use the content transformer to handle the content of the last submit by the editor */\r\n  useContentTransformer(func: (raw: string) => string) {\r\n    this.contentTransformer = func\r\n  }\r\n\r\n  /** Listen the event of panel show */\r\n  usePanelShow(func: () => void) {\r\n    this.kit.useEvents().on('panel-show', (aPlug) => {\r\n      if (aPlug === this) func()\r\n    })\r\n  }\r\n\r\n  /** Listen the event of panel hide */\r\n  usePanelHide(func: () => void) {\r\n    this.kit.useEvents().on('panel-hide', (aPlug) => {\r\n      if (aPlug === this) func()\r\n    })\r\n  }\r\n\r\n  /** Use editor state modifier */\r\n  useEditorStateEffect(stateName: EditorState, effectFn: (comment: CommentData) => () => void) {\r\n    this.editorStateEffectWhen = stateName\r\n    this.editorStateEffect = effectFn\r\n  }\r\n}\r\n\r\nexport default EditorPlug\r\n","import EditorPlug from './_plug'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport default class Mover extends EditorPlug {\r\n  private isMoved = false\r\n\r\n  move(afterEl: HTMLElement) {\r\n    if (this.isMoved) return\r\n    this.isMoved = true\r\n\r\n    const editorEl = this.kit.useUI().$el\r\n\r\n    editorEl.after(Utils.createElement('<div class=\"atk-editor-travel-placeholder\"></div>'))\r\n\r\n    const $travelPlace = Utils.createElement('<div></div>')\r\n    afterEl.after($travelPlace)\r\n    $travelPlace.replaceWith(editorEl)\r\n\r\n    editorEl.classList.add('atk-fade-in') // 添加渐入动画\r\n    editorEl.classList.add('editor-traveling')\r\n  }\r\n\r\n  back() {\r\n    if (!this.isMoved) return\r\n    this.isMoved = false\r\n    this.kit\r\n      .useGlobalCtx()\r\n      .$root.querySelector('.atk-editor-travel-placeholder')\r\n      ?.replaceWith(this.kit.useUI().$el)\r\n    this.kit.useUI().$el.classList.remove('editor-traveling')\r\n  }\r\n}\r\n","import Mover from '../plugins/editor/mover'\r\nimport type Editor from './editor'\r\nimport type { EditorState, CommentData } from '@/types'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport default class EditorStateManager {\r\n  constructor(private editor: Editor) {}\r\n\r\n  private stateCurt: EditorState = 'normal'\r\n  private stateUnmountFn: (() => void) | null = null\r\n\r\n  /** Get current state */\r\n  get() {\r\n    return this.stateCurt\r\n  }\r\n\r\n  /**\r\n   * Switch editor state\r\n   *\r\n   * @param state The state to switch\r\n   * @param payload The cause of state switch\r\n   */\r\n  switch(state: EditorState, payload?: { $comment: HTMLElement; comment: CommentData }) {\r\n    // trigger unmount\r\n    if (this.stateUnmountFn) {\r\n      this.stateUnmountFn()\r\n      this.stateUnmountFn = null\r\n\r\n      // move editor back to the initial position\r\n      this.editor.getPlugs()?.get(Mover)?.back()\r\n    }\r\n\r\n    // invoke effect function and save unmount function\r\n    if (state !== 'normal' && payload) {\r\n      // move editor position\r\n      let moveAfterEl = payload.$comment\r\n      if (!this.editor.conf.flatMode)\r\n        moveAfterEl = moveAfterEl.querySelector<HTMLElement>('.atk-footer')!\r\n      this.editor.getPlugs()?.get(Mover)?.move(moveAfterEl)\r\n\r\n      const $relative =\r\n        this.editor.ctx.conf.scrollRelativeTo && this.editor.ctx.conf.scrollRelativeTo()\r\n      Ui.scrollIntoView(this.editor.getUI().$el, true, $relative)\r\n\r\n      const plugin = this.editor\r\n        .getPlugs()\r\n        ?.getPlugs()\r\n        .find((p) => p.editorStateEffectWhen === state)\r\n      if (plugin && plugin.editorStateEffect) {\r\n        this.stateUnmountFn = plugin.editorStateEffect(payload.comment)\r\n      }\r\n    }\r\n\r\n    // change current state\r\n    this.stateCurt = state\r\n  }\r\n}\r\n","import Component from '../lib/component'\r\nimport * as Ui from '../lib/ui'\r\nimport marked from '../lib/marked'\r\nimport { render, EditorUI } from './ui'\r\nimport EditorStateManager from './state'\r\nimport type { CommentData, ContextApi, EditorApi } from '@/types'\r\n\r\nclass Editor extends Component implements EditorApi {\r\n  private ui: EditorUI\r\n  private state: EditorStateManager\r\n\r\n  getUI() {\r\n    return this.ui\r\n  }\r\n  getPlugs() {\r\n    return this.ctx.get('editorPlugs')\r\n  }\r\n  getState() {\r\n    return this.state.get()\r\n  }\r\n\r\n  constructor(ctx: ContextApi) {\r\n    super(ctx)\r\n\r\n    // init editor ui\r\n    this.ui = render()\r\n    this.$el = this.ui.$el\r\n\r\n    // init state manager\r\n    this.state = new EditorStateManager(this)\r\n  }\r\n\r\n  getHeaderInputEls() {\r\n    return { nick: this.ui.$nick, email: this.ui.$email }\r\n  }\r\n\r\n  getContentFinal() {\r\n    let content = this.getContentRaw()\r\n\r\n    // plug hook: final content transformer\r\n    const plugs = this.getPlugs()\r\n    if (plugs) content = plugs.getTransformedContent(content)\r\n\r\n    return content\r\n  }\r\n\r\n  getContentRaw() {\r\n    return this.ui.$textarea.value || ''\r\n  }\r\n\r\n  getContentMarked() {\r\n    return marked(this.getContentFinal())\r\n  }\r\n\r\n  setContent(val: string) {\r\n    this.ui.$textarea.value = val\r\n\r\n    // plug hook: content updated\r\n    this.getPlugs()?.getEvents().trigger('content-updated', val)\r\n  }\r\n\r\n  insertContent(val: string) {\r\n    if ((document as any).selection) {\r\n      this.ui.$textarea.focus()\r\n      ;(document as any).selection.createRange().text = val\r\n      this.ui.$textarea.focus()\r\n    } else if (this.ui.$textarea.selectionStart || this.ui.$textarea.selectionStart === 0) {\r\n      const sStart = this.ui.$textarea.selectionStart\r\n      const sEnd = this.ui.$textarea.selectionEnd\r\n      const sT = this.ui.$textarea.scrollTop\r\n      this.setContent(\r\n        this.ui.$textarea.value.substring(0, sStart) +\r\n          val +\r\n          this.ui.$textarea.value.substring(sEnd, this.ui.$textarea.value.length),\r\n      )\r\n      this.ui.$textarea.focus()\r\n      this.ui.$textarea.selectionStart = sStart + val.length\r\n      this.ui.$textarea.selectionEnd = sStart + val.length\r\n      this.ui.$textarea.scrollTop = sT\r\n    } else {\r\n      this.ui.$textarea.focus()\r\n      this.ui.$textarea.value += val\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    this.ui.$textarea.focus()\r\n  }\r\n\r\n  reset() {\r\n    this.setContent('')\r\n    this.resetState()\r\n  }\r\n\r\n  resetState() {\r\n    this.state.switch('normal')\r\n  }\r\n\r\n  setReply(comment: CommentData, $comment: HTMLElement) {\r\n    this.state.switch('reply', { comment, $comment })\r\n  }\r\n\r\n  setEditComment(comment: CommentData, $comment: HTMLElement) {\r\n    this.state.switch('edit', { comment, $comment })\r\n  }\r\n\r\n  showNotify(msg: string, type: any) {\r\n    // Ui.showNotify(this.ui.$notifyWrap, msg, type)\r\n  }\r\n\r\n  showLoading() {\r\n    Ui.showLoading(this.ui.$el)\r\n  }\r\n\r\n  hideLoading() {\r\n    Ui.hideLoading(this.ui.$el)\r\n  }\r\n\r\n  submit() {\r\n    const next = () => this.ctx.trigger('editor-submit')\r\n    if (this.ctx.conf.beforeSubmit) {\r\n      this.ctx.conf.beforeSubmit(this, next)\r\n    } else {\r\n      next()\r\n    }\r\n  }\r\n}\r\n\r\nexport default Editor\r\n","import SidebarHTML from './sidebar-layer.html?raw'\r\nimport type { Layer } from './layer'\r\nimport type { ContextApi, SidebarShowPayload } from '@/types'\r\nimport Component from '@/lib/component'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport default class SidebarLayer extends Component {\r\n  public layer?: Layer\r\n  public $header: HTMLElement\r\n  public $closeBtn: HTMLElement\r\n  public $iframeWrap: HTMLElement\r\n  public $iframe?: HTMLIFrameElement\r\n\r\n  constructor(ctx: ContextApi) {\r\n    super(ctx)\r\n\r\n    this.$el = Utils.createElement(SidebarHTML)\r\n    this.$header = this.$el.querySelector('.atk-sidebar-header')!\r\n    this.$closeBtn = this.$header.querySelector('.atk-sidebar-close')!\r\n    this.$iframeWrap = this.$el.querySelector('.atk-sidebar-iframe-wrap')!\r\n\r\n    this.$closeBtn.onclick = () => {\r\n      this.hide()\r\n    }\r\n\r\n    // event\r\n    this.ctx.on('user-changed', () => {\r\n      this.refreshOnShow = true\r\n    })\r\n  }\r\n\r\n  /** Refresh iFrame on show */\r\n  private refreshOnShow = true\r\n\r\n  /** Animation timer */\r\n  private animTimer?: any = undefined\r\n\r\n  /** 显示 */\r\n  public async show(conf: SidebarShowPayload = {}) {\r\n    this.$el.style.transform = '' // 动画清除，防止二次打开失效\r\n\r\n    // init layer\r\n    this.initLayer()\r\n    this.layer!.show()\r\n\r\n    // init iframe\r\n    if (this.refreshOnShow) {\r\n      this.refreshOnShow = false\r\n      this.$iframeWrap.innerHTML = ''\r\n      this.$iframe = this.createIframe(conf.view)\r\n      this.$iframeWrap.append(this.$iframe)\r\n    } else {\r\n      // Sync Dark Mode (reload iframe if not match)\r\n      const $iframe = this.$iframe!\r\n      const iFrameSrc = $iframe.src\r\n      if (this.getDarkMode() !== iFrameSrc.includes('&darkMode=1')) {\r\n        this.iframeLoad(\r\n          $iframe,\r\n          this.getDarkMode()\r\n            ? iFrameSrc.concat('&darkMode=1')\r\n            : iFrameSrc.replace('&darkMode=1', ''),\r\n        )\r\n      }\r\n    }\r\n\r\n    // 管理员身份验证 (若身份失效，弹出验证窗口)\r\n    this.authCheck({\r\n      onSuccess: () => this.show(conf), // retry show after auth check\r\n    })\r\n\r\n    // 执行滑动显示动画\r\n    this.animTimer = setTimeout(() => {\r\n      this.animTimer = undefined\r\n      this.$el.style.transform = 'translate(0, 0)'\r\n\r\n      setTimeout(() => {\r\n        this.ctx.getData().updateNotifies([])\r\n      }, 0)\r\n\r\n      this.ctx.trigger('sidebar-show')\r\n    }, 100)\r\n  }\r\n\r\n  /** 隐藏 */\r\n  public hide() {\r\n    this.layer?.hide()\r\n  }\r\n\r\n  // --------------------------------------------------\r\n\r\n  private async authCheck(opts: { onSuccess: () => void }) {\r\n    const data = (\r\n      await this.ctx.getApi().user.getUserStatus({\r\n        ...this.ctx.getApi().getUserFields(),\r\n      })\r\n    ).data\r\n    if (data.is_admin && !data.is_login) {\r\n      this.refreshOnShow = true\r\n\r\n      // show checker layer\r\n      this.ctx.checkAdmin({\r\n        onSuccess: () => {\r\n          setTimeout(() => {\r\n            opts.onSuccess()\r\n          }, 500)\r\n        },\r\n        onCancel: () => {\r\n          this.hide()\r\n        },\r\n      })\r\n\r\n      // hide sidebar layer\r\n      this.hide()\r\n    }\r\n  }\r\n\r\n  private initLayer() {\r\n    if (this.layer) return\r\n\r\n    this.layer = this.ctx.get('layerManager').create('sidebar', this.$el)\r\n    this.layer.setOnAfterHide(() => {\r\n      // 防止评论框被吞\r\n      this.ctx.editorResetState()\r\n\r\n      // interrupt animation\r\n      this.animTimer && clearTimeout(this.animTimer)\r\n\r\n      // perform transform\r\n      this.$el.style.transform = ''\r\n\r\n      // trigger event\r\n      this.ctx.trigger('sidebar-hide')\r\n    })\r\n  }\r\n\r\n  private createIframe(view?: string) {\r\n    const $iframe = Utils.createElement<HTMLIFrameElement>(\r\n      '<iframe referrerpolicy=\"strict-origin-when-cross-origin\"></iframe>',\r\n    )\r\n\r\n    // 准备 Iframe 参数\r\n    const baseURL = import.meta.env.DEV\r\n      ? 'http://localhost:23367/'\r\n      : Utils.getURLBasedOnApi({\r\n          base: this.ctx.conf.server,\r\n          path: '/sidebar/',\r\n        })\r\n\r\n    const query: any = {\r\n      pageKey: this.conf.pageKey,\r\n      site: this.conf.site || '',\r\n      user: JSON.stringify(this.ctx.get('user').getData()),\r\n      time: +new Date(),\r\n    }\r\n\r\n    if (view) query.view = view\r\n    if (this.getDarkMode()) query.darkMode = '1'\r\n\r\n    const urlParams = new URLSearchParams(query)\r\n    this.iframeLoad($iframe, `${baseURL}?${urlParams.toString()}`)\r\n\r\n    return $iframe\r\n  }\r\n\r\n  private getDarkMode() {\r\n    return this.conf.darkMode === 'auto'\r\n      ? window.matchMedia('(prefers-color-scheme: dark)').matches\r\n      : this.conf.darkMode\r\n  }\r\n\r\n  private iframeLoad($iframe: HTMLIFrameElement, src: string) {\r\n    $iframe.src = src\r\n\r\n    // 加载动画\r\n    Ui.showLoading(this.$iframeWrap)\r\n    $iframe.onload = () => {\r\n      Ui.hideLoading(this.$iframeWrap)\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-sidebar-layer\\\">\\r\\n  <div class=\\\"atk-sidebar-inner\\\">\\r\\n    <div class=\\\"atk-sidebar-header\\\">\\r\\n      <div class=\\\"atk-sidebar-close\\\">\\r\\n        <i class=\\\"atk-icon atk-icon-close-slim\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"atk-sidebar-iframe-wrap\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import type { LayoutStrategyCreator } from '.'\r\nimport type { CommentNode } from '@/comment'\r\nimport * as Ui from '@/lib/ui'\r\nimport * as ListNest from '@/list/nest'\r\n\r\nexport const createNestStrategy: LayoutStrategyCreator = (opts) => ({\r\n  import: (comments) => {\r\n    // 遍历 root 评论\r\n    const rootNodes = ListNest.makeNestCommentNodeList(comments, opts.nestSortBy, opts.nestMax)\r\n    rootNodes.forEach((rootNode: ListNest.CommentNode) => {\r\n      const rootC = opts.createCommentNode(rootNode.comment)\r\n\r\n      // 显示并播放渐入动画\r\n      opts.$commentsWrap?.appendChild(rootC.getEl())\r\n      rootC.getRender().playFadeAnim()\r\n\r\n      // 加载子评论\r\n      const loadChildren = (parentC: CommentNode, parentNode: ListNest.CommentNode) => {\r\n        parentNode.children.forEach((node: ListNest.CommentNode) => {\r\n          const replyD = comments.find((c) => c.id === node.comment.rid)\r\n          const childD = node.comment\r\n          const childC = opts.createCommentNode(childD, replyD)\r\n\r\n          // 插入到父评论中\r\n          parentC.putChild(childC)\r\n\r\n          // 递归加载子评论\r\n          loadChildren(childC, node)\r\n        })\r\n      }\r\n      loadChildren(rootC, rootNode)\r\n\r\n      // 限高检测\r\n      rootC.getRender().checkHeightLimit()\r\n    })\r\n  },\r\n  insert: (comment, replyComment) => {\r\n    // 嵌套模式\r\n    const node = opts.createCommentNode(comment, replyComment)\r\n\r\n    if (comment.rid === 0) {\r\n      // root评论 新增\r\n      opts.$commentsWrap?.prepend(node.getEl())\r\n    } else {\r\n      // 子评论 新增\r\n      const parent = opts.findCommentNode(comment.rid)\r\n      if (parent) {\r\n        parent.putChild(node, opts.nestSortBy === 'DATE_ASC' ? 'append' : 'prepend')\r\n\r\n        // 若父评论存在 “子评论部分” 限高，取消限高\r\n        node.getParents().forEach((p) => {\r\n          p.getRender().heightLimitRemoveForChildren()\r\n        })\r\n      }\r\n    }\r\n\r\n    node.getRender().checkHeightLimit()\r\n\r\n    node.scrollIntoView() // 滚动到可以见\r\n    node.getRender().playFadeAnim() // 播放评论渐出动画\r\n  },\r\n})\r\n","import type { CommentData } from '@/types'\r\n\r\nexport type CommentNode = {\r\n  id: number\r\n  comment: CommentData\r\n  children: CommentNode[]\r\n  parent?: CommentNode\r\n  level: number\r\n}\r\n\r\nexport type SortByType = 'DATE_DESC' | 'DATE_ASC' | 'SRC_INDEX' | 'VOTE_UP_DESC'\r\n\r\n// 构建树状结构列表\r\nexport function makeNestCommentNodeList(\r\n  srcData: CommentData[],\r\n  sortBy: SortByType = 'DATE_DESC',\r\n  nestMax = 2,\r\n) {\r\n  const nodeList: CommentNode[] = []\r\n\r\n  const roots = srcData.filter((o) => o.rid === 0)\r\n  roots.forEach((root: CommentData) => {\r\n    const rootNode: CommentNode = {\r\n      id: root.id,\r\n      comment: root,\r\n      children: [],\r\n      level: 1,\r\n    }\r\n\r\n    rootNode.parent = rootNode\r\n    nodeList.push(rootNode)\r\n    ;(function loadChildren(parentNode: CommentNode) {\r\n      const children = srcData.filter((o) => o.rid === parentNode.id)\r\n      if (children.length === 0) return\r\n      if (parentNode.level >= nestMax) parentNode = parentNode.parent!\r\n      children.forEach((child: CommentData) => {\r\n        const childNode: CommentNode = {\r\n          id: child.id,\r\n          comment: child,\r\n          children: [],\r\n          parent: parentNode,\r\n          level: parentNode.level + 1,\r\n        }\r\n\r\n        parentNode.children.push(childNode)\r\n        loadChildren(childNode)\r\n      })\r\n    })(rootNode)\r\n  })\r\n\r\n  // 排序\r\n  const sortFunc = (a: CommentNode, b: CommentNode): number => {\r\n    let v = a.id - b.id\r\n    if (sortBy === 'DATE_ASC') v = +new Date(a.comment.date) - +new Date(b.comment.date)\r\n    else if (sortBy === 'DATE_DESC') v = +new Date(b.comment.date) - +new Date(a.comment.date)\r\n    else if (sortBy === 'SRC_INDEX') v = srcData.indexOf(a.comment) - srcData.indexOf(b.comment)\r\n    else if (sortBy === 'VOTE_UP_DESC') v = b.comment.vote_up - a.comment.vote_up\r\n    return v\r\n  }\r\n\r\n  ;(function sortLevels(nodes: CommentNode[]) {\r\n    nodes.forEach((node) => {\r\n      node.children = node.children.sort(sortFunc)\r\n      sortLevels(node.children)\r\n    })\r\n  })(nodeList)\r\n\r\n  return nodeList\r\n}\r\n","import type { LayoutStrategyCreator, LayoutOptions } from '.'\r\nimport type { CommentData } from '@/types'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport const createFlatStrategy: LayoutStrategyCreator = (opts) => ({\r\n  import: (comments) => {\r\n    comments.forEach((comment: CommentData) => {\r\n      const replyComment =\r\n        comment.rid === 0 ? undefined : comments.find((c) => c.id === comment.rid)\r\n      insertComment(opts, 'append', comment, replyComment)\r\n    })\r\n  },\r\n  insert: (comment, replyComment) => {\r\n    const node = insertComment(opts, 'prepend', comment, replyComment)\r\n    node.scrollIntoView()\r\n  },\r\n})\r\n\r\n/** 导入评论 · 平铺模式 */\r\nfunction insertComment(\r\n  opts: LayoutOptions,\r\n  insertMode: 'append' | 'prepend',\r\n  comment: CommentData,\r\n  replyComment?: CommentData | undefined,\r\n) {\r\n  if (comment.is_collapsed) comment.is_allow_reply = false\r\n  const node = opts.createCommentNode(comment, replyComment)\r\n\r\n  // 可见评论添加到界面\r\n  // 注：不可见评论用于显示 “引用内容”\r\n  if (comment.visible) {\r\n    const $comment = node.getEl()\r\n    const $listCommentsWrap = opts.$commentsWrap\r\n    if (insertMode === 'append') $listCommentsWrap?.append($comment)\r\n    if (insertMode === 'prepend') $listCommentsWrap?.prepend($comment)\r\n    node.getRender().playFadeAnim()\r\n  }\r\n\r\n  // 平铺评论插入后 · 内容限高检测\r\n  // 插入列表的评论 (visible=true) 和关联的评论 (visible=false) 都需要检测\r\n  node.getRender().checkHeightLimit()\r\n\r\n  return node\r\n}\r\n","import * as ListNest from '../nest'\r\nimport { createNestStrategy } from './nest'\r\nimport { createFlatStrategy } from './flat'\r\nimport type { CommentNode } from '@/comment'\r\nimport type { CommentData } from '@/types'\r\n\r\nexport interface LayoutOptions {\r\n  /** The comments wrap of list */\r\n  $commentsWrap: HTMLElement\r\n  nestSortBy: ListNest.SortByType\r\n  nestMax: number\r\n  flatMode: boolean\r\n\r\n  createCommentNode(comment: CommentData, replyComment?: CommentData): CommentNode\r\n  findCommentNode(id: number): CommentNode | undefined\r\n}\r\n\r\nexport interface LayoutStrategy {\r\n  import(comments: CommentData[]): void\r\n  insert(comment: CommentData, replyComment?: CommentData): void\r\n}\r\n\r\nexport type LayoutStrategyCreator = (opts: LayoutOptions) => LayoutStrategy\r\n\r\nexport class ListLayout {\r\n  constructor(private options: LayoutOptions) {}\r\n\r\n  private getStrategy() {\r\n    return this.options.flatMode\r\n      ? createFlatStrategy(this.options)\r\n      : createNestStrategy(this.options)\r\n  }\r\n\r\n  import(comments: CommentData[]) {\r\n    this.getStrategy().import(comments)\r\n  }\r\n\r\n  insert(comment: CommentData, replyComment?: CommentData) {\r\n    this.getStrategy().insert(comment, replyComment)\r\n  }\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport $t from '../i18n'\r\n\r\nexport interface IHeightLimitConf {\r\n  /** After expand btn click */\r\n  afterExpandBtnClick?: () => void\r\n  /** Allow Scroll */\r\n  scrollable?: boolean\r\n}\r\n\r\nexport interface IHeightLimitRule {\r\n  /** Target element need to check */\r\n  el: HTMLElement | null | undefined\r\n\r\n  /** Max height (unit: px) */\r\n  max: number\r\n\r\n  /** Whether or not the element contains `<img />` */\r\n  imgCheck?: boolean\r\n}\r\n\r\nexport type THeightLimitRuleSet = IHeightLimitRule[]\r\n\r\n/** Check all elements below the max height limit */\r\nexport function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet) {\r\n  rules.forEach(({ el, max, imgCheck }) => {\r\n    if (!el) return\r\n\r\n    // set max height for avoiding img exceed the limit while loading\r\n    if (imgCheck) el.style.maxHeight = `${max + 1}px` // allow 1px more for next detecting\r\n\r\n    let lock = false\r\n    const _check = () => {\r\n      if (lock) return\r\n      if (Utils.getHeight(el) <= max) return // if not exceed the limit, do nothing\r\n\r\n      const afterExpandBtnClick = () => {\r\n        lock = true // add lock to prevent collapse again after expand when image lazy loaded\r\n        conf.afterExpandBtnClick?.()\r\n      }\r\n\r\n      !conf.scrollable\r\n        ? applyHeightLimit({ el, max, afterExpandBtnClick })\r\n        : applyScrollableHeightLimit({ el, max })\r\n    }\r\n\r\n    // check immediately\r\n    _check()\r\n\r\n    // check images after loaded\r\n    if (imgCheck) {\r\n      // check again when image loaded\r\n      const imgs = el.querySelectorAll<HTMLImageElement>('.atk-content img')\r\n      if (imgs.length === 0) el.style.maxHeight = ''\r\n      imgs.forEach((img) => {\r\n        img.onload = () => _check()\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n/** Height limit CSS class name */\r\nconst HEIGHT_LIMIT_CSS = 'atk-height-limit'\r\n\r\n/** Apply height limit on an element and add expand btn */\r\nexport function applyHeightLimit(obj: {\r\n  el: HTMLElement\r\n  max: number\r\n  afterExpandBtnClick?: (e: MouseEvent) => void\r\n}) {\r\n  if (!obj.el) return\r\n  if (!obj.max) return\r\n  if (obj.el.classList.contains(HEIGHT_LIMIT_CSS)) return\r\n\r\n  obj.el.classList.add(HEIGHT_LIMIT_CSS)\r\n  obj.el.style.height = `${obj.max}px`\r\n  obj.el.style.overflow = 'hidden'\r\n\r\n  /* Expand button */\r\n  const $expandBtn = Utils.createElement(\r\n    `<div class=\"atk-height-limit-btn\">${$t('readMore')}</span>`,\r\n  )\r\n  $expandBtn.onclick = (e) => {\r\n    e.stopPropagation()\r\n    disposeHeightLimit(obj.el)\r\n\r\n    if (obj.afterExpandBtnClick) obj.afterExpandBtnClick(e)\r\n  }\r\n  obj.el.append($expandBtn)\r\n}\r\n\r\n/** Dispose height limit on an element and remove expand btn */\r\nexport function disposeHeightLimit($el: HTMLElement) {\r\n  if (!$el) return\r\n  if (!$el.classList.contains(HEIGHT_LIMIT_CSS)) return\r\n\r\n  $el.classList.remove(HEIGHT_LIMIT_CSS)\r\n  Array.from($el.children).forEach((e) => {\r\n    if (e.classList.contains('atk-height-limit-btn')) e.remove()\r\n  })\r\n  $el.style.height = ''\r\n  $el.style.maxHeight = ''\r\n  $el.style.overflow = ''\r\n}\r\n\r\n/** Height limit scrollable CSS class name */\r\nconst HEIGHT_LIMIT_SCROLL_CSS = 'atk-height-limit-scroll'\r\n\r\n/** Apply scrollable height limit */\r\nexport function applyScrollableHeightLimit(opt: { el: HTMLElement; max: number }) {\r\n  if (!opt.el) return\r\n  if (opt.el.classList.contains(HEIGHT_LIMIT_SCROLL_CSS)) return\r\n  opt.el.classList.add(HEIGHT_LIMIT_SCROLL_CSS)\r\n  opt.el.style.height = `${opt.max}px`\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n\r\n/**\r\n * 评论头部界面\r\n */\r\nexport default function renderHeader(r: Render) {\r\n  Object.entries({\r\n    renderNick,\r\n    renderVerifyBadge,\r\n    renderDate,\r\n    renderUABadge,\r\n  }).forEach(([name, render]) => {\r\n    render(r)\r\n  })\r\n}\r\n\r\nfunction renderNick(r: Render) {\r\n  r.$headerNick = r.$el.querySelector<HTMLElement>('.atk-nick')!\r\n\r\n  r.$headerNick.innerText = r.data.nick\r\n}\r\n\r\nfunction renderVerifyBadge(ctx: Render) {\r\n  ctx.$headerBadgeWrap = ctx.$el.querySelector<HTMLElement>('.atk-badge-wrap')!\r\n  ctx.$headerBadgeWrap.innerHTML = ''\r\n\r\n  const badgeText = ctx.data.badge_name\r\n  const badgeColor = ctx.data.badge_color\r\n  if (badgeText) {\r\n    const $badge = Utils.createElement(`<span class=\"atk-badge\"></span>`)\r\n    $badge.innerText = badgeText.replace('管理员', $t('admin')) // i18n patch\r\n    $badge.style.backgroundColor = badgeColor || ''\r\n    ctx.$headerBadgeWrap.append($badge)\r\n  } else if (ctx.data.is_verified) {\r\n    const $verifiedBadge = Utils.createElement(\r\n      `<span class=\"atk-verified-icon\" title=\"${$t('emailVerified')}\"></span>`,\r\n    ) // 邮箱验证徽章\r\n    ctx.$headerBadgeWrap.append($verifiedBadge)\r\n  }\r\n\r\n  if (ctx.data.is_pinned) {\r\n    const $pinnedBadge = Utils.createElement(`<span class=\"atk-pinned-badge\">${$t('pin')}</span>`) // 置顶徽章\r\n    ctx.$headerBadgeWrap.append($pinnedBadge)\r\n  }\r\n}\r\n\r\nfunction renderDate(ctx: Render) {\r\n  const $date = ctx.$el.querySelector<HTMLElement>('.atk-date')!\r\n  $date.innerText = ctx.comment.getDateFormatted()\r\n  $date.setAttribute('data-atk-comment-date', String(+new Date(ctx.data.date)))\r\n}\r\n\r\nfunction renderUABadge(ctx: Render) {\r\n  if (!ctx.opts.uaBadge && !ctx.data.ip_region) return\r\n\r\n  let $uaWrap = ctx.$header.querySelector('atk-ua-wrap')\r\n  if (!$uaWrap) {\r\n    $uaWrap = Utils.createElement(`<span class=\"atk-ua-wrap\"></span>`)\r\n    ctx.$header.append($uaWrap)\r\n  }\r\n\r\n  $uaWrap.innerHTML = ''\r\n\r\n  if (ctx.data.ip_region) {\r\n    const $regionBadge = Utils.createElement(`<span class=\"atk-region-badge\"></span>`)\r\n    $regionBadge.innerText = ctx.data.ip_region\r\n    $uaWrap.append($regionBadge)\r\n  }\r\n\r\n  if (ctx.opts.uaBadge) {\r\n    const { browser, os } = ctx.comment.getUserUA()\r\n    if (String(browser).trim()) {\r\n      const $uaBrowser = Utils.createElement(`<span class=\"atk-ua ua-browser\"></span>`)\r\n      $uaBrowser.innerText = browser\r\n      $uaWrap.append($uaBrowser)\r\n    }\r\n\r\n    if (String(os).trim()) {\r\n      const $usOS = Utils.createElement(`<span class=\"atk-ua ua-os\"></span>`)\r\n      $usOS.innerText = os\r\n      $uaWrap.append($usOS)\r\n    }\r\n  }\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport $t from '@/i18n'\r\n\r\ninterface ActionBtnOptions {\r\n  /** 按钮文字 (动态/静态) */\r\n  text: (() => string) | string\r\n\r\n  /** 仅管理员可用 */\r\n  adminOnly?: boolean\r\n\r\n  /** 确认操作 */\r\n  confirm?: boolean\r\n\r\n  /** 确认时提示文字 */\r\n  confirmText?: string\r\n}\r\n\r\n/**\r\n * 通用操作按钮\r\n */\r\nexport default class ActionBtn {\r\n  private opts: ActionBtnOptions\r\n  public $el: HTMLElement\r\n\r\n  public isLoading = false // 正在加载\r\n\r\n  public msgRecTimer?: number // 消息显示复原定时器\r\n  public msgRecTimerFunc?: () => void // 消息显示复原操作\r\n  public get isMessaging() {\r\n    return !!this.msgRecTimer\r\n  } // 消息正在显示\r\n\r\n  public isConfirming = false // 正在确认\r\n  public confirmRecTimer?: number // 确认消息复原定时器\r\n\r\n  /** 构造函数 */\r\n  constructor(opts: ActionBtnOptions | string | (() => string)) {\r\n    this.$el = Utils.createElement(`<span class=\"atk-common-action-btn\"></span>`)\r\n\r\n    this.opts = typeof opts !== 'object' ? { text: opts } : opts\r\n    this.$el.innerText = this.getText()\r\n\r\n    // 仅管理员可操作\r\n    if (this.opts.adminOnly) this.$el.setAttribute('atk-only-admin-show', '')\r\n  }\r\n\r\n  /** 将按钮装载到指定元素 */\r\n  public appendTo(dom: HTMLElement) {\r\n    dom.append(this.$el)\r\n    return this\r\n  }\r\n\r\n  /** 获取按钮文字（动态/静态） */\r\n  private getText() {\r\n    return typeof this.opts.text === 'string' ? this.opts.text : this.opts.text()\r\n  }\r\n\r\n  /** 设置点击事件 */\r\n  public setClick(func: () => void) {\r\n    this.$el.onclick = (e) => {\r\n      e.stopPropagation() // 防止穿透\r\n\r\n      // 按钮处于加载状态，禁止点击\r\n      if (this.isLoading) {\r\n        return\r\n      }\r\n\r\n      // 操作确认\r\n      if (this.opts.confirm && !this.isMessaging) {\r\n        const confirmRestore = () => {\r\n          this.isConfirming = false\r\n          this.$el.classList.remove('atk-btn-confirm')\r\n          this.$el.innerText = this.getText()\r\n        }\r\n\r\n        if (!this.isConfirming) {\r\n          this.isConfirming = true\r\n          this.$el.classList.add('atk-btn-confirm')\r\n          this.$el.innerText = this.opts.confirmText || $t('actionConfirm')\r\n          this.confirmRecTimer = window.setTimeout(() => confirmRestore(), 5000)\r\n          return\r\n        }\r\n\r\n        if (this.confirmRecTimer) window.clearTimeout(this.confirmRecTimer)\r\n        confirmRestore()\r\n      }\r\n\r\n      // 立刻释放掉原有的定时器（当显示消息后，用户立刻点击时）\r\n      if (this.msgRecTimer) {\r\n        this.fireMsgRecTimer()\r\n        this.clearMsgRecTimer()\r\n        return\r\n      }\r\n\r\n      // 触发设定的点击事件\r\n      func()\r\n    }\r\n  }\r\n\r\n  /** 文字刷新（动态/静态） */\r\n  public updateText(text?: (() => string) | string) {\r\n    if (text) this.opts.text = text\r\n    this.setLoading(false)\r\n    this.$el.innerText = this.getText()\r\n  }\r\n\r\n  /** 设置加载状态 */\r\n  public setLoading(value: boolean, loadingText?: string) {\r\n    if (this.isLoading === value) return\r\n    this.isLoading = value\r\n    if (value) {\r\n      this.$el.classList.add('atk-btn-loading')\r\n      this.$el.innerText = loadingText || `${$t('loading')}...`\r\n    } else {\r\n      this.$el.classList.remove('atk-btn-loading')\r\n      this.$el.innerText = this.getText()\r\n    }\r\n  }\r\n\r\n  /** 错误消息 */\r\n  public setError(text: string) {\r\n    this.setMsg(text, 'atk-btn-error')\r\n  }\r\n\r\n  /** 警告消息 */\r\n  public setWarn(text: string) {\r\n    this.setMsg(text, 'atk-btn-warn')\r\n  }\r\n\r\n  /** 成功消息 */\r\n  public setSuccess(text: string) {\r\n    this.setMsg(text, 'atk-btn-success')\r\n  }\r\n\r\n  /** 设置消息 */\r\n  public setMsg(text: string, className?: string, duringTime?: number, after?: () => void) {\r\n    this.setLoading(false)\r\n    if (className) this.$el.classList.add(className)\r\n    this.$el.innerText = text\r\n\r\n    // 设定复原 timer\r\n    this.setMsgRecTimer(() => {\r\n      this.$el.innerText = this.getText()\r\n      if (className) this.$el.classList.remove(className)\r\n      if (after) after()\r\n    }, duringTime || 2500) // 消息默认显示持续 2500s\r\n  }\r\n\r\n  /** 设置消息复原操作定时器 */\r\n  private setMsgRecTimer(func: () => void, duringTime: number) {\r\n    this.fireMsgRecTimer()\r\n    this.clearMsgRecTimer()\r\n\r\n    this.msgRecTimerFunc = func\r\n    this.msgRecTimer = window.setTimeout(() => {\r\n      func()\r\n      this.clearMsgRecTimer()\r\n    }, duringTime)\r\n  }\r\n\r\n  /** 立刻触发器复原定时器 */\r\n  private fireMsgRecTimer() {\r\n    if (this.msgRecTimerFunc) this.msgRecTimerFunc()\r\n  }\r\n\r\n  /** 仅清除 timer */\r\n  private clearMsgRecTimer() {\r\n    if (this.msgRecTimer) window.clearTimeout(this.msgRecTimer)\r\n    this.msgRecTimer = undefined\r\n    this.msgRecTimerFunc = undefined\r\n  }\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport ActionBtn from '../../components/action-btn'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 评论操作按钮界面\r\n */\r\nexport default function renderActions(r: Render) {\r\n  Object.entries({\r\n    renderVote,\r\n    renderReply,\r\n    // 管理员操作\r\n    // renderCollapse,\r\n    // renderModerator,\r\n    // renderPin,\r\n    // renderEdit,\r\n    // renderDel,\r\n  }).forEach(([name, render]) => {\r\n    render(r)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 投票\r\nfunction renderVote(r: Render) {\r\n  if (!r.opts.vote) return // 关闭投票功能\r\n\r\n  // 赞同按钮\r\n  r.voteBtnUp = new ActionBtn(() => `${$t('voteUp')} (${r.data.vote_up || 0})`).appendTo(r.$actions)\r\n  r.voteBtnUp.setClick(() => {\r\n    r.comment.getActions().vote('up')\r\n  })\r\n\r\n  // 反对按钮\r\n  if (r.opts.voteDown) {\r\n    r.voteBtnDown = new ActionBtn(() => `${$t('voteDown')} (${r.data.vote_down || 0})`).appendTo(\r\n      r.$actions,\r\n    )\r\n    r.voteBtnDown.setClick(() => {\r\n      r.comment.getActions().vote('down')\r\n    })\r\n  }\r\n}\r\n\r\n// 操作按钮 - 回复\r\nfunction renderReply(r: Render) {\r\n  if (!r.data.is_allow_reply) return // 不允许回复\r\n\r\n  const replyBtn = Utils.createElement(`<span>${$t('reply')}</span>`)\r\n  r.$actions.append(replyBtn)\r\n  replyBtn.addEventListener('click', (e) => {\r\n    e.stopPropagation() // 防止穿透\r\n    r.opts.replyComment(r.data, r.$el)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 折叠\r\nfunction renderCollapse(r: Render) {\r\n  const collapseBtn = new ActionBtn({\r\n    text: () => (r.data.is_collapsed ? $t('expand') : $t('collapse')),\r\n    adminOnly: true,\r\n  })\r\n  collapseBtn.appendTo(r.$actions)\r\n  collapseBtn.setClick(() => {\r\n    r.comment.getActions().adminEdit('collapsed', collapseBtn)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 审核\r\nfunction renderModerator(r: Render) {\r\n  const pendingBtn = new ActionBtn({\r\n    text: () => (r.data.is_pending ? $t('pending') : $t('approved')),\r\n    adminOnly: true,\r\n  })\r\n  pendingBtn.appendTo(r.$actions)\r\n  pendingBtn.setClick(() => {\r\n    r.comment.getActions().adminEdit('pending', pendingBtn)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 置顶\r\nfunction renderPin(r: Render) {\r\n  const pinnedBtn = new ActionBtn({\r\n    text: () => (r.data.is_pinned ? $t('unpin') : $t('pin')),\r\n    adminOnly: true,\r\n  })\r\n  pinnedBtn.appendTo(r.$actions)\r\n  pinnedBtn.setClick(() => {\r\n    r.comment.getActions().adminEdit('pinned', pinnedBtn)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 编辑\r\nfunction renderEdit(r: Render) {\r\n  const editBtn = new ActionBtn({\r\n    text: $t('edit'),\r\n    adminOnly: true,\r\n  })\r\n  editBtn.appendTo(r.$actions)\r\n  editBtn.setClick(() => {\r\n    r.opts.editComment(r.data, r.$el)\r\n  })\r\n}\r\n\r\n// 操作按钮 - 删除\r\nfunction renderDel(r: Render) {\r\n  const delBtn = new ActionBtn({\r\n    text: $t('delete'),\r\n    confirm: true,\r\n    confirmText: $t('deleteConfirm'),\r\n    adminOnly: true,\r\n  })\r\n  delBtn.appendTo(r.$actions)\r\n  delBtn.setClick(() => {\r\n    r.comment.getActions().adminDelete(delBtn)\r\n  })\r\n}\r\n","import type Render from '../render'\r\nimport Avatar from './avatar'\r\nimport Header from './header'\r\nimport Content from './content'\r\nimport ReplyAt from './reply-at'\r\nimport ReplyTo from './reply-to'\r\nimport Pending from './pending'\r\nimport Actions from './actions'\r\n\r\nconst Renders = {\r\n  Avatar,\r\n  Header,\r\n  Content,\r\n  ReplyAt,\r\n  ReplyTo,\r\n  Pending,\r\n  Actions,\r\n}\r\n\r\nexport default function loadRenders(r: Render) {\r\n  Object.entries(Renders).forEach(([name, render]) => {\r\n    render(r)\r\n  })\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\n\r\n/**\r\n * 评论头像界面\r\n */\r\nexport default function renderAvatar(r: Render) {\r\n  const $avatar = r.$el.querySelector<HTMLElement>('.atk-avatar')!\r\n  const $avatarImg = Utils.createElement<HTMLImageElement>('<img />')\r\n\r\n  const avatarURLBuilder = r.opts.avatarURLBuilder\r\n  $avatarImg.src = avatarURLBuilder ? avatarURLBuilder(r.data) : r.comment.getGravatarURL()\r\n\r\n  // if (r.data.link) {\r\n  //   const $avatarA = Utils.createElement<HTMLLinkElement>(\r\n  //     '<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>',\r\n  //   )\r\n  //   $avatarA.href = Utils.isValidURL(r.data.link) ? r.data.link : `https://${r.data.link}`\r\n  //   $avatarA.append($avatarImg)\r\n  //   $avatar.append($avatarA)\r\n  // } else {\r\n  //   $avatar.append($avatarImg)\r\n  // }\r\n  $avatar.append($avatarImg)\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport * as Ui from '../../lib/ui'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 评论内容界面\r\n */\r\nexport default function renderContent(r: Render) {\r\n  if (!r.data.is_collapsed) {\r\n    r.$content.innerHTML = r.comment.getContentMarked()\r\n    r.$content.classList.remove('atk-hide', 'atk-collapsed')\r\n    return\r\n  }\r\n\r\n  // 内容 & 折叠\r\n  r.$content.classList.add('atk-hide', 'atk-type-collapsed')\r\n  const collapsedInfoEl = Utils.createElement(`\r\n    <div class=\"atk-collapsed\">\r\n      <span class=\"atk-text\">${$t('collapsedMsg')}</span>\r\n      <span class=\"atk-show-btn\">${$t('expand')}</span>\r\n    </div>`)\r\n  r.$body.insertAdjacentElement('beforeend', collapsedInfoEl)\r\n\r\n  const contentShowBtn = collapsedInfoEl.querySelector<HTMLElement>('.atk-show-btn')!\r\n  contentShowBtn.addEventListener('click', (e) => {\r\n    e.stopPropagation() // 防止穿透\r\n\r\n    if (r.$content.classList.contains('atk-hide')) {\r\n      r.$content.innerHTML = r.comment.getContentMarked()\r\n      r.$content.classList.remove('atk-hide')\r\n      Ui.playFadeInAnim(r.$content)\r\n      contentShowBtn.innerText = $t('collapse')\r\n    } else {\r\n      r.$content.innerHTML = ''\r\n      r.$content.classList.add('atk-hide')\r\n      contentShowBtn.innerText = $t('expand')\r\n    }\r\n  })\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\n\r\n/**\r\n * Reply user indicator (with arrow icon) in the comment meta header\r\n */\r\nexport default function renderReplyAt(r: Render) {\r\n  if (r.opts.flatMode || r.data.rid === 0) return // if not nested mode or root comment\r\n  if (!r.opts.replyTo) return // if no replyTo data\r\n\r\n  r.$replyAt = Utils.createElement(\r\n    `<span class=\"atk-item atk-reply-at\"><span class=\"atk-nick\"></span></span>`,\r\n  )\r\n\r\n  r.$replyAt.querySelector<HTMLElement>('.atk-nick')!.innerText = `@${r.opts.replyTo.nick}`\r\n  r.$replyAt.onclick = () => {\r\n    r.comment.getActions().goToReplyComment()\r\n  }\r\n\r\n  // 在 $content 前插入\r\n  (r.$content?.firstChild as HTMLElement)!.insertAdjacentElement('afterbegin', r.$replyAt)\r\n\r\n  // r.$content.insertAdjacentElement('afterend', r.$replyAt)\r\n}\r\n","import type Render from '../render'\r\nimport * as Utils from '@/lib/utils'\r\nimport marked from '@/lib/marked'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 关联评论显示 (被回复的评论)\r\n */\r\nexport default function renderReplyTo(r: Render) {\r\n  if (!r.opts.flatMode) return // 仅平铺模式显示\r\n  if (!r.opts.replyTo) return\r\n\r\n  r.$replyTo = Utils.createElement(`\r\n    <div class=\"atk-reply-to\">\r\n      <div class=\"atk-meta\">${$t('reply')} <span class=\"atk-nick\"></span>:</div>\r\n      <div class=\"atk-content\"></div>\r\n    </div>`)\r\n\r\n  // Comment author name\r\n  const $nick = r.$replyTo.querySelector<HTMLElement>('.atk-nick')!\r\n  $nick.innerText = `@${r.opts.replyTo.nick}`\r\n  $nick.onclick = () => {\r\n    r.comment.getActions().goToReplyComment()\r\n  }\r\n\r\n  // Comment content\r\n  let replyContent = marked(r.opts.replyTo.content)\r\n  if (r.opts.replyTo.is_collapsed) replyContent = `[${$t('collapsed')}]`\r\n  r.$replyTo.querySelector<HTMLElement>('.atk-content')!.innerHTML = replyContent\r\n\r\n  // Mount the replyTo element\r\n  r.$body.prepend(r.$replyTo)\r\n}\r\n","import * as Utils from '../../lib/utils'\r\nimport type Render from '../render'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 待审核状态界面\r\n */\r\nexport default function renderPending(r: Render) {\r\n  if (!r.data.is_pending) return\r\n\r\n  const pendingEl = Utils.createElement(`<div class=\"atk-pending\">${$t('pendingMsg')}</div>`)\r\n  r.$body.prepend(pendingEl)\r\n}\r\n","import ActionBtn from '../components/action-btn'\r\nimport * as Utils from '../lib/utils'\r\nimport * as Ui from '../lib/ui'\r\n\r\nimport * as HeightLimit from './height-limit'\r\nimport CommentHTML from './comment.html?raw'\r\nimport loadRenders from './renders'\r\nimport type { CommentNode } from '.'\r\n\r\nexport default class Render {\r\n  public comment: CommentNode\r\n\r\n  public get data() {\r\n    return this.comment.getData()\r\n  }\r\n  public get opts() {\r\n    return this.comment.getOpts()\r\n  }\r\n\r\n  public $el!: HTMLElement\r\n  public $main!: HTMLElement\r\n  public $header!: HTMLElement\r\n  public $headerNick!: HTMLElement\r\n  public $headerBadgeWrap!: HTMLElement\r\n  public $body!: HTMLElement\r\n  public $content!: HTMLElement\r\n  public $childrenWrap!: HTMLElement | null\r\n  public $actions!: HTMLElement\r\n  public voteBtnUp?: ActionBtn\r\n  public voteBtnDown?: ActionBtn\r\n\r\n  public $replyTo?: HTMLElement // 回复评论内容 (平铺下显示)\r\n  public $replyAt?: HTMLElement // 回复 AT（层级嵌套下显示）\r\n\r\n  public constructor(comment: CommentNode) {\r\n    this.comment = comment\r\n  }\r\n\r\n  /**\r\n   * Render the comment ui\r\n   *\r\n   * If comment data is updated, call this method to re-render the comment ui.\r\n   * The method will be called multiple times, so it should be idempotent.\r\n   *\r\n   * Renders may add event listeners to the comment ui, so it should be called only once or override the original.\r\n   * Please be aware of the memory leak caused by the event listener.\r\n   */\r\n  public render() {\r\n    // init ui elements\r\n    this.$el = Utils.createElement(CommentHTML)\r\n\r\n    this.$main = this.$el.querySelector('.atk-main')!\r\n    this.$header = this.$el.querySelector('.atk-header')!\r\n    this.$body = this.$el.querySelector('.atk-body')!\r\n    this.$content = this.$body.querySelector('.atk-content')!\r\n    this.$actions = this.$el.querySelector('.atk-actions')!\r\n\r\n    this.$el.setAttribute('id', `atk-comment-${this.data.id}`)\r\n\r\n    // call all renders\r\n    loadRenders(this)\r\n\r\n    // append children wrap if exists\r\n    if (this.$childrenWrap) {\r\n      this.$main.append(this.$childrenWrap)\r\n    }\r\n\r\n    return this.$el\r\n  }\r\n\r\n  /** 内容限高检测 */\r\n  public checkHeightLimit() {\r\n    const conf = this.opts.heightLimit\r\n    if (!conf || !conf.content || !conf.children) return // 关闭限高\r\n\r\n    const contentMaxH = conf.content\r\n    const childrenMaxH = conf.children\r\n\r\n    HeightLimit.check(\r\n      {\r\n        afterExpandBtnClick: () => {\r\n          // 子评论数仅有 1，直接取消限高\r\n          const children = this.comment.getChildren()\r\n          if (children.length === 1)\r\n            HeightLimit.disposeHeightLimit(children[0].getRender().$content)\r\n        },\r\n        scrollable: conf.scrollable,\r\n      },\r\n      [\r\n        // 评论内容限高\r\n        { el: this.$content, max: contentMaxH, imgCheck: true },\r\n        { el: this.$replyTo, max: contentMaxH, imgCheck: true },\r\n        // 子评论区域限高（仅嵌套模式）\r\n        { el: this.$childrenWrap, max: childrenMaxH, imgCheck: false },\r\n      ],\r\n    )\r\n  }\r\n\r\n  /** 子评论区域移除限高 */\r\n  public heightLimitRemoveForChildren() {\r\n    if (!this.$childrenWrap) return\r\n    HeightLimit.disposeHeightLimit(this.$childrenWrap)\r\n  }\r\n\r\n  /** 渐出动画 */\r\n  playFadeAnim() {\r\n    Ui.playFadeInAnim(this.comment.getRender().$el)\r\n  }\r\n\r\n  /** 渐出动画 · 评论内容区域 */\r\n  playFadeAnimForBody() {\r\n    Ui.playFadeInAnim(this.comment.getRender().$body)\r\n  }\r\n\r\n  /** Perform the flash animation */\r\n  playFlashAnim() {\r\n    // Make sure the class is removed\r\n    this.$el.classList.remove('atk-flash-once')\r\n    window.setTimeout(() => {\r\n      // Add the class to perform the animation\r\n      this.$el.classList.add('atk-flash-once')\r\n    }, 150)\r\n  }\r\n\r\n  /** 获取子评论 Wrap */\r\n  public getChildrenWrap() {\r\n    if (!this.$childrenWrap) {\r\n      // if not exists, create a new one\r\n      this.$childrenWrap = Utils.createElement('<div class=\"atk-comment-children\"></div>')\r\n      this.$main.append(this.$childrenWrap)\r\n    }\r\n    return this.$childrenWrap\r\n  }\r\n\r\n  /** 设置已读 */\r\n  public setUnread(val: boolean) {\r\n    if (val) this.$el.classList.add('atk-unread')\r\n    else this.$el.classList.remove('atk-unread')\r\n  }\r\n\r\n  /** 设置为可点击的评论 */\r\n  public setOpenable(val: boolean) {\r\n    if (val) this.$el.classList.add('atk-openable')\r\n    else this.$el.classList.remove('atk-openable')\r\n  }\r\n\r\n  /** 设置点击评论打开置顶 URL */\r\n  public setOpenURL(url: string) {\r\n    this.setOpenable(true)\r\n    this.$el.onclick = (evt) => {\r\n      evt.stopPropagation()\r\n      window.open(url)\r\n    }\r\n  }\r\n\r\n  /** 设置点击评论时的操作 */\r\n  public setOpenAction(action: () => void) {\r\n    this.setOpenable(true)\r\n    this.$el.onclick = (evt) => {\r\n      evt.stopPropagation()\r\n      action()\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-comment-wrap\\\">\\r\\n  <div class=\\\"atk-comment\\\">\\r\\n    <div class=\\\"atk-avatar\\\"></div>\\r\\n    <div class=\\\"atk-main\\\">\\r\\n      <div class=\\\"atk-header\\\">\\r\\n        <span class=\\\"atk-item atk-nick\\\"></span>\\r\\n        <span class=\\\"atk-badge-wrap\\\"></span>\\r\\n        <span class=\\\"atk-item atk-date\\\"></span>\\r\\n      </div>\\r\\n      <div class=\\\"atk-body\\\">\\r\\n        <div class=\\\"atk-content\\\"></div>\\r\\n      </div>\\r\\n      <div class=\\\"atk-footer\\\">\\r\\n        <div class=\\\"atk-actions\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import type { CommentNode } from '.'\r\nimport ActionBtn from '@/components/action-btn'\r\nimport $t from '@/i18n'\r\n\r\nexport default class CommentActions {\r\n  private comment: CommentNode\r\n\r\n  private get data() {\r\n    return this.comment.getData()\r\n  }\r\n  private get opts() {\r\n    return this.comment.getOpts()\r\n  }\r\n  private getApi() {\r\n    return this.comment.getOpts().getApi()\r\n  }\r\n\r\n  public constructor(comment: CommentNode) {\r\n    this.comment = comment\r\n  }\r\n\r\n  /** 投票操作 */\r\n  public vote(type: 'up' | 'down') {\r\n    const actionBtn =\r\n      type === 'up' ? this.comment.getRender().voteBtnUp : this.comment.getRender().voteBtnDown\r\n\r\n    this.getApi()\r\n      .votes.vote(`comment_${type}`, this.data.id, {\r\n        ...this.getApi().getUserFields(),\r\n      })\r\n      .then((res) => {\r\n        this.data.vote_up = res.data.up\r\n        this.data.vote_down = res.data.down\r\n        this.comment.getRender().voteBtnUp?.updateText()\r\n        this.comment.getRender().voteBtnDown?.updateText()\r\n      })\r\n      .catch((err) => {\r\n        actionBtn?.setError($t('voteFail'))\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  /** 管理员 - 评论状态修改 */\r\n  public adminEdit(type: 'collapsed' | 'pending' | 'pinned', btnElem: ActionBtn) {\r\n    if (btnElem.isLoading) return // 若正在修改中\r\n\r\n    btnElem.setLoading(true, `${$t('editing')}...`)\r\n\r\n    // 克隆并修改当前数据\r\n    const modify = { ...this.data }\r\n    if (type === 'collapsed') {\r\n      modify.is_collapsed = !modify.is_collapsed\r\n    } else if (type === 'pending') {\r\n      modify.is_pending = !modify.is_pending\r\n    } else if (type === 'pinned') {\r\n      modify.is_pinned = !modify.is_pinned\r\n    }\r\n\r\n    this.getApi()\r\n      .comments.updateComment(this.data.id, {\r\n        ...modify,\r\n      })\r\n      .then((res) => {\r\n        btnElem.setLoading(false)\r\n\r\n        // 刷新当前 Comment UI\r\n        this.comment.setData(res.data)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        btnElem.setError($t('editFail'))\r\n      })\r\n  }\r\n\r\n  /** 管理员 - 评论删除 */\r\n  public adminDelete(btnElem: ActionBtn) {\r\n    if (btnElem.isLoading) return // 若正在删除中\r\n\r\n    btnElem.setLoading(true, `${$t('deleting')}...`)\r\n    this.getApi()\r\n      .comments.deleteComment(this.data.id)\r\n      .then(() => {\r\n        btnElem.setLoading(false)\r\n        if (this.opts.onDelete) this.opts.onDelete(this.comment)\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        btnElem.setError($t('deleteFail'))\r\n      })\r\n  }\r\n\r\n  /** 快速跳转到该评论 */\r\n  public goToReplyComment() {\r\n    const origHash = window.location.hash\r\n    const modifyHash = `#atk-comment-${this.data.rid}`\r\n\r\n    window.location.hash = modifyHash\r\n    if (modifyHash === origHash) window.dispatchEvent(new Event('hashchange')) // 强制触发事件\r\n  }\r\n}\r\n","import type { Api } from '../api'\r\nimport * as Ui from '../lib/ui'\r\nimport * as Utils from '../lib/utils'\r\nimport marked from '../lib/marked'\r\nimport UADetect from '../lib/detect'\r\nimport CommentUI from './render'\r\nimport CommentActions from './actions'\r\nimport $t from '@/i18n'\r\nimport type { CommentData, ArtalkConfig, ContextApi } from '@/types'\r\n\r\nexport interface CommentOptions {\r\n  // Hooks\r\n  onAfterRender?: () => void\r\n  onDelete?: (c: CommentNode) => void\r\n\r\n  /** The comment being replied to (linked comment) */\r\n  replyTo?: CommentData\r\n\r\n  // Referenced from ArtalkConfig\r\n  flatMode: boolean\r\n  vote: boolean\r\n  voteDown: boolean\r\n  uaBadge: boolean\r\n  nestMax: number\r\n  gravatar: ArtalkConfig['gravatar']\r\n  heightLimit: ArtalkConfig['heightLimit']\r\n  avatarURLBuilder: ArtalkConfig['avatarURLBuilder']\r\n  scrollRelativeTo: ArtalkConfig['scrollRelativeTo']\r\n\r\n  // TODO: Move to plugin folder and remove from core\r\n  getApi: () => Api\r\n  replyComment: ContextApi['replyComment']\r\n  editComment: ContextApi['editComment']\r\n}\r\n\r\nexport default class CommentNode {\r\n  $el?: HTMLElement\r\n\r\n  private renderInstance: CommentUI\r\n  private actionInstance: CommentActions\r\n\r\n  private data: CommentData\r\n  private opts: CommentOptions\r\n\r\n  private parent: CommentNode | null\r\n  private children: CommentNode[] = []\r\n\r\n  private nestCurt: number // 当前嵌套层数\r\n\r\n  constructor(data: CommentData, opts: CommentOptions) {\r\n    this.opts = opts\r\n    this.data = { ...data }\r\n    this.data.date = this.data.date.replace(/-/g, '/') // 解决 Safari 日期解析 NaN 问题\r\n\r\n    this.parent = null\r\n    this.nestCurt = 1 // 现在已嵌套 n 层\r\n\r\n    this.actionInstance = new CommentActions(this)\r\n    this.renderInstance = new CommentUI(this)\r\n  }\r\n\r\n  /** 渲染 UI */\r\n  public render() {\r\n    const newEl = this.renderInstance.render()\r\n\r\n    if (this.$el) this.$el.replaceWith(newEl)\r\n    this.$el = newEl\r\n    // Please be aware of the memory leak, the $el may be replaced multiple times.\r\n    // If somewhere else has a reference to the old $el, it will cause a memory leak.\r\n    // So it's limited to use the $el reference by `getEl()`.\r\n    // The `getEl()` will always return the latest $el.\r\n\r\n    if (this.opts.onAfterRender) this.opts.onAfterRender()\r\n  }\r\n\r\n  /** 获取评论操作实例对象 */\r\n  public getActions() {\r\n    return this.actionInstance\r\n  }\r\n\r\n  /** 获取评论渲染器实例对象 */\r\n  public getRender() {\r\n    return this.renderInstance\r\n  }\r\n\r\n  /** 获取评论数据 */\r\n  public getData() {\r\n    return this.data\r\n  }\r\n\r\n  /** 设置数据 */\r\n  public setData(data: CommentData) {\r\n    this.data = data\r\n\r\n    this.render()\r\n    this.getRender().playFadeAnimForBody()\r\n  }\r\n\r\n  /** 获取父评论 */\r\n  public getParent() {\r\n    return this.parent\r\n  }\r\n\r\n  /** 获取所有子评论 */\r\n  public getChildren() {\r\n    return this.children\r\n  }\r\n\r\n  /** 获取当前嵌套层数 */\r\n  public getNestCurt() {\r\n    return this.nestCurt\r\n  }\r\n\r\n  /** 判断是否为根评论 */\r\n  public getIsRoot() {\r\n    return this.data.rid === 0\r\n  }\r\n\r\n  /** 获取评论 ID */\r\n  public getID() {\r\n    return this.data.id\r\n  }\r\n\r\n  /** 置入子评论 */\r\n  public putChild(childNode: CommentNode, insertMode: 'append' | 'prepend' = 'append') {\r\n    childNode.parent = this\r\n    childNode.nestCurt = this.nestCurt + 1 // 嵌套层数 +1\r\n    this.children.push(childNode)\r\n\r\n    const $childrenWrap = this.getChildrenWrapEl()\r\n    const $childComment = childNode.getEl()\r\n    if (insertMode === 'append') $childrenWrap.append($childComment)\r\n    else if (insertMode === 'prepend') $childrenWrap.prepend($childComment)\r\n\r\n    childNode.getRender().playFadeAnim()\r\n    childNode.getRender().checkHeightLimit() // 内容限高\r\n  }\r\n\r\n  /** 获取存放子评论的元素对象 */\r\n  public getChildrenWrapEl(): HTMLElement {\r\n    // console.log(this.nestCurt)\r\n    if (this.nestCurt >= this.opts.nestMax) {\r\n      return this.parent!.getChildrenWrapEl()\r\n    }\r\n    return this.getRender().getChildrenWrap()\r\n  }\r\n\r\n  /** 获取所有父评论 */\r\n  public getParents() {\r\n    const flattenParents: CommentNode[] = []\r\n    let parent = this.parent\r\n    while (parent) {\r\n      flattenParents.push(parent)\r\n      parent = parent.getParent()\r\n    }\r\n    return flattenParents\r\n  }\r\n\r\n  /**\r\n   * Get the element of the comment\r\n   *\r\n   * The `getEl()` will always return the latest $el after calling `render()`.\r\n   * Please be aware of the memory leak if you use the $el reference directly.\r\n   */\r\n  public getEl() {\r\n    if (!this.$el) throw new Error('comment element not initialized before `getEl()`')\r\n    return this.$el\r\n  }\r\n\r\n  /**\r\n   * Focus on the comment\r\n   *\r\n   * Scroll to the comment and perform flash animation\r\n   */\r\n  focus() {\r\n    if (!this.$el) throw new Error('comment element not initialized before `focus()`')\r\n\r\n    // 若父评论存在 “子评论部分” 限高，取消限高\r\n    this.getParents().forEach((p) => {\r\n      p.getRender().heightLimitRemoveForChildren()\r\n    })\r\n\r\n    // Scroll to comment\r\n    this.scrollIntoView()\r\n\r\n    // Perform flash animation\r\n    this.getRender().playFlashAnim()\r\n  }\r\n\r\n  scrollIntoView() {\r\n    this.$el &&\r\n      Ui.scrollIntoView(this.$el, false, this.opts.scrollRelativeTo && this.opts.scrollRelativeTo())\r\n  }\r\n\r\n  /**\r\n   * Remove the comment node\r\n   */\r\n  remove() {\r\n    this.$el?.remove()\r\n  }\r\n\r\n  /** 获取 Gravatar 头像 URL */\r\n  public getGravatarURL() {\r\n    return Utils.getGravatarURL({\r\n      mirror: this.opts.gravatar.mirror,\r\n      params: this.opts.gravatar.params,\r\n      emailHash: this.data.email_encrypted,\r\n    })\r\n  }\r\n\r\n  /** 获取评论 markdown 解析后的内容 */\r\n  public getContentMarked() {\r\n    return marked(this.data.content)\r\n  }\r\n\r\n  /** 获取格式化后的日期 */\r\n  public getDateFormatted() {\r\n    return Utils.timeAgo(new Date(this.data.date), $t)\r\n  }\r\n\r\n  /** 获取用户 UserAgent 信息 */\r\n  public getUserUA() {\r\n    const info = UADetect(this.data.ua)\r\n    return {\r\n      browser: `${info.browser} ${info.version}`,\r\n      os: `${info.os} ${info.osVersion}`,\r\n    }\r\n  }\r\n\r\n  /** 获取配置 */\r\n  public getOpts() {\r\n    return this.opts\r\n  }\r\n}\r\n","function Detect(userAgent?: string) {\r\n  const win = (window as any) || {}\r\n  const nav = navigator || {}\r\n\r\n  const u = String(userAgent || nav.userAgent)\r\n  const dest = {\r\n    os: '',\r\n    osVersion: '',\r\n    engine: '',\r\n    browser: '',\r\n    device: '',\r\n    language: '',\r\n    version: ''\r\n  }\r\n\r\n  // 内核\r\n  const engineMatch = {\r\n    Trident: u.includes('Trident') || u.includes('NET CLR'),\r\n    Presto: u.includes('Presto'),\r\n    WebKit: u.includes('AppleWebKit'),\r\n    Gecko: u.includes('Gecko/')\r\n  }\r\n\r\n  // 浏览器\r\n  const browserMatch = {\r\n    Safari: u.includes('Safari'),\r\n    Chrome: u.includes('Chrome') || u.includes('CriOS'),\r\n    IE: u.includes('MSIE') || u.includes('Trident'),\r\n    Edge: u.includes('Edge') || u.includes('Edg'),\r\n    Firefox: u.includes('Firefox') || u.includes('FxiOS'),\r\n    'Firefox Focus': u.includes('Focus'),\r\n    Chromium: u.includes('Chromium'),\r\n    Opera: u.includes('Opera') || u.includes('OPR'),\r\n    Vivaldi: u.includes('Vivaldi'),\r\n    Yandex: u.includes('YaBrowser'),\r\n    Kindle: u.includes('Kindle') || u.includes('Silk/'),\r\n    360: u.includes('360EE') || u.includes('360SE'),\r\n    UC: u.includes('UC') || u.includes(' UBrowser'),\r\n    QQBrowser: u.includes('QQBrowser'),\r\n    QQ: u.includes('QQ/'),\r\n    Baidu: u.includes('Baidu') || u.includes('BIDUBrowser'),\r\n    Maxthon: u.includes('Maxthon'),\r\n    Sogou: u.includes('MetaSr') || u.includes('Sogou'),\r\n    LBBROWSER: u.includes('LBBROWSER'),\r\n    '2345Explorer': u.includes('2345Explorer'),\r\n    TheWorld: u.includes('TheWorld'),\r\n    MIUI: u.includes('MiuiBrowser'),\r\n    Quark: u.includes('Quark'),\r\n    Qiyu: u.includes('Qiyu'),\r\n    Wechat: u.includes('MicroMessenger'),\r\n    Taobao: u.includes('AliApp(TB'),\r\n    Alipay: u.includes('AliApp(AP'),\r\n    Weibo: u.includes('Weibo'),\r\n    Douban: u.includes('com.douban.frodo'),\r\n    Suning: u.includes('SNEBUY-APP'),\r\n    iQiYi: u.includes('IqiyiApp'),\r\n  }\r\n\r\n  // 系统或平台\r\n  const osMatch = {\r\n    Windows: u.includes('Windows'),\r\n    Linux: u.includes('Linux') || u.includes('X11'),\r\n    'macOS': u.includes('Macintosh'),\r\n    Android: u.includes('Android') || u.includes('Adr'),\r\n    Ubuntu: u.includes('Ubuntu'),\r\n    FreeBSD: u.includes('FreeBSD'),\r\n    Debian: u.includes('Debian'),\r\n    'Windows Phone': u.includes('IEMobile') || u.includes('Windows Phone'),\r\n    BlackBerry: u.includes('BlackBerry') || u.includes('RIM'),\r\n    MeeGo: u.includes('MeeGo'),\r\n    Symbian: u.includes('Symbian'),\r\n    iOS: u.includes('like Mac OS X'),\r\n    'Chrome OS': u.includes('CrOS'),\r\n    WebOS: u.includes('hpwOS'),\r\n  }\r\n\r\n  // 设备\r\n  const deviceMatch = {\r\n    Mobile: u.includes('Mobi') || u.includes('iPh') || u.includes('480'),\r\n    Tablet: u.includes('Tablet') || u.includes('Pad') || u.includes('Nexus 7')\r\n  }\r\n\r\n  // 修正\r\n  if (deviceMatch.Mobile) {\r\n    deviceMatch.Mobile = !(u.includes('iPad'))\r\n  } else if (browserMatch.Chrome && u.includes('Edg')) {\r\n    // Chrome 内核的 Edge\r\n    browserMatch.Chrome = false\r\n    browserMatch.Edge = true\r\n  } else if (win.showModalDialog && win.chrome) {\r\n    browserMatch.Chrome = false\r\n    browserMatch['360'] = true\r\n  }\r\n\r\n  // 默认设备\r\n  dest.device = 'PC'\r\n\r\n  // 语言\r\n  dest.language = (() => {\r\n    const g = ((nav as any).browserLanguage || nav.language)\r\n    const arr = g.split('-')\r\n    if (arr[1]) arr[1] = arr[1].toUpperCase()\r\n    return arr.join('_')\r\n  })()\r\n\r\n  // 应用判断数据\r\n  const hash = {\r\n    engine: engineMatch,\r\n    browser: browserMatch,\r\n    os: osMatch,\r\n    device: deviceMatch,\r\n  }\r\n  Object.entries(hash).forEach(([type, match]) => {\r\n    Object.entries(match).forEach(([name, result]) => {\r\n      if (result === true) dest[type] = name\r\n    })\r\n  })\r\n\r\n  // 系统版本信息\r\n  const osVersion = {\r\n    Windows: () => {\r\n      const v = u.replace(/^.*Windows NT ([\\d.]+);.*$/, '$1')\r\n      const wvHash = {\r\n        '6.4': '10',\r\n        '6.3': '8.1',\r\n        '6.2': '8',\r\n        '6.1': '7',\r\n        '6.0': 'Vista',\r\n        '5.2': 'XP',\r\n        '5.1': 'XP',\r\n        '5.0': '2000',\r\n        '10.0': '10',\r\n        '11.0': '11' // 自定的，不是微软官方的判断方法\r\n      }\r\n      return wvHash[v] || v\r\n    },\r\n    Android: () => u.replace(/^.*Android ([\\d.]+);.*$/, '$1'),\r\n    iOS: () => u.replace(/^.*OS ([\\d_]+) like.*$/, '$1').replace(/_/g, '.'),\r\n    Debian: () => u.replace(/^.*Debian\\/([\\d.]+).*$/, '$1'),\r\n    'Windows Phone': () => u.replace(/^.*Windows Phone( OS)? ([\\d.]+);.*$/, '$2'),\r\n    'macOS': () => u.replace(/^.*Mac OS X ([\\d_]+).*$/, '$1').replace(/_/g, '.'),\r\n    WebOS: () => u.replace(/^.*hpwOS\\/([\\d.]+);.*$/, '$1')\r\n  }\r\n\r\n  dest.osVersion = ''\r\n  if (osVersion[dest.os]) {\r\n    dest.osVersion = osVersion[dest.os]()\r\n    if (dest.osVersion === u) {\r\n      dest.osVersion = ''\r\n    }\r\n  }\r\n\r\n  // 浏览器版本信息\r\n  const version = {\r\n    Safari: () => u.replace(/^.*Version\\/([\\d.]+).*$/, '$1'),\r\n    Chrome: () => u.replace(/^.*Chrome\\/([\\d.]+).*$/, '$1').replace(/^.*CriOS\\/([\\d.]+).*$/, '$1'),\r\n    IE: () => u.replace(/^.*MSIE ([\\d.]+).*$/, '$1').replace(/^.*rv:([\\d.]+).*$/, '$1'),\r\n    Edge: () => u.replace(/^.*(Edge|Edg|Edg[A-Z]{1})\\/([\\d.]+).*$/, '$2'),\r\n    Firefox: () => u.replace(/^.*Firefox\\/([\\d.]+).*$/, '$1').replace(/^.*FxiOS\\/([\\d.]+).*$/, '$1'),\r\n    'Firefox Focus': () => u.replace(/^.*Focus\\/([\\d.]+).*$/, '$1'),\r\n    Chromium: () => u.replace(/^.*Chromium\\/([\\d.]+).*$/, '$1'),\r\n    Opera: () => u.replace(/^.*Opera\\/([\\d.]+).*$/, '$1').replace(/^.*OPR\\/([\\d.]+).*$/, '$1'),\r\n    Vivaldi: () => u.replace(/^.*Vivaldi\\/([\\d.]+).*$/, '$1'),\r\n    Yandex: () => u.replace(/^.*YaBrowser\\/([\\d.]+).*$/, '$1'),\r\n    Kindle: () => u.replace(/^.*Version\\/([\\d.]+).*$/, '$1'),\r\n    Maxthon: () => u.replace(/^.*Maxthon\\/([\\d.]+).*$/, '$1'),\r\n    QQBrowser: () => u.replace(/^.*QQBrowser\\/([\\d.]+).*$/, '$1'),\r\n    QQ: () => u.replace(/^.*QQ\\/([\\d.]+).*$/, '$1'),\r\n    Baidu: () => u.replace(/^.*BIDUBrowser[\\s/]([\\d.]+).*$/, '$1'),\r\n    UC: () => u.replace(/^.*UC?Browser\\/([\\d.]+).*$/, '$1'),\r\n    Sogou: () => u.replace(/^.*SE ([\\d.X]+).*$/, '$1').replace(/^.*SogouMobileBrowser\\/([\\d.]+).*$/, '$1'),\r\n    '2345Explorer': () => u.replace(/^.*2345Explorer\\/([\\d.]+).*$/, '$1'),\r\n    TheWorld: () => u.replace(/^.*TheWorld ([\\d.]+).*$/, '$1'),\r\n    MIUI: () => u.replace(/^.*MiuiBrowser\\/([\\d.]+).*$/, '$1'),\r\n    Quark: () => u.replace(/^.*Quark\\/([\\d.]+).*$/, '$1'),\r\n    Qiyu: () => u.replace(/^.*Qiyu\\/([\\d.]+).*$/, '$1'),\r\n    Wechat: () => u.replace(/^.*MicroMessenger\\/([\\d.]+).*$/, '$1'),\r\n    Taobao: () => u.replace(/^.*AliApp\\(TB\\/([\\d.]+).*$/, '$1'),\r\n    Alipay: () => u.replace(/^.*AliApp\\(AP\\/([\\d.]+).*$/, '$1'),\r\n    Weibo: () => u.replace(/^.*weibo__([\\d.]+).*$/, '$1'),\r\n    Douban: () => u.replace(/^.*com.douban.frodo\\/([\\d.]+).*$/, '$1'),\r\n    Suning: () => u.replace(/^.*SNEBUY-APP([\\d.]+).*$/, '$1'),\r\n    iQiYi: () => u.replace(/^.*IqiyiVersion\\/([\\d.]+).*$/, '$1'),\r\n  }\r\n\r\n  dest.version = ''\r\n  if (version[dest.browser]) {\r\n    dest.version = version[dest.browser]()\r\n    if (dest.version === u) {\r\n      dest.version = ''\r\n    }\r\n  }\r\n\r\n  // 简化版本号\r\n  /* if (_this.osVersion.indexOf('.')) {\r\n    _this.osVersion = _this.osVersion.substring(0, _this.osVersion.indexOf('.'))\r\n  } */\r\n  if (dest.version.indexOf('.')) {\r\n    dest.version = dest.version.substring(0, dest.version.indexOf('.'))\r\n  }\r\n\r\n  // 修正\r\n  if (dest.os === 'iOS' && u.includes('iPad')) {\r\n    dest.os = 'iPadOS'\r\n  } else if (dest.browser === 'Edge' && !u.includes('Edg')) {\r\n    dest.engine = 'EdgeHTML'\r\n  } else if (dest.browser === 'MIUI') {\r\n    dest.os = 'Android'\r\n  } else if (dest.browser === 'Chrome' && Number(dest.version) > 27) {\r\n    dest.engine = 'Blink'\r\n  } else if (dest.browser === 'Opera' && Number(dest.version) > 12) {\r\n    dest.engine = 'Blink'\r\n  } else if (dest.browser === 'Yandex') {\r\n    dest.engine = 'Blink'\r\n  } else if (dest.browser === undefined) {\r\n    dest.browser = 'Unknow App'\r\n  }\r\n\r\n  return dest\r\n}\r\n\r\nexport default Detect\r\n","import * as Utils from '../lib/utils'\r\n\r\nexport interface ReadMoreBtnOptions {\r\n  /** 回调函数 */\r\n  onClick: (offset: number) => void\r\n\r\n  pageSize: number\r\n\r\n  text?: string\r\n}\r\n\r\n/**\r\n * 阅读更多按钮\r\n */\r\nexport default class ReadMoreBtn {\r\n  public opts: ReadMoreBtnOptions\r\n  public $el: HTMLElement\r\n  private $loading: HTMLElement\r\n  private $text: HTMLElement\r\n  private offset: number = 0\r\n  private total: number = 0\r\n  private origText: string = 'Load More'\r\n\r\n  /** 是否有更多内容 */\r\n  get hasMore() {\r\n    return this.total > this.offset + this.opts.pageSize\r\n  }\r\n\r\n  public constructor(opts: ReadMoreBtnOptions) {\r\n    this.opts = opts\r\n    this.origText = this.opts.text || this.origText\r\n\r\n    this.$el = Utils.createElement(\r\n      `<div class=\"atk-list-read-more\" style=\"display: none;\">\r\n      <div class=\"atk-list-read-more-inner\">\r\n        <div class=\"atk-loading-icon\" style=\"display: none;\"></div>\r\n        <span class=\"atk-text\">${this.origText}</span>\r\n      </div>\r\n    </div>`,\r\n    )\r\n\r\n    this.$loading = this.$el.querySelector<HTMLElement>('.atk-loading-icon')!\r\n    this.$text = this.$el.querySelector<HTMLElement>('.atk-text')!\r\n\r\n    this.$el.onclick = () => {\r\n      this.click()\r\n    }\r\n  }\r\n\r\n  click() {\r\n    if (this.hasMore) this.opts.onClick(this.offset + this.opts.pageSize)\r\n    this.checkDisabled()\r\n  }\r\n\r\n  /** 显示 */\r\n  show() {\r\n    this.$el.style.display = ''\r\n  }\r\n\r\n  /** 隐藏 */\r\n  hide() {\r\n    this.$el.style.display = 'none'\r\n  }\r\n\r\n  /** 加载 */\r\n  setLoading(isLoading: boolean) {\r\n    this.$loading.style.display = isLoading ? '' : 'none'\r\n    this.$text.style.display = isLoading ? 'none' : ''\r\n  }\r\n\r\n  /** 错误提示 */\r\n  showErr(errMsg: string) {\r\n    this.setLoading(false)\r\n\r\n    this.$text.innerText = errMsg\r\n    this.$el.classList.add('atk-err')\r\n    window.setTimeout(() => {\r\n      this.$text.innerText = this.origText\r\n      this.$el.classList.remove('atk-err')\r\n    }, 2000) // 2s后错误提示复原\r\n  }\r\n\r\n  /** 更新数据 */\r\n  public update(offset: number, total: number) {\r\n    this.offset = offset\r\n    this.total = total\r\n\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public checkDisabled() {\r\n    if (this.hasMore) this.show()\r\n    else this.hide()\r\n  }\r\n}\r\n","import type { Paginator, IPgHolderOpt } from '.'\r\nimport type { ListFetchParams } from '@/types'\r\nimport ReadMoreBtn from '@/components/read-more-btn'\r\nimport $t from '@/i18n'\r\n\r\n/**\r\n * 阅读更多形式的分页\r\n */\r\nexport default class ReadMorePaginator implements Paginator {\r\n  private instance!: ReadMoreBtn\r\n  private onReachedBottom: (() => void) | null = null\r\n  private opt!: IPgHolderOpt\r\n\r\n  create(opt: IPgHolderOpt) {\r\n    this.opt = opt\r\n\r\n    this.instance = new ReadMoreBtn({\r\n      pageSize: opt.pageSize,\r\n      onClick: async (o) => {\r\n        opt.ctx.fetch({\r\n          offset: o,\r\n        })\r\n      },\r\n      text: $t('loadMore'),\r\n    })\r\n\r\n    // 滚动到底部自动加载\r\n    if (opt.readMoreAutoLoad) {\r\n      this.onReachedBottom = () => {\r\n        if (!this.instance.hasMore || this.opt.ctx.getData().getLoading()) return\r\n        this.instance.click()\r\n      }\r\n      this.opt.ctx.on('list-reach-bottom', this.onReachedBottom)\r\n    }\r\n\r\n    return this.instance.$el\r\n  }\r\n\r\n  setLoading(val: boolean) {\r\n    this.instance.setLoading(val)\r\n  }\r\n\r\n  update(offset: number, total: number) {\r\n    this.instance.update(offset, total)\r\n  }\r\n\r\n  showErr(msg: string) {\r\n    this.instance.showErr(msg)\r\n  }\r\n\r\n  next() {\r\n    this.instance.click()\r\n  }\r\n\r\n  getHasMore(): boolean {\r\n    return this.instance.hasMore\r\n  }\r\n\r\n  getIsClearComments(params: { offset?: number }): boolean {\r\n    return params.offset === 0\r\n  }\r\n\r\n  dispose(): void {\r\n    this.onReachedBottom && this.opt.ctx.off('list-reach-bottom', this.onReachedBottom)\r\n    this.instance.$el.remove()\r\n  }\r\n}\r\n","import * as Utils from '../lib/utils'\r\nimport * as Ui from '../lib/ui'\r\n\r\nexport interface PaginationOptions {\r\n  /** 每页条数 */\r\n  pageSize: number\r\n\r\n  /** 回调函数 */\r\n  onChange: (offset: number) => void\r\n}\r\n\r\nexport default class Pagination {\r\n  private opts: PaginationOptions\r\n  public total: number\r\n  public $el: HTMLElement\r\n  public $input: HTMLInputElement\r\n  public inputTimer?: number\r\n  public $prevBtn: HTMLElement\r\n  public $nextBtn: HTMLElement\r\n\r\n  public page: number = 1\r\n  get pageSize(): number {\r\n    return this.opts.pageSize\r\n  }\r\n  get offset(): number {\r\n    return this.pageSize * (this.page - 1)\r\n  }\r\n  get maxPage(): number {\r\n    return Math.ceil(this.total / this.pageSize)\r\n  }\r\n\r\n  public constructor(total: number, opts: PaginationOptions) {\r\n    this.total = total\r\n    this.opts = opts\r\n\r\n    this.$el = Utils.createElement(\r\n      `<div class=\"atk-pagination-wrap\">\r\n        <div class=\"atk-pagination\">\r\n          <div class=\"atk-btn atk-btn-prev\" aria-label=\"Previous page\">\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"14px\" width=\"14px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z\"></path></svg>\r\n          </div>\r\n          <input type=\"text\" class=\"atk-input\" aria-label=\"Enter the number of page\" />\r\n          <div class=\"atk-btn atk-btn-next\" aria-label=\"Next page\">\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"14px\" width=\"14px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M294.1 256L167 129c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.3 34 0L345 239c9.1 9.1 9.3 23.7.7 33.1L201.1 417c-4.7 4.7-10.9 7-17 7s-12.3-2.3-17-7c-9.4-9.4-9.4-24.6 0-33.9l127-127.1z\"></path></svg>\r\n          </div>\r\n        </div>\r\n      </div>`,\r\n    )\r\n    this.$input = this.$el.querySelector('.atk-input')!\r\n    this.$input.value = `${this.page}`\r\n\r\n    this.$input.oninput = () => this.input()\r\n    this.$input.onkeydown = (e) => this.keydown(e)\r\n\r\n    this.$prevBtn = this.$el.querySelector('.atk-btn-prev')!\r\n    this.$nextBtn = this.$el.querySelector('.atk-btn-next')!\r\n\r\n    this.$prevBtn.onclick = () => this.prev()\r\n    this.$nextBtn.onclick = () => this.next()\r\n\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public update(offset: number, total: number) {\r\n    this.page = Math.ceil(offset / this.pageSize) + 1\r\n    this.total = total\r\n\r\n    this.setInput(this.page)\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public setInput(page: number) {\r\n    this.$input.value = `${page}`\r\n  }\r\n\r\n  public input(now: boolean = false) {\r\n    window.clearTimeout(this.inputTimer)\r\n\r\n    const value = this.$input.value.trim()\r\n\r\n    const modify = () => {\r\n      if (value === '') {\r\n        this.setInput(this.page)\r\n        return\r\n      }\r\n      let page = Number(value)\r\n      if (Number.isNaN(page)) {\r\n        this.setInput(this.page)\r\n        return\r\n      }\r\n      if (page < 1) {\r\n        this.setInput(this.page)\r\n        return\r\n      }\r\n      if (page > this.maxPage) {\r\n        this.setInput(this.maxPage)\r\n        page = this.maxPage\r\n      }\r\n      this.change(page)\r\n    }\r\n\r\n    // 延迟 800ms 执行\r\n    if (!now) this.inputTimer = window.setTimeout(() => modify(), 800)\r\n    else modify()\r\n  }\r\n\r\n  public prev() {\r\n    const page = this.page - 1\r\n    if (page < 1) {\r\n      return\r\n    }\r\n    this.change(page)\r\n  }\r\n\r\n  public next() {\r\n    const page = this.page + 1\r\n    if (page > this.maxPage) {\r\n      return\r\n    }\r\n    this.change(page)\r\n  }\r\n\r\n  public getHasMore() {\r\n    return this.page + 1 <= this.maxPage\r\n  }\r\n\r\n  public change(page: number) {\r\n    this.page = page\r\n    this.opts.onChange(this.offset)\r\n    this.setInput(page)\r\n    this.checkDisabled()\r\n  }\r\n\r\n  public checkDisabled() {\r\n    if (this.page + 1 > this.maxPage) {\r\n      this.$nextBtn.classList.add('atk-disabled')\r\n    } else {\r\n      this.$nextBtn.classList.remove('atk-disabled')\r\n    }\r\n\r\n    if (this.page - 1 < 1) {\r\n      this.$prevBtn.classList.add('atk-disabled')\r\n    } else {\r\n      this.$prevBtn.classList.remove('atk-disabled')\r\n    }\r\n  }\r\n\r\n  public keydown(e: KeyboardEvent) {\r\n    const keyCode = e.keyCode || e.which\r\n\r\n    if (keyCode === 38) {\r\n      // 上键\r\n      const page = Number(this.$input.value) + 1\r\n      if (page > this.maxPage) {\r\n        return\r\n      }\r\n      this.setInput(page)\r\n      this.input()\r\n    } else if (keyCode === 40) {\r\n      // 下键\r\n      const page = Number(this.$input.value) - 1\r\n      if (page < 1) {\r\n        return\r\n      }\r\n      this.setInput(page)\r\n      this.input()\r\n    } else if (keyCode === 13) {\r\n      // 回车\r\n      this.input(true)\r\n    }\r\n  }\r\n\r\n  /** 加载 */\r\n  setLoading(isLoading: boolean) {\r\n    if (isLoading) Ui.showLoading(this.$el)\r\n    else Ui.hideLoading(this.$el)\r\n  }\r\n}\r\n","import type { Paginator, IPgHolderOpt } from '.'\r\nimport PaginationComponent from '@/components/pagination'\r\n\r\n/**\r\n * 翻页形式的分页\r\n */\r\nexport default class UpDownPaginator implements Paginator {\r\n  private instance!: PaginationComponent\r\n\r\n  create(opt: IPgHolderOpt) {\r\n    this.instance = new PaginationComponent(opt.total, {\r\n      pageSize: opt.pageSize,\r\n      onChange: async (o) => {\r\n        opt.ctx.editorResetState() // 防止评论框被吞\r\n\r\n        opt.ctx.fetch({\r\n          offset: o,\r\n          onSuccess: () => {\r\n            opt.ctx.listGotoFirst()\r\n          },\r\n        })\r\n      },\r\n    })\r\n\r\n    return this.instance.$el\r\n  }\r\n\r\n  setLoading(val: boolean) {\r\n    this.instance.setLoading(val)\r\n  }\r\n\r\n  update(offset: number, total: number) {\r\n    this.instance.update(offset, total)\r\n  }\r\n\r\n  next() {\r\n    this.instance.next()\r\n  }\r\n\r\n  getHasMore(): boolean {\r\n    return this.instance.getHasMore()\r\n  }\r\n\r\n  getIsClearComments(): boolean {\r\n    return true\r\n  }\r\n\r\n  dispose(): void {\r\n    this.instance.$el.remove()\r\n  }\r\n}\r\n","import { Paginator } from './paginator'\r\nimport ReadMorePaginator from './paginator/read-more'\r\nimport UpDownPaginator from './paginator/up-down'\r\nimport $t from '@/i18n'\r\nimport type { ArtalkConfig, ContextApi } from '@/types'\r\n\r\nfunction createPaginatorByConf(conf: Pick<ArtalkConfig, 'pagination'>): Paginator {\r\n  if (conf.pagination.readMore) return new ReadMorePaginator()\r\n  return new UpDownPaginator()\r\n}\r\n\r\nfunction getPageDataByLastData(ctx: ContextApi): {\r\n  offset: number\r\n  total: number\r\n} {\r\n  const last = ctx.getData().getListLastFetch()\r\n  const r = { offset: 0, total: 0 }\r\n  if (!last) return r\r\n\r\n  r.offset = last.params.offset\r\n  if (last.data) r.total = last.params.flatMode ? last.data.count : last.data.roots_count\r\n\r\n  return r\r\n}\r\n\r\nexport const initListPaginatorFunc = (ctx: ContextApi) => {\r\n  let paginator: Paginator | null = null\r\n\r\n  // Init paginator when conf loaded\r\n  ctx.watchConf(['pagination', 'locale'], (conf) => {\r\n    const list = ctx.get('list')\r\n\r\n    if (paginator) paginator.dispose() // if had been init, dispose it\r\n\r\n    // create paginator instance\r\n    paginator = createPaginatorByConf(conf)\r\n\r\n    // create paginator dom\r\n    const { offset, total } = getPageDataByLastData(ctx)\r\n    const $paginator = paginator.create({\r\n      ctx,\r\n      pageSize: conf.pagination.pageSize,\r\n      total,\r\n\r\n      readMoreAutoLoad: conf.pagination.autoLoad,\r\n    })\r\n\r\n    // mount paginator dom\r\n    list.$commentsWrap.after($paginator)\r\n\r\n    // update paginator info\r\n    paginator?.update(offset, total)\r\n  })\r\n\r\n  // When list loaded\r\n  ctx.on('list-loaded', (comments) => {\r\n    // update paginator info\r\n    const { offset, total } = getPageDataByLastData(ctx)\r\n    paginator?.update(offset, total)\r\n  })\r\n\r\n  // When list fetch\r\n  ctx.on('list-fetch', (params) => {\r\n    // if clear comments when fetch new page data\r\n    if (ctx.getData().getComments().length > 0 && paginator?.getIsClearComments(params)) {\r\n      ctx.getData().clearComments()\r\n    }\r\n  })\r\n\r\n  // When list error\r\n  ctx.on('list-failed', () => {\r\n    paginator?.showErr?.($t('loadFail'))\r\n  })\r\n\r\n  // loading\r\n  ctx.on('list-fetch', (params) => {\r\n    paginator?.setLoading(true)\r\n  })\r\n  ctx.on('list-fetched', ({ params }) => {\r\n    paginator?.setLoading(false)\r\n  })\r\n}\r\n","import ListHTML from './list.html?raw'\r\nimport { ListLayout } from './layout'\r\nimport { createCommentNode } from './comment'\r\nimport { initListPaginatorFunc } from './page'\r\nimport type { ContextApi } from '@/types'\r\nimport Component from '@/lib/component'\r\nimport * as Utils from '@/lib/utils'\r\nimport { CommentNode } from '@/comment'\r\n\r\nexport default class List extends Component {\r\n  /** 列表评论集区域元素 */\r\n  $commentsWrap!: HTMLElement\r\n  public getCommentsWrapEl() {\r\n    return this.$commentsWrap\r\n  }\r\n\r\n  protected commentNodes: CommentNode[] = []\r\n  getCommentNodes() {\r\n    return this.commentNodes\r\n  }\r\n\r\n  constructor(ctx: ContextApi) {\r\n    super(ctx)\r\n\r\n    // Init base element\r\n    this.$el = Utils.createElement(ListHTML)\r\n    this.$commentsWrap = this.$el.querySelector('.atk-list-comments-wrap')!\r\n\r\n    // Init paginator\r\n    initListPaginatorFunc(ctx)\r\n\r\n    // Bind events\r\n    this.initCrudEvents()\r\n  }\r\n\r\n  getListLayout({ forceFlatMode }: { forceFlatMode?: boolean } = {}) {\r\n    return new ListLayout({\r\n      $commentsWrap: this.$commentsWrap,\r\n      nestSortBy: this.ctx.conf.nestSort,\r\n      nestMax: this.ctx.conf.nestMax,\r\n      flatMode:\r\n        typeof forceFlatMode === 'boolean' ? forceFlatMode : (this.ctx.conf.flatMode as boolean),\r\n      // flatMode must be boolean because it had been handled when Artalk.init\r\n      createCommentNode: (d, r) => {\r\n        const node = createCommentNode(this.ctx, d, r, { forceFlatMode })\r\n        this.commentNodes.push(node) // store node instance\r\n        return node\r\n      },\r\n      findCommentNode: (id) => this.commentNodes.find((c) => c.getID() === id),\r\n    })\r\n  }\r\n\r\n  private initCrudEvents() {\r\n    this.ctx.on('list-load', (comments) => {\r\n      // 导入数据\r\n      this.getListLayout().import(comments)\r\n    })\r\n\r\n    this.ctx.on('list-loaded', (comments) => {\r\n      if (comments.length === 0) {\r\n        this.commentNodes = []\r\n        this.$commentsWrap.innerHTML = ''\r\n      }\r\n    })\r\n\r\n    // When comment insert\r\n    this.ctx.on('comment-inserted', (comment) => {\r\n      const replyComment = comment.rid\r\n        ? this.commentNodes.find((c) => c.getID() === comment.rid)?.getData()\r\n        : undefined\r\n      this.getListLayout().insert(comment, replyComment)\r\n    })\r\n\r\n    // When comment delete\r\n    this.ctx.on('comment-deleted', (comment) => {\r\n      const node = this.commentNodes.find((c) => c.getID() === comment.id)\r\n      if (!node) {\r\n        console.error(`comment node id=${comment.id} not found`)\r\n        return\r\n      }\r\n      node.remove()\r\n      this.commentNodes = this.commentNodes.filter((c) => c.getID() !== comment.id)\r\n      // TODO: remove child nodes\r\n    })\r\n\r\n    // When comment update\r\n    this.ctx.on('comment-updated', (comment) => {\r\n      const node = this.commentNodes.find((c) => c.getID() === comment.id)\r\n      node && node.setData(comment)\r\n    })\r\n  }\r\n}\r\n","export default \"<div class=\\\"atk-list\\\">\\r\\n  <div class=\\\"atk-list-header\\\">\\r\\n    <div class=\\\"atk-comment-count\\\">\\r\\n      <div class=\\\"atk-text\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"atk-right-action\\\">\\r\\n      <span data-action=\\\"admin-close-comment\\\" class=\\\"atk-hide\\\" atk-only-admin-show></span>\\r\\n      <span data-action=\\\"open-sidebar\\\" class=\\\"atk-hide atk-on\\\">\\r\\n        <span class=\\\"atk-unread-badge\\\" style=\\\"display: none\\\"></span>\\r\\n        <div class=\\\"atk-text\\\"></div>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"atk-list-body\\\">\\r\\n    <div class=\\\"atk-list-comments-wrap\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"atk-list-footer\\\">\\r\\n    <div class=\\\"atk-copyright\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import type { ContextApi, CommentData } from '@/types'\r\nimport { CommentNode } from '@/comment'\r\n\r\ninterface CreateCommentNodeOptions {\r\n  forceFlatMode?: boolean\r\n}\r\n\r\nexport function createCommentNode(\r\n  ctx: ContextApi,\r\n  comment: CommentData,\r\n  replyComment?: CommentData,\r\n  opts?: CreateCommentNodeOptions,\r\n): CommentNode {\r\n  const instance = new CommentNode(comment, {\r\n    onAfterRender: () => {\r\n      ctx.trigger('comment-rendered', instance)\r\n    },\r\n    onDelete: (c: CommentNode) => {\r\n      ctx.getData().deleteComment(c.getID())\r\n    },\r\n\r\n    replyTo: replyComment,\r\n\r\n    // TODO simplify reference\r\n    flatMode:\r\n      typeof opts?.forceFlatMode === 'boolean'\r\n        ? opts?.forceFlatMode\r\n        : (ctx.conf.flatMode as boolean),\r\n    gravatar: ctx.conf.gravatar,\r\n    nestMax: ctx.conf.nestMax,\r\n    heightLimit: ctx.conf.heightLimit,\r\n    avatarURLBuilder: ctx.conf.avatarURLBuilder,\r\n    scrollRelativeTo: ctx.conf.scrollRelativeTo,\r\n    vote: ctx.conf.vote,\r\n    voteDown: ctx.conf.voteDown,\r\n    uaBadge: ctx.conf.uaBadge,\r\n\r\n    // TODO: move to plugin folder and remove from core\r\n    getApi: () => ctx.getApi(),\r\n    replyComment: (c, $el) => ctx.replyComment(c, $el),\r\n    editComment: (c, $el) => ctx.editComment(c, $el),\r\n  })\r\n\r\n  // 渲染元素\r\n  instance.render()\r\n\r\n  return instance\r\n}\r\n","import * as Ui from '@/lib/ui'\r\n\r\nlet bodyOrgOverflow: string\r\nlet bodyOrgPaddingRight: string\r\n\r\nexport function getScrollbarHelper() {\r\n  return {\r\n    init() {\r\n      bodyOrgOverflow = document.body.style.overflow\r\n      bodyOrgPaddingRight = document.body.style.paddingRight\r\n    },\r\n\r\n    unlock() {\r\n      document.body.style.overflow = bodyOrgOverflow\r\n      document.body.style.paddingRight = bodyOrgPaddingRight\r\n    },\r\n\r\n    lock() {\r\n      document.body.style.overflow = 'hidden'\r\n      const barPaddingRight = parseInt(\r\n        window.getComputedStyle(document.body, null).getPropertyValue('padding-right'),\r\n        10,\r\n      )\r\n      document.body.style.paddingRight = `${Ui.getScrollBarWidth() + barPaddingRight || 0}px`\r\n    },\r\n  }\r\n}\r\n","export interface LayerOptions {\r\n  onShow: () => void\r\n  onHide: () => void\r\n}\r\n\r\nexport class Layer {\r\n  private allowMaskClose = true\r\n  private onAfterHide?: () => void\r\n\r\n  constructor(\r\n    private $el: HTMLElement,\r\n    private opts: LayerOptions,\r\n  ) {}\r\n\r\n  setOnAfterHide(func: () => void) {\r\n    this.onAfterHide = func\r\n  }\r\n\r\n  setAllowMaskClose(allow: boolean) {\r\n    this.allowMaskClose = allow\r\n  }\r\n\r\n  getAllowMaskClose() {\r\n    return this.allowMaskClose\r\n  }\r\n\r\n  getEl() {\r\n    return this.$el\r\n  }\r\n\r\n  show() {\r\n    this.opts.onShow()\r\n    this.$el.style.display = ''\r\n  }\r\n\r\n  async hide() {\r\n    this.opts.onHide()\r\n    this.$el.style.display = 'none'\r\n    this.onAfterHide && this.onAfterHide()\r\n  }\r\n\r\n  async destroy() {\r\n    this.opts.onHide()\r\n    this.$el.remove()\r\n    this.onAfterHide && this.onAfterHide()\r\n  }\r\n}\r\n","import { getScrollbarHelper } from './scrollbar-helper'\r\nimport { Layer } from './layer'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport class LayerWrap {\r\n  private $wrap: HTMLElement\r\n  private $mask: HTMLElement\r\n  private items: Layer[] = []\r\n\r\n  constructor() {\r\n    this.$wrap = Utils.createElement(\r\n      `<div class=\"atk-layer-wrap\" style=\"display: none;\"><div class=\"atk-layer-mask\"></div></div>`,\r\n    )\r\n    this.$mask = this.$wrap.querySelector<HTMLElement>('.atk-layer-mask')!\r\n  }\r\n\r\n  createItem(name: string, el?: HTMLElement) {\r\n    // init element\r\n    el = el || this.createItemElement(name)\r\n    el.setAttribute('data-layer-name', name)\r\n    this.$wrap.appendChild(el)\r\n\r\n    // create layer instance\r\n    const layer = new Layer(el, {\r\n      onHide: () => this.hideWrap(el!),\r\n      onShow: () => this.showWrap(),\r\n    })\r\n\r\n    // register mask click event\r\n    this.getMask().addEventListener('click', () => {\r\n      layer.getAllowMaskClose() && layer.hide()\r\n    })\r\n\r\n    // add to items\r\n    this.items.push(layer)\r\n\r\n    return layer\r\n  }\r\n\r\n  private createItemElement(name: string) {\r\n    const el = document.createElement('div')\r\n    el.classList.add('atk-layer-item')\r\n    el.style.display = 'none'\r\n    this.$wrap.appendChild(el)\r\n    return el\r\n  }\r\n\r\n  getWrap() {\r\n    return this.$wrap\r\n  }\r\n\r\n  getMask() {\r\n    return this.$mask\r\n  }\r\n\r\n  showWrap() {\r\n    this.$wrap.style.display = 'block'\r\n    this.$mask.style.display = 'block'\r\n    this.$mask.classList.add('atk-fade-in')\r\n    getScrollbarHelper().lock()\r\n  }\r\n\r\n  hideWrap($el: HTMLElement) {\r\n    // if wrap contains more than one item, do not hide entire wrap\r\n    if (\r\n      this.items\r\n        .map((l) => l.getEl())\r\n        .filter((e) => e !== $el && e.isConnected && e.style.display !== 'none').length > 0\r\n    ) {\r\n      return\r\n    }\r\n\r\n    this.$wrap.style.display = 'none'\r\n    getScrollbarHelper().unlock()\r\n  }\r\n}\r\n","import { getScrollbarHelper } from './scrollbar-helper'\r\nimport { LayerWrap } from './wrap'\r\nimport type { ContextApi } from '@/types'\r\n\r\nexport class LayerManager {\r\n  private wrap: LayerWrap\r\n\r\n  constructor(ctx: ContextApi) {\r\n    this.wrap = new LayerWrap()\r\n    document.body.appendChild(this.wrap.getWrap())\r\n\r\n    ctx.on('unmounted', () => {\r\n      this.wrap.getWrap().remove()\r\n    })\r\n\r\n    // 记录页面原始 CSS 属性\r\n    getScrollbarHelper().init()\r\n  }\r\n\r\n  getEl() {\r\n    return this.wrap.getWrap()\r\n  }\r\n\r\n  create(name: string, el?: HTMLElement) {\r\n    return this.wrap.createItem(name, el)\r\n  }\r\n}\r\n","import type { LocalUser } from '@/types'\r\n\r\nconst LOCAL_USER_KEY = 'ArtalkUser'\r\n\r\ninterface UserOpts {\r\n  onUserChanged?: (user: LocalUser) => void\r\n}\r\n\r\nclass User {\r\n  private data: LocalUser\r\n\r\n  constructor(private opts: UserOpts) {\r\n    // Import from localStorage\r\n    const localUser = JSON.parse(window.localStorage.getItem(LOCAL_USER_KEY) || '{}')\r\n\r\n    // Initialize\r\n    this.data = {\r\n      nick: localUser.nick || '',\r\n      email: localUser.email || '',\r\n      link: localUser.link || '',\r\n      token: localUser.token || '',\r\n      isAdmin: localUser.isAdmin || false,\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n  /** Update user data and save to localStorage */\r\n  update(obj: Partial<LocalUser> = {}) {\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      this.data[key] = value\r\n    })\r\n\r\n    window.localStorage.setItem(LOCAL_USER_KEY, JSON.stringify(this.data))\r\n    this.opts.onUserChanged && this.opts.onUserChanged(this.data)\r\n  }\r\n\r\n  /**\r\n   * Logout\r\n   *\r\n   * @description Logout will clear login status, but not clear user data (nick, email, link)\r\n   */\r\n  logout() {\r\n    this.update({\r\n      token: '',\r\n      isAdmin: false,\r\n    })\r\n  }\r\n\r\n  /** Check if user has filled basic data */\r\n  checkHasBasicUserInfo() {\r\n    return !!this.data.nick && !!this.data.email\r\n  }\r\n}\r\n\r\nexport default User\r\n","import CheckerLauncher from './components/checker'\r\nimport Editor from './editor/editor'\r\nimport SidebarLayer from './layer/sidebar-layer'\r\n\r\nimport List from './list/list'\r\n\r\nimport * as I18n from './i18n'\r\nimport { PlugManager } from './plugins/editor-kit'\r\nimport { LayerManager } from './layer/layer-manager'\r\nimport User from './lib/user'\r\nimport type { ContextApi } from '@/types'\r\n\r\n/**\r\n * Services\r\n *\r\n * @description Call these services by `ctx.get('serviceName')` or `ctx.serviceName`\r\n */\r\nconst services = {\r\n  // I18n\r\n  i18n(ctx: ContextApi) {\r\n    I18n.setLocale(ctx.conf.locale)\r\n\r\n    ctx.watchConf(['locale'], (conf) => {\r\n      I18n.setLocale(conf.locale)\r\n    })\r\n  },\r\n\r\n  // User Store\r\n  user(ctx: ContextApi) {\r\n    const user = new User({\r\n      onUserChanged: (data) => {\r\n        ctx.trigger('user-changed', data)\r\n      },\r\n    })\r\n    return user\r\n  },\r\n\r\n  // 弹出层\r\n  layerManager(ctx: ContextApi) {\r\n    return new LayerManager(ctx)\r\n  },\r\n\r\n  // CheckerLauncher\r\n  checkerLauncher(ctx: ContextApi) {\r\n    const checkerLauncher = new CheckerLauncher({\r\n      getCtx: () => ctx,\r\n      getApi: () => ctx.getApi(),\r\n      onReload: () => ctx.reload(),\r\n\r\n      // make sure suffix with a slash, because it will be used as a base url when call `fetch`\r\n      getCaptchaIframeURL: () => `${ctx.conf.server}/api/v2/captcha/?t=${+new Date()}`,\r\n    })\r\n    return checkerLauncher\r\n  },\r\n\r\n  // 编辑器\r\n  editor(ctx: ContextApi) {\r\n    const editor = new Editor(ctx)\r\n    ctx.$root.appendChild(editor.$el)\r\n    return editor\r\n  },\r\n\r\n  // 评论列表\r\n  list(ctx: ContextApi): List {\r\n    const list = new List(ctx)\r\n    ctx.$root.appendChild(list.$el)\r\n    return list\r\n  },\r\n\r\n  // 侧边栏 Layer\r\n  sidebarLayer(ctx: ContextApi) {\r\n    const sidebarLayer = new SidebarLayer(ctx)\r\n    return sidebarLayer\r\n  },\r\n\r\n  // Extra Service\r\n  // -----------------------------------------\r\n  // Only for type check\r\n  // Not inject to ctx immediately,\r\n  // but can be injected by other occasions\r\n\r\n  editorPlugs(): PlugManager | undefined {\r\n    return undefined\r\n  },\r\n}\r\n\r\nexport default services\r\n\r\n// type tricks for dependency injection\r\ntype TServiceImps = typeof services\r\ntype TObjectWithFuncs = { [k: string]: (...args: any) => any }\r\ntype TKeysOnlyReturn<T extends TObjectWithFuncs, V> = {\r\n  [K in keyof T]: ReturnType<T[K]> extends V ? K : never\r\n}[keyof T]\r\ntype TOmitConditions = TKeysOnlyReturn<TServiceImps, void>\r\ntype TServiceInjectors = Omit<TServiceImps, TOmitConditions>\r\nexport type TInjectedServices = {\r\n  [K in keyof TServiceInjectors]: ReturnType<TServiceInjectors[K]>\r\n}\r\n","import type { ContextApi, ArtalkPlugin, ArtalkConfig } from '@/types'\r\nimport { Api } from '@/api'\r\n\r\ntype CountCache = { [pageKey: string]: number }\r\n\r\nexport interface CountOptions {\r\n  getApi(): Api\r\n\r\n  siteName: string\r\n  pageKey?: string\r\n  pageTitle?: string\r\n  countEl: string\r\n  pvEl: string\r\n  pageKeyAttr: string\r\n\r\n  /** Whether to add PV count when initializing */\r\n  pvAdd?: boolean\r\n}\r\n\r\nexport const PvCountWidget: ArtalkPlugin = (ctx: ContextApi) => {\r\n  ctx.watchConf(['site', 'pageKey', 'pageTitle', 'countEl', 'pvEl', 'statPageKeyAttr'], (conf) => {\r\n    initCountWidget({\r\n      getApi: () => ctx.getApi(),\r\n      siteName: conf.site,\r\n      pageKey: conf.pageKey,\r\n      pageTitle: conf.pageTitle,\r\n      countEl: conf.countEl,\r\n      pvEl: conf.pvEl,\r\n      pageKeyAttr: conf.statPageKeyAttr,\r\n      pvAdd: typeof ctx.conf.pvAdd === 'boolean' ? ctx.conf.pvAdd : true,\r\n    })\r\n  })\r\n}\r\n\r\n/** Initialize count widgets */\r\nexport async function initCountWidget(opt: CountOptions) {\r\n  // Load comment count\r\n  await loadCommentCount(opt)\r\n\r\n  // Increment PV count\r\n  const cacheData = await incrementPvCount(opt)\r\n\r\n  // Load PV count\r\n  await loadPvCount(opt, cacheData)\r\n}\r\n\r\n/** Increment PV count and get cache data that contains PV count */\r\nasync function incrementPvCount(opt: CountOptions) {\r\n  if (!opt.pvAdd || !opt.pageKey) return undefined\r\n\r\n  const pvCount = (\r\n    await opt.getApi().pages.logPv({\r\n      page_key: opt.pageKey,\r\n      page_title: opt.pageTitle,\r\n      site_name: opt.siteName,\r\n    })\r\n  ).data.pv // pv+1 and get pv count\r\n\r\n  return {\r\n    [opt.pageKey]: pvCount,\r\n  }\r\n}\r\n\r\n/** Load comment count */\r\nasync function loadCommentCount(opt: CountOptions) {\r\n  await loadStatCount({ opt, query: 'page_comment', containers: [opt.countEl, '#ArtalkCount'] })\r\n}\r\n\r\n/** Load PV count */\r\nasync function loadPvCount(opt: CountOptions, cache?: CountCache) {\r\n  await loadStatCount({ opt, query: 'page_pv', containers: [opt.pvEl, '#ArtalkPv'], cache })\r\n}\r\n\r\nasync function loadStatCount(args: {\r\n  opt: CountOptions\r\n  query: 'page_pv' | 'page_comment'\r\n  containers: string[]\r\n  cache?: CountCache\r\n}) {\r\n  const { opt } = args\r\n  let cache: CountCache = args.cache || {}\r\n\r\n  // Retrieve elements\r\n  const els = retrieveElements(args.containers)\r\n\r\n  // Get page keys which will be queried\r\n  const pageKeys = getPageKeys(els, opt.pageKeyAttr, opt.pageKey, cache)\r\n\r\n  // Fetch count data from server\r\n  if (pageKeys.length > 0) {\r\n    const res = (\r\n      await opt.getApi().stats.getStats(args.query, {\r\n        page_keys: pageKeys.join(','),\r\n        site_name: opt.siteName,\r\n      })\r\n    ).data.data as CountCache\r\n    cache = { ...cache, ...res }\r\n  }\r\n\r\n  updateElementsText(els, cache, opt.pageKey)\r\n}\r\n\r\n/** Retrieve elements based on selectors */\r\nfunction retrieveElements(containers: string[]): Set<HTMLElement> {\r\n  const els = new Set<HTMLElement>()\r\n  new Set(containers).forEach((selector) => {\r\n    document.querySelectorAll<HTMLElement>(selector).forEach((el) => els.add(el))\r\n  })\r\n  return els\r\n}\r\n\r\n/** Get page keys to be queried */\r\nfunction getPageKeys(\r\n  els: Set<HTMLElement>,\r\n  pageKeyAttr: string,\r\n  pageKey: string | undefined,\r\n  cache: CountCache,\r\n): string[] {\r\n  const pageKeys = Array.from(els)\r\n    .map((el) => el.getAttribute(pageKeyAttr) || pageKey)\r\n    .filter((key) => key && typeof cache[key] !== 'number') // filter out keys that already have data\r\n\r\n  return [...new Set(pageKeys as string[])] // deduplicate\r\n}\r\n\r\n/** Update elements text content with the count data */\r\nfunction updateElementsText(els: Set<HTMLElement>, data: CountCache, defaultPageKey?: string) {\r\n  els.forEach((el) => {\r\n    const pageKey = el.getAttribute('data-page-key')\r\n    const count = (pageKey && data[pageKey]) || (defaultPageKey && data[defaultPageKey]) || 0 // if pageKey is not set, use defaultCount\r\n    el.innerText = `${Number(count)}`\r\n  })\r\n}\r\n\r\nexport const exportedForTesting = {\r\n  incrementPvCount,\r\n  loadCommentCount,\r\n  loadPvCount,\r\n  retrieveElements,\r\n  getPageKeys,\r\n  updateElementsText,\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as marked from '@/lib/marked'\r\n\r\nexport const Markdown: ArtalkPlugin = (ctx) => {\r\n  ctx.watchConf(['imgLazyLoad', 'markedOptions'], (conf) => {\r\n    marked.initMarked({\r\n      markedOptions: ctx.getConf().markedOptions,\r\n      imgLazyLoad: ctx.getConf().imgLazyLoad,\r\n    })\r\n  })\r\n\r\n  ctx.watchConf(['markedReplacers'], (conf) => {\r\n    conf.markedReplacers && marked.setReplacers(conf.markedReplacers)\r\n  })\r\n}\r\n","import type PlugKit from './_kit'\r\nimport EditorPlug from './_plug'\r\nimport $t from '@/i18n'\r\n\r\nconst LocalStorageKey = 'ArtalkContent'\r\n\r\nexport default class LocalStorage extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onContentUpdated = () => {\r\n      this.save()\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      // load editor content from localStorage when init\r\n      const localContent = window.localStorage.getItem(LocalStorageKey) || ''\r\n      if (localContent.trim() !== '') {\r\n        this.kit.useEditor().showNotify($t('restoredMsg'), 'i')\r\n        this.kit.useEditor().setContent(localContent)\r\n      }\r\n\r\n      // bind event\r\n      this.kit.useEvents().on('content-updated', onContentUpdated)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useEvents().off('content-updated', onContentUpdated)\r\n    })\r\n  }\r\n\r\n  // Save editor content to localStorage\r\n  public save() {\r\n    window.localStorage.setItem(LocalStorageKey, this.kit.useEditor().getContentRaw().trim())\r\n  }\r\n}\r\n","import type PlugKit from './_kit'\r\nimport type { CommentData } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport default class SubmitAddPreset {\r\n  constructor(private kit: PlugKit) {}\r\n\r\n  async reqAdd() {\r\n    const nComment = (\r\n      await this.kit.useApi().comments.createComment({\r\n        ...(await this.getSubmitAddParams()),\r\n      })\r\n    ).data\r\n    return nComment\r\n  }\r\n\r\n  async getSubmitAddParams() {\r\n    const { nick, email, link } = this.kit.useUser().getData()\r\n    const conf = this.kit.useConf()\r\n\r\n    return {\r\n      content: this.kit.useEditor().getContentFinal(),\r\n      name: nick,\r\n      email,\r\n      link,\r\n      rid: 0,\r\n      page_key: conf.pageKey,\r\n      page_title: conf.pageTitle,\r\n      site_name: conf.site,\r\n      ua: await Utils.getCorrectUserAgent(), // Get the corrected UA\r\n    }\r\n  }\r\n\r\n  postSubmitAdd(commentNew: CommentData) {\r\n    // insert the new comment to list\r\n    this.kit.useGlobalCtx().getData().insertComment(commentNew)\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport SubmitAddPreset from './submit-add'\r\nimport $t from '@/i18n'\r\nimport type { CommentData } from '@/types'\r\n\r\ninterface CustomSubmit {\r\n  activeCond: () => void\r\n  pre?: () => void\r\n  req?: () => Promise<CommentData>\r\n  /** The `post` method is called after the comment is successfully submitted */\r\n  post?: (nComment: CommentData) => void\r\n}\r\n\r\nexport default class Submit extends EditorPlug {\r\n  private customs: CustomSubmit[] = []\r\n  private defaultPreset: SubmitAddPreset\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.defaultPreset = new SubmitAddPreset(this.kit)\r\n\r\n    const onEditorSubmit = () => this.do()\r\n\r\n    this.kit.useMounted(() => {\r\n      // invoke `do()` when event `editor-submit` is triggered\r\n      this.kit.useGlobalCtx().on('editor-submit', onEditorSubmit)\r\n    })\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useGlobalCtx().off('editor-submit', onEditorSubmit)\r\n    })\r\n  }\r\n\r\n  registerCustom(c: CustomSubmit) {\r\n    this.customs.push(c)\r\n  }\r\n\r\n  private async do() {\r\n    if (this.kit.useEditor().getContentFinal().trim() === '') {\r\n      this.kit.useEditor().focus()\r\n      return\r\n    }\r\n\r\n    const custom = this.customs.find((o) => o.activeCond())\r\n\r\n    this.kit.useEditor().showLoading()\r\n\r\n    try {\r\n      // pre submit\r\n      if (custom?.pre) custom.pre()\r\n\r\n      let nComment: CommentData\r\n\r\n      // submit request\r\n      if (custom?.req) nComment = await custom.req()\r\n      else nComment = await this.defaultPreset.reqAdd()\r\n\r\n      // post submit\r\n      if (custom?.post) custom.post(nComment)\r\n      else this.defaultPreset.postSubmitAdd(nComment)\r\n    } catch (err: any) {\r\n      // submit error\r\n      console.error(err)\r\n      this.kit.useEditor().showNotify(`${$t('commentFail')}: ${err.message || String(err)}`, 'e')\r\n      return\r\n    } finally {\r\n      this.kit.useEditor().hideLoading()\r\n    }\r\n\r\n    this.kit.useEditor().reset() // 复原编辑器\r\n    this.kit.useGlobalCtx().trigger('editor-submitted')\r\n  }\r\n}\r\n","import './emoticons.scss'\r\n\r\nimport EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport type { EmoticonListData, EmoticonGrpData } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\nimport $t from '@/i18n'\r\n\r\ntype OwOFormatType = {\r\n  [key: string]: {\r\n    type: 'emoticon' | 'emoji' | 'image'\r\n    container: { icon: string; text: string }[]\r\n  }\r\n}\r\n\r\nexport default class Emoticons extends EditorPlug {\r\n  private emoticons: EmoticonListData = []\r\n  private loadingTask: Promise<void> | null = null\r\n\r\n  private $grpWrap!: HTMLElement\r\n  private $grpSwitcher!: HTMLElement\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.kit.useMounted(() => {\r\n      this.usePanel(`<div class=\"atk-editor-plug-emoticons\"></div>`)\r\n      this.useBtn(\r\n        `<i aria-label=\"${$t('emoticon')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" height=\"14\" viewBox=\"0 0 14 14\" width=\"14\"><path d=\"m4.26829 5.29294c0-.94317.45893-1.7074 1.02439-1.7074.56547 0 1.02439.76423 1.02439 1.7074s-.45892 1.7074-1.02439 1.7074c-.56546 0-1.02439-.76423-1.02439-1.7074zm4.43903 1.7074c.56546 0 1.02439-.76423 1.02439-1.7074s-.45893-1.7074-1.02439-1.7074c-.56547 0-1.02439.76423-1.02439 1.7074s.45892 1.7074 1.02439 1.7074zm-1.70732 2.73184c-1.51883 0-2.06312-1.52095-2.08361-1.58173l-1.29551.43231c.03414.10244.868 2.51604 3.3798 2.51604 2.51181 0 3.34502-2.41291 3.37982-2.51604l-1.29484-.43573c-.02254.06488-.56683 1.58583-2.08498 1.58583zm7-2.73252c0 3.86004-3.1401 7.00034-7 7.00034s-7-3.1396-7-6.99966c0-3.86009 3.1401-7.00034 7-7.00034s7 3.14025 7 7.00034zm-1.3659 0c0-3.10679-2.5275-5.63442-5.6341-5.63442-3.10663 0-5.63415 2.52832-5.63415 5.6351 0 3.10676 2.52752 5.63446 5.63415 5.63446 3.1066 0 5.6341-2.5277 5.6341-5.63446z\"/></svg></i>`,\r\n      )\r\n    })\r\n    this.kit.useUnmounted(() => {})\r\n\r\n    this.useContentTransformer((raw) => this.transEmoticonImageText(raw))\r\n    this.usePanelShow(() => {\r\n      ;(async () => {\r\n        await this.loadEmoticonsData()\r\n\r\n        // 初始化元素\r\n        if (!this.isImgLoaded) {\r\n          this.initEmoticonsList()\r\n          this.isImgLoaded = true\r\n        }\r\n\r\n        // 延迟执行，防止无法读取高度\r\n        setTimeout(() => {\r\n          this.changeListHeight()\r\n        }, 30)\r\n      })()\r\n    })\r\n    this.usePanelHide(() => {\r\n      this.$panel!.parentElement!.style.height = ''\r\n    })\r\n\r\n    // 表情包预加载\r\n    window.setTimeout(() => {\r\n      this.loadEmoticonsData()\r\n    }, 1000) // 延迟 1s 加载\r\n  }\r\n\r\n  private isListLoaded = false\r\n  private isImgLoaded = false\r\n\r\n  public async loadEmoticonsData() {\r\n    if (this.isListLoaded) return\r\n    if (this.loadingTask !== null) {\r\n      await this.loadingTask\r\n      return\r\n    }\r\n\r\n    // 数据处理\r\n    this.loadingTask = (async () => {\r\n      Ui.showLoading(this.$panel!)\r\n      this.emoticons = await this.handleData(this.kit.useConf().emoticons)\r\n      Ui.hideLoading(this.$panel!)\r\n      this.loadingTask = null\r\n      this.isListLoaded = true\r\n    })()\r\n    await this.loadingTask\r\n  }\r\n\r\n  private async handleData(data: any): Promise<any[]> {\r\n    if (!Array.isArray(data) && ['object', 'string'].includes(typeof data)) {\r\n      data = [data]\r\n    }\r\n\r\n    if (!Array.isArray(data)) {\r\n      Ui.setError(this.$panel!, `[${$t('emoticon')}] Data must be of Array/Object/String type`)\r\n      Ui.hideLoading(this.$panel!)\r\n      return []\r\n    }\r\n\r\n    const pushGrp = (grp: EmoticonGrpData) => {\r\n      if (typeof grp !== 'object') return\r\n      if (grp.name && data.find((o) => o.name === grp.name)) return\r\n      data.push(grp)\r\n    }\r\n\r\n    // 加载子内容\r\n    const remoteLoad = async (d: any[]) => {\r\n      await Promise.all(\r\n        d.map(async (grp, index) => {\r\n          if (typeof grp === 'object' && !Array.isArray(grp)) {\r\n            pushGrp(grp)\r\n          } else if (Array.isArray(grp)) {\r\n            await remoteLoad(grp)\r\n          } else if (typeof grp === 'string') {\r\n            const grpData = await this.remoteLoad(grp)\r\n\r\n            if (Array.isArray(grpData)) await remoteLoad(grpData)\r\n            else if (typeof grpData === 'object') pushGrp(grpData)\r\n          }\r\n        }),\r\n      )\r\n    }\r\n    await remoteLoad(data)\r\n\r\n    // 处理数组数据\r\n    data.forEach((item: any) => {\r\n      if (this.isOwOFormat(item)) {\r\n        const c = this.convertOwO(item)\r\n        c.forEach((grp) => {\r\n          pushGrp(grp)\r\n        })\r\n      } else if (Array.isArray(item)) {\r\n        item.forEach((grp) => {\r\n          pushGrp(grp)\r\n        })\r\n      }\r\n    })\r\n\r\n    // 剔除非法数据\r\n    data = data.filter(\r\n      (item: any) => typeof item === 'object' && !Array.isArray(item) && !!item && !!item.name,\r\n    )\r\n\r\n    // console.log(data)\r\n\r\n    this.solveNullKey(data)\r\n    this.solveSameKey(data)\r\n\r\n    return data\r\n  }\r\n\r\n  /** 远程加载 */\r\n  private async remoteLoad(url: string): Promise<any> {\r\n    if (!url) return []\r\n\r\n    try {\r\n      const resp = await fetch(url)\r\n      const json = await resp.json()\r\n      return json\r\n    } catch (err) {\r\n      Ui.hideLoading(this.$panel!)\r\n      console.error('[Emoticons] Load Failed:', err)\r\n      Ui.setError(this.$panel!, `[${$t('emoticon')}] ${$t('loadFail')}: ${String(err)}`)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /** 避免表情 item.key 为 null 的情况 */\r\n  private solveNullKey(data: EmoticonGrpData[]) {\r\n    data.forEach((grp) => {\r\n      grp.items.forEach((item, index) => {\r\n        if (!item.key) item.key = `${grp.name} ${index + 1}`\r\n      })\r\n    })\r\n  }\r\n\r\n  /** 避免相同 item.key */\r\n  private solveSameKey(data: EmoticonGrpData[]) {\r\n    const tmp: { [key: string]: number } = {}\r\n    data.forEach((grp) => {\r\n      grp.items.forEach((item) => {\r\n        if (!item.key || String(item.key).trim() === '') return\r\n        if (!tmp[item.key]) tmp[item.key] = 1\r\n        else tmp[item.key]++\r\n\r\n        if (tmp[item.key] > 1) item.key = `${item.key} ${tmp[item.key]}`\r\n      })\r\n    })\r\n  }\r\n\r\n  /** 判断是否为 OwO 格式 */\r\n  private isOwOFormat(data: any) {\r\n    try {\r\n      return (\r\n        typeof data === 'object' &&\r\n        !!Object.values(data).length &&\r\n        Array.isArray(Object.keys(Object.values<any>(data)[0].container)) &&\r\n        Object.keys(Object.values<any>(data)[0].container[0]).includes('icon')\r\n      )\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /** 转换 OwO 格式数据 */\r\n  private convertOwO(owoData: OwOFormatType): EmoticonListData {\r\n    const dest: EmoticonListData = []\r\n    Object.entries(owoData).forEach(([grpName, grp]) => {\r\n      const nGrp: EmoticonGrpData = { name: grpName, type: grp.type, items: [] }\r\n      grp.container.forEach((item, index) => {\r\n        // 图片标签提取 src 属性值\r\n        const iconStr = item.icon\r\n        if (/<(img|IMG)/.test(iconStr)) {\r\n          const find = /src=[\"'](.*?)[\"']/.exec(iconStr)\r\n          if (find && find.length > 1) item.icon = find[1]\r\n        }\r\n        nGrp.items.push({\r\n          key: item.text || `${grpName} ${index + 1}`,\r\n          val: item.icon,\r\n        })\r\n      })\r\n      dest.push(nGrp)\r\n    })\r\n    return dest\r\n  }\r\n\r\n  /** 初始化表情列表界面 */\r\n  private initEmoticonsList() {\r\n    // 表情列表\r\n    this.$grpWrap = Utils.createElement(`<div class=\"atk-grp-wrap\"></div>`)\r\n    this.$panel!.append(this.$grpWrap)\r\n\r\n    this.emoticons.forEach((grp, index) => {\r\n      const $grp = Utils.createElement(`<div class=\"atk-grp\" style=\"display: none;\"></div>`)\r\n      this.$grpWrap.append($grp)\r\n      $grp.setAttribute('data-index', String(index))\r\n      $grp.setAttribute('data-grp-name', grp.name)\r\n      $grp.setAttribute('data-type', grp.type)\r\n      grp.items.forEach((item) => {\r\n        const $item = Utils.createElement(`<span class=\"atk-item\"></span>`)\r\n        $grp.append($item)\r\n\r\n        if (!!item.key && !new RegExp(`^(${grp.name})?\\\\s?[0-9]+$`).test(item.key))\r\n          $item.setAttribute('title', item.key)\r\n\r\n        if (grp.type === 'image') {\r\n          const imgEl = document.createElement('img')\r\n          imgEl.src = item.val\r\n          imgEl.alt = item.key\r\n          $item.append(imgEl)\r\n        } else {\r\n          $item.innerText = item.val\r\n        }\r\n\r\n        $item.onclick = () => {\r\n          if (grp.type === 'image') {\r\n            this.kit.useEditor().insertContent(`:[${item.key}]`)\r\n          } else {\r\n            this.kit.useEditor().insertContent(item.val || '')\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // 表情分类切换 bar\r\n    if (this.emoticons.length > 1) {\r\n      this.$grpSwitcher = Utils.createElement(`<div class=\"atk-grp-switcher\"></div>`)\r\n      this.$panel!.append(this.$grpSwitcher)\r\n      this.emoticons.forEach((grp, index) => {\r\n        const $item = Utils.createElement('<span />')\r\n        $item.innerText = grp.name\r\n        $item.setAttribute('data-index', String(index))\r\n        $item.onclick = () => this.openGrp(index)\r\n        this.$grpSwitcher.append($item)\r\n      })\r\n    }\r\n\r\n    // 默认打开第一个分类\r\n    if (this.emoticons.length > 0) this.openGrp(0)\r\n  }\r\n\r\n  /** 打开一个表情组 */\r\n  public openGrp(index: number) {\r\n    Array.from(this.$grpWrap.children).forEach((item) => {\r\n      const el = item as HTMLElement\r\n      if (el.getAttribute('data-index') !== String(index)) {\r\n        el.style.display = 'none'\r\n      } else {\r\n        el.style.display = ''\r\n      }\r\n    })\r\n\r\n    this.$grpSwitcher\r\n      ?.querySelectorAll('span.active')\r\n      .forEach((item) => item.classList.remove('active'))\r\n    this.$grpSwitcher?.querySelector(`span[data-index=\"${index}\"]`)?.classList.add('active')\r\n\r\n    this.changeListHeight()\r\n  }\r\n\r\n  private changeListHeight() {\r\n    /* const listWrapHeight = Utils.getHeight(this.$grpWrapem)\r\n    this.editor.plugWrapEl.style.height = `${listWrapHeight > 150 ? listWrapHeight : 150}px` */\r\n  }\r\n\r\n  /** 处理评论 content 中的表情内容 */\r\n  public transEmoticonImageText(text: string) {\r\n    if (!this.emoticons || !Array.isArray(this.emoticons)) return text\r\n\r\n    this.emoticons.forEach((grp) => {\r\n      if (grp.type !== 'image') return\r\n      Object.entries(grp.items).forEach(([index, item]) => {\r\n        text = text\r\n          .split(`:[${item.key}]`)\r\n          .join(`<img src=\"${item.val}\" atk-emoticon=\"${item.key}\">`) // replaceAll(...)\r\n      })\r\n    })\r\n\r\n    return text\r\n  }\r\n}\r\n","import type PlugKit from './_kit'\r\nimport EditorPlug from './_plug'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\n/** 允许的图片格式 */\r\nconst AllowImgExts = ['png', 'jpg', 'jpeg', 'gif', 'bmp', 'svg', 'webp']\r\n\r\nexport default class Upload extends EditorPlug {\r\n  private $imgUploadInput?: HTMLInputElement\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.kit.useMounted(() => this.init())\r\n\r\n    this.initDragImg()\r\n  }\r\n\r\n  private init() {\r\n    this.$imgUploadInput = document.createElement('input')\r\n    this.$imgUploadInput.type = 'file'\r\n    this.$imgUploadInput.style.display = 'none'\r\n    this.$imgUploadInput.accept = AllowImgExts.map((o) => `.${o}`).join(',')\r\n\r\n    // TODO: Use btn cannot refresh when mounted event is triggered\r\n    const $btn = this.useBtn(\r\n      `<i aria-label=\"${$t('uploadImage')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" height=\"14\" viewBox=\"0 0 14 14\" width=\"14\"><path d=\"m0 1.94444c0-1.074107.870333-1.94444 1.94444-1.94444h10.11116c1.0741 0 1.9444.870333 1.9444 1.94444v10.11116c0 1.0741-.8703 1.9444-1.9444 1.9444h-10.11116c-1.074107 0-1.94444-.8703-1.94444-1.9444zm1.94444-.38888c-.21466 0-.38888.17422-.38888.38888v7.06689l2.33333-2.33333 2.33333 2.33333 3.88888-3.88889 2.3333 2.33334v-5.51134c0-.21466-.1742-.38888-.3888-.38888zm10.49996 8.09977-2.3333-2.33333-3.88888 3.8889-2.33333-2.33334-2.33333 2.33334v.8447c0 .2146.17422.3888.38888.3888h10.11116c.2146 0 .3888-.1742.3888-.3888zm-7.1944-6.54422c-.75133 0-1.36111.60978-1.36111 1.36111 0 .75134.60978 1.36111 1.36111 1.36111s1.36111-.60977 1.36111-1.36111c0-.75133-.60978-1.36111-1.36111-1.36111z\"/></svg></i>`,\r\n    )\r\n    $btn.after(this.$imgUploadInput)\r\n    $btn.onclick = () => {\r\n      // 选择图片\r\n      const $input = this.$imgUploadInput!\r\n      $input.onchange = () => {\r\n        ;(async () => {\r\n          // 解决阻塞 UI 问题\r\n          if (!$input.files || $input.files.length === 0) return\r\n          const file = $input.files[0]\r\n          this.uploadImg(file)\r\n        })()\r\n      }\r\n      $input.click() // 显示选择图片对话框\r\n    }\r\n\r\n    if (!this.kit.useConf().imgUpload) {\r\n      this.$btn!.setAttribute('atk-only-admin-show', '')\r\n    }\r\n  }\r\n\r\n  private initDragImg() {\r\n    // 统一从 FileList 获取文件并上传图片方法\r\n    const uploadFromFileList = (files?: FileList) => {\r\n      if (!files) return\r\n\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i]\r\n        this.uploadImg(file)\r\n      }\r\n    }\r\n\r\n    // 拖拽图片\r\n    // @link https://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\r\n    // 阻止浏览器的默认释放行为\r\n    const onDragover = (evt: Event) => {\r\n      evt.stopPropagation()\r\n      evt.preventDefault()\r\n    }\r\n\r\n    const onDrop = (evt: DragEvent) => {\r\n      const files = evt.dataTransfer?.files\r\n      if (files?.length) {\r\n        evt.preventDefault()\r\n        uploadFromFileList(files)\r\n      }\r\n    }\r\n\r\n    // 粘贴图片\r\n    const onPaste = (evt: ClipboardEvent) => {\r\n      const files = evt.clipboardData?.files\r\n      if (files?.length) {\r\n        evt.preventDefault()\r\n        uploadFromFileList(files)\r\n      }\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      this.kit.useUI().$textarea.addEventListener('dragover', onDragover)\r\n      this.kit.useUI().$textarea.addEventListener('drop', onDrop)\r\n      this.kit.useUI().$textarea.addEventListener('paste', onPaste)\r\n    })\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useUI().$textarea.removeEventListener('dragover', onDragover)\r\n      this.kit.useUI().$textarea.removeEventListener('drop', onDrop)\r\n      this.kit.useUI().$textarea.removeEventListener('paste', onPaste)\r\n    })\r\n  }\r\n\r\n  async uploadImg(file: File) {\r\n    const fileExt = /[^.]+$/.exec(file.name)\r\n    if (!fileExt || !AllowImgExts.includes(String(fileExt[0]).toLowerCase())) return\r\n\r\n    // 未登录提示\r\n    if (!this.kit.useUser().checkHasBasicUserInfo()) {\r\n      this.kit.useEditor().showNotify($t('uploadLoginMsg'), 'w')\r\n      return\r\n    }\r\n\r\n    // 插入图片前换一行\r\n    let insertPrefix = '\\n'\r\n    if (this.kit.useUI().$textarea.value.trim() === '') insertPrefix = ''\r\n\r\n    // 插入占位加载文字\r\n    const uploadPlaceholderTxt = `${insertPrefix}![](Uploading ${file.name}...)`\r\n    this.kit.useEditor().insertContent(uploadPlaceholderTxt)\r\n\r\n    // 上传图片\r\n    let resp: { public_url: string } | undefined\r\n    try {\r\n      const customUploaderFn = this.kit.useConf().imgUploader\r\n      if (!customUploaderFn) {\r\n        // 使用 Artalk 进行图片上传\r\n        resp = (await this.kit.useApi().upload.upload({ file })).data\r\n      } else {\r\n        // 使用自定义的图片上传器\r\n        resp = { public_url: await customUploaderFn(file) }\r\n      }\r\n    } catch (err: any) {\r\n      console.error(err)\r\n      this.kit.useEditor().showNotify(`${$t('uploadFail')}: ${err.message}`, 'e')\r\n    }\r\n    if (!!resp && resp.public_url) {\r\n      let imgURL = resp.public_url as string\r\n\r\n      // 若为相对路径，加上 artalk server\r\n      if (!Utils.isValidURL(imgURL))\r\n        imgURL = Utils.getURLBasedOnApi({\r\n          base: this.kit.useConf().server,\r\n          path: imgURL,\r\n        })\r\n\r\n      // 上传成功插入图片\r\n      this.kit\r\n        .useEditor()\r\n        .setContent(\r\n          this.kit\r\n            .useUI()\r\n            .$textarea.value.replace(uploadPlaceholderTxt, `${insertPrefix}![](${imgURL})`),\r\n        )\r\n    } else {\r\n      // 上传失败删除加载文字\r\n      this.kit\r\n        .useEditor()\r\n        .setContent(this.kit.useUI().$textarea.value.replace(uploadPlaceholderTxt, ''))\r\n    }\r\n  }\r\n}\r\n","import './preview.scss'\r\n\r\nimport EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport * as marked from '@/lib/marked'\r\nimport $t from '@/i18n'\r\n\r\nexport default class Preview extends EditorPlug {\r\n  private isPlugPanelShow = false\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    this.kit.useMounted(() => {\r\n      this.usePanel(`<div class=\"atk-editor-plug-preview\"></div>`)\r\n\r\n      // initialize plug button\r\n      this.useBtn(\r\n        `<i aria-label=\"${$t('preview')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\"></path></svg></i>`,\r\n      )\r\n    })\r\n    this.kit.useUnmounted(() => {})\r\n\r\n    // function to update content\r\n    this.kit.useEvents().on('content-updated', (content) => {\r\n      this.isPlugPanelShow && this.updateContent()\r\n    })\r\n\r\n    this.usePanelShow(() => {\r\n      this.isPlugPanelShow = true\r\n      this.updateContent()\r\n    })\r\n    this.usePanelHide(() => {\r\n      this.isPlugPanelShow = false\r\n    })\r\n  }\r\n\r\n  updateContent() {\r\n    this.$panel!.innerHTML = this.kit.useEditor().getContentMarked()\r\n  }\r\n}\r\n","import type EditorPlug from './_plug'\r\nimport LocalStorage from './local-storage'\r\nimport Textarea from './textarea'\r\nimport SubmitBtn from './submit-btn'\r\nimport Submit from './submit'\r\nimport StateReply from './state-reply'\r\nimport StateEdit from './state-edit'\r\nimport Closable from './closable'\r\nimport HeaderEvent from './header-event'\r\nimport HeaderUser from './header-user'\r\nimport HeaderLink from './header-link'\r\nimport Mover from './mover'\r\nimport Emoticons from './emoticons'\r\nimport Upload from './upload'\r\nimport Preview from './preview'\r\nimport type { ArtalkConfig } from '@/types'\r\n\r\n/** The default enabled plugs */\r\nconst EDITOR_PLUGS: (typeof EditorPlug)[] = [\r\n  // Core\r\n  LocalStorage,\r\n  HeaderEvent,\r\n  HeaderUser,\r\n  // HeaderLink,\r\n  Textarea,\r\n  Submit,\r\n  SubmitBtn,\r\n  Mover,\r\n  StateReply,\r\n  StateEdit,\r\n  Closable,\r\n\r\n  // Extensions\r\n  Emoticons,\r\n  Upload,\r\n  Preview,\r\n]\r\n\r\n/**\r\n * Get the enabled plugs by config\r\n */\r\nexport function getEnabledPlugs(\r\n  conf: Pick<ArtalkConfig, 'imgUpload' | 'emoticons' | 'preview' | 'editorTravel'>,\r\n): (typeof EditorPlug)[] {\r\n  // The reference map of config and plugs\r\n  // (for check if the plug is enabled)\r\n  const confRefs = new Map<typeof EditorPlug, any>()\r\n  confRefs.set(Upload, conf.imgUpload)\r\n  confRefs.set(Emoticons, conf.emoticons)\r\n  confRefs.set(Preview, conf.preview)\r\n  confRefs.set(Mover, conf.editorTravel)\r\n\r\n  return EDITOR_PLUGS.filter((p) => !confRefs.has(p) || !!confRefs.get(p))\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\n\r\nexport default class HeaderEvent extends EditorPlug {\r\n  private get $inputs() {\r\n    return this.kit.useEditor().getHeaderInputEls()\r\n  }\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const inputEventFns: { [name: string]: () => void } = {}\r\n    const changeEventFns: { [name: string]: () => void } = {}\r\n\r\n    const trigger =\r\n      (evt: 'header-input' | 'header-change', $input: HTMLInputElement, field: string) => () => {\r\n        this.kit.useEvents().trigger(evt, { field, $input })\r\n      }\r\n\r\n    this.kit.useMounted(() => {\r\n      // batch bind the events\r\n      Object.entries(this.$inputs).forEach(([key, $input]) => {\r\n        $input.addEventListener(\r\n          'input',\r\n          (inputEventFns[key] = trigger('header-input', $input, key)),\r\n        )\r\n        $input.addEventListener(\r\n          'change',\r\n          (changeEventFns[key] = trigger('header-change', $input, key)),\r\n        )\r\n      })\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      // unmount the event\r\n      Object.entries(this.$inputs).forEach(([key, $input]) => {\r\n        $input.removeEventListener('input', inputEventFns[key])\r\n        $input.removeEventListener('change', changeEventFns[key])\r\n      })\r\n    })\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport $t from '@/i18n'\r\nimport type { UserInfoApiResponseData } from '@/types'\r\n\r\nexport default class HeaderUser extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onInput = ({ $input, field }: { $input: HTMLInputElement; field: string }) => {\r\n      if (this.kit.useEditor().getState() === 'edit') return // TODO: prevent execute when editing, since update comment.user not support\r\n\r\n      // update user data\r\n      this.kit.useUser().update({ [field]: $input.value.trim() })\r\n\r\n      // remote fetch user info\r\n      if (field === 'nick' || field === 'email') this.fetchUserInfo() // must after update user data, since fetchUserInfo() will use User.data\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      Object.entries(this.kit.useEditor().getHeaderInputEls()).forEach(([key, $input]) => {\r\n        // set placeholder\r\n        $input.placeholder = `${$t(key as any)}`\r\n\r\n        // sync header values from User.data\r\n        $input.value = this.kit.useUser().getData()[key] || ''\r\n      })\r\n\r\n      // bind events\r\n      this.kit.useEvents().on('header-input', onInput)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useEvents().off('header-input', onInput)\r\n    })\r\n  }\r\n\r\n  private query = {\r\n    timer: <number | null>null,\r\n    abortFn: <(() => void) | null>null,\r\n  }\r\n\r\n  /**\r\n   * Fetch user info from server\r\n   */\r\n  private fetchUserInfo() {\r\n    this.kit.useUser().logout() // clear login status\r\n\r\n    if (this.query.timer) window.clearTimeout(this.query.timer) // clear the not executed timeout task\r\n    if (this.query.abortFn) this.query.abortFn() // abort the last request (if request is pending not finished)\r\n\r\n    this.query.timer = window.setTimeout(() => {\r\n      this.query.timer = null // clear the timer (clarify the timer is executing)\r\n\r\n      const api = this.kit.useApi()\r\n      const CANCEL_TOKEN = 'getUserCancelToken'\r\n      this.query.abortFn = () => api.abortRequest(CANCEL_TOKEN)\r\n\r\n      api.user\r\n        .getUser(\r\n          { ...api.getUserFields() },\r\n          {\r\n            cancelToken: CANCEL_TOKEN,\r\n          },\r\n        )\r\n        .then((res) => this.onUserInfoFetched(res.data))\r\n        .catch((err) => {})\r\n        .finally(() => {\r\n          this.query.abortFn = null // clear the abort function (clarify the request is finished)\r\n        })\r\n    }, 400) // delay to reduce request\r\n  }\r\n\r\n  /**\r\n   * Function called when user info fetched\r\n   *\r\n   * @param data The response data from server\r\n   */\r\n  private onUserInfoFetched(data: UserInfoApiResponseData) {\r\n    // If api response is not login, logout\r\n    if (!data.is_login) this.kit.useUser().logout()\r\n\r\n    // Update unread notifies\r\n    this.kit.useGlobalCtx().getData().updateNotifies(data.notifies)\r\n\r\n    // If user is admin and not login,\r\n    if (this.kit.useUser().checkHasBasicUserInfo() && !data.is_login && data.user?.is_admin) {\r\n      // then show login window\r\n      this.kit.useGlobalCtx().checkAdmin({\r\n        onSuccess: () => {},\r\n      })\r\n    }\r\n\r\n    // Auto fill user link from server\r\n    if (data.user && data.user.link) {\r\n      // this.kit.useUI().$link.value = data.user.link\r\n      this.kit.useUser().update({ link: data.user.link })\r\n    }\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport $t from '@/i18n'\r\n\r\nexport default class Textarea extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onKeydown = (e: KeyboardEvent) => this.onKeydown(e)\r\n    const onInput = () => this.onInput()\r\n\r\n    this.kit.useMounted(() => {\r\n      // 占位符\r\n      this.kit.useUI().$textarea.placeholder = this.kit.useConf().placeholder || $t('placeholder')\r\n\r\n      // bind the event\r\n      this.kit.useUI().$textarea.addEventListener('keydown', onKeydown)\r\n      this.kit.useUI().$textarea.addEventListener('input', onInput)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      // unmount the event\r\n      this.kit.useUI().$textarea.removeEventListener('keydown', onKeydown)\r\n      this.kit.useUI().$textarea.removeEventListener('input', onInput)\r\n    })\r\n\r\n    this.kit.useEvents().on('content-updated', () => {\r\n      // delay 80ms to prevent invalid execution\r\n      window.setTimeout(() => {\r\n        this.adaptiveHeightByContent()\r\n      }, 80)\r\n    })\r\n  }\r\n\r\n  // 按下 Tab 输入内容，而不是失去焦距\r\n  private onKeydown(e: KeyboardEvent) {\r\n    const keyCode = e.keyCode || e.which\r\n\r\n    if (keyCode === 9) {\r\n      e.preventDefault()\r\n      this.kit.useEditor().insertContent('\\t')\r\n    }\r\n  }\r\n\r\n  private onInput() {\r\n    this.kit.useEvents().trigger('content-updated', this.kit.useEditor().getContentRaw())\r\n  }\r\n\r\n  // Resize the textarea height by content\r\n  public adaptiveHeightByContent() {\r\n    const diff = this.kit.useUI().$textarea.offsetHeight - this.kit.useUI().$textarea.clientHeight\r\n    this.kit.useUI().$textarea.style.height = '0px' // it's a magic. 若不加此行，内容减少，高度回不去\r\n    this.kit.useUI().$textarea.style.height = `${this.kit.useUI().$textarea.scrollHeight + diff}px`\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport $t from '@/i18n'\r\n\r\nexport default class SubmitBtn extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onClick = () => {\r\n      this.kit.useEditor().submit()\r\n    }\r\n\r\n    this.kit.useMounted(() => {\r\n      // apply the submit button text from user custom config\r\n      this.kit.useUI().$submitBtn.innerText = this.kit.useConf().sendBtn || $t('send')\r\n\r\n      // bind the event when click the submit button\r\n      this.kit.useUI().$submitBtn.addEventListener('click', onClick)\r\n    })\r\n\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useUI().$submitBtn.removeEventListener('click', onClick)\r\n    })\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport Submit from './submit'\r\nimport SubmitAddPreset from './submit-add'\r\nimport type { CommentData } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\nimport $t from '@/i18n'\r\n\r\nexport default class StateReply extends EditorPlug {\r\n  private comment?: CommentData\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    // add effect when state switch to `reply`\r\n    this.useEditorStateEffect('reply', (commentData) => {\r\n      this.setReply(commentData)\r\n\r\n      return () => {\r\n        this.cancelReply()\r\n      }\r\n    })\r\n\r\n    // register submit preset\r\n    this.kit.useEvents().on('mounted', () => {\r\n      const submitPlug = this.kit.useDeps(Submit)\r\n      if (!submitPlug) throw Error('SubmitPlug not initialized')\r\n\r\n      const defaultPreset = new SubmitAddPreset(this.kit)\r\n\r\n      submitPlug.registerCustom({\r\n        activeCond: () => !!this.comment, // active this custom submit when reply mode\r\n        req: async () => {\r\n          if (!this.comment) throw new Error('reply comment cannot be empty')\r\n\r\n          const nComment = (\r\n            await this.kit.useApi().comments.createComment({\r\n              ...(await defaultPreset.getSubmitAddParams()),\r\n              rid: this.comment.id,\r\n              page_key: this.comment.page_key,\r\n              page_title: undefined,\r\n              site_name: this.comment.site_name,\r\n            })\r\n          ).data\r\n\r\n          return nComment\r\n        },\r\n        post: (nComment: CommentData) => {\r\n          // open another page when reply comment is not the same pageKey\r\n          const conf = this.kit.useConf()\r\n          if (nComment.page_key !== conf.pageKey) {\r\n            window.open(`${nComment.page_url}#atk-comment-${nComment.id}`)\r\n          }\r\n\r\n          defaultPreset.postSubmitAdd(nComment)\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  private setReply(commentData: CommentData) {\r\n    const ui = this.kit.useUI()\r\n    if (!ui.$sendReplyBtn) {\r\n      const $btn = Utils.createElement(\r\n        `<span class=\"atk-state-btn\">` +\r\n          `<span class=\"atk-text-wrap\">` +\r\n          `${$t('reply')} <span class=\"atk-text\"></span>` +\r\n          `</span>` +\r\n          `<span class=\"atk-cancel atk-icon-close atk-icon\"></span>` +\r\n          `</span>`,\r\n      )\r\n      $btn.querySelector<HTMLElement>('.atk-text')!.innerText = `@${commentData.nick}`\r\n      $btn.addEventListener('click', () => {\r\n        this.kit.useEditor().resetState()\r\n      })\r\n      ui.$stateWrap.append($btn)\r\n      ui.$sendReplyBtn = $btn\r\n    }\r\n\r\n    this.comment = commentData\r\n\r\n    ui.$textarea.focus()\r\n  }\r\n\r\n  private cancelReply() {\r\n    if (!this.comment) return\r\n\r\n    const ui = this.kit.useUI()\r\n    if (ui.$sendReplyBtn) {\r\n      ui.$sendReplyBtn.remove()\r\n      ui.$sendReplyBtn = undefined\r\n    }\r\n    this.comment = undefined\r\n  }\r\n}\r\n","import type PlugKit from './_kit'\r\nimport EditorPlug from './_plug'\r\nimport Submit from './submit'\r\nimport type { CommentData } from '@/types'\r\nimport $t from '@/i18n'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport default class StateEdit extends EditorPlug {\r\n  private comment?: CommentData\r\n\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    // add effect when state switch to `edit`\r\n    this.useEditorStateEffect('edit', (comment) => {\r\n      this.edit(comment)\r\n\r\n      return () => {\r\n        this.cancelEdit()\r\n      }\r\n    })\r\n\r\n    // register submit preset\r\n    this.kit.useMounted(() => {\r\n      const submitPlug = this.kit.useDeps(Submit)\r\n      if (!submitPlug) throw Error('SubmitPlug not initialized')\r\n\r\n      submitPlug.registerCustom({\r\n        activeCond: () => !!this.comment, // active this custom submit when edit mode\r\n        req: async () => {\r\n          const saveData = {\r\n            content: this.kit.useEditor().getContentFinal(),\r\n            nick: this.kit.useUI().$nick.value,\r\n            email: this.kit.useUI().$email.value,\r\n            link: this.kit.useUI().$link.value,\r\n          }\r\n          const comment = this.comment!\r\n          const nComment = await this.kit.useApi().comments.updateComment(comment.id, {\r\n            ...comment,\r\n            ...saveData,\r\n          })\r\n          return nComment.data\r\n        },\r\n        post: (nComment: CommentData) => {\r\n          this.kit.useGlobalCtx().getData().updateComment(nComment)\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  private edit(comment: CommentData) {\r\n    const ui = this.kit.useUI()\r\n    if (!ui.$editCancelBtn) {\r\n      const $btn = Utils.createElement(\r\n        `<span class=\"atk-state-btn\">` +\r\n          `<span class=\"atk-text-wrap\">` +\r\n          `${$t('editCancel')}` +\r\n          `</span>` +\r\n          `<span class=\"atk-cancel atk-icon-close atk-icon\"></span>` +\r\n          `</span>`,\r\n      )\r\n      $btn.onclick = () => {\r\n        this.kit.useEditor().resetState()\r\n      }\r\n      ui.$stateWrap.append($btn)\r\n      ui.$editCancelBtn = $btn\r\n    }\r\n    this.comment = comment\r\n\r\n    ui.$header.style.display = 'none' // TODO: support modify header information\r\n\r\n    ui.$nick.value = comment.nick || ''\r\n    ui.$email.value = comment.email || ''\r\n    // ui.$link.value = comment.link || ''\r\n\r\n    this.kit.useEditor().setContent(comment.content)\r\n    ui.$textarea.focus()\r\n\r\n    this.updateSubmitBtnText($t('save'))\r\n  }\r\n\r\n  private cancelEdit() {\r\n    if (!this.comment) return\r\n\r\n    const ui = this.kit.useUI()\r\n\r\n    if (ui.$editCancelBtn) {\r\n      ui.$editCancelBtn.remove()\r\n      ui.$editCancelBtn = undefined\r\n    }\r\n\r\n    this.comment = undefined\r\n\r\n    const { nick, email, link } = this.kit.useUser().getData()\r\n    ui.$nick.value = nick\r\n    ui.$email.value = email\r\n    // ui.$link.value = link\r\n\r\n    this.kit.useEditor().setContent('')\r\n    this.restoreSubmitBtnText()\r\n\r\n    ui.$header.style.display = '' // TODO: support modify header information\r\n  }\r\n\r\n  // -------------------------------------------------------------------\r\n  //  Submit Btn Text Modifier\r\n  // -------------------------------------------------------------------\r\n\r\n  private originalSubmitBtnText = 'Send'\r\n\r\n  private updateSubmitBtnText(text: string) {\r\n    this.originalSubmitBtnText = this.kit.useUI().$submitBtn.innerText\r\n    this.kit.useUI().$submitBtn.innerText = text\r\n  }\r\n\r\n  private restoreSubmitBtnText() {\r\n    this.kit.useUI().$submitBtn.innerText = this.originalSubmitBtnText\r\n  }\r\n}\r\n","import EditorPlug from './_plug'\r\nimport type PlugKit from './_kit'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nexport default class Closable extends EditorPlug {\r\n  constructor(kit: PlugKit) {\r\n    super(kit)\r\n\r\n    const onOpen = () => this.open()\r\n    const onClose = () => this.close()\r\n\r\n    this.kit.useMounted(() => {\r\n      this.kit.useEvents().on('editor-open', onOpen)\r\n      this.kit.useEvents().on('editor-close', onClose)\r\n    })\r\n    this.kit.useUnmounted(() => {\r\n      this.kit.useEvents().off('editor-open', onOpen)\r\n      this.kit.useEvents().off('editor-close', onClose)\r\n    })\r\n  }\r\n\r\n  private open() {\r\n    this.kit.useUI().$textareaWrap.querySelector('.atk-comment-closed')?.remove()\r\n    this.kit.useUI().$textarea.style.display = ''\r\n    this.kit.useUI().$bottom.style.display = ''\r\n  }\r\n\r\n  private close() {\r\n    if (!this.kit.useUI().$textareaWrap.querySelector('.atk-comment-closed'))\r\n      this.kit\r\n        .useUI()\r\n        .$textareaWrap.prepend(\r\n          Utils.createElement(`<div class=\"atk-comment-closed\">${$t('onlyAdminCanReply')}</div>`),\r\n        )\r\n\r\n    if (!this.kit.useUser().getData().isAdmin) {\r\n      this.kit.useUI().$textarea.style.display = 'none'\r\n      this.kit.useEvents().trigger('panel-close')\r\n      this.kit.useUI().$bottom.style.display = 'none'\r\n    } else {\r\n      // 管理员一直打开评论\r\n      this.kit.useUI().$textarea.style.display = ''\r\n      this.kit.useUI().$bottom.style.display = ''\r\n    }\r\n  }\r\n}\r\n","import type { PlugManager } from '../editor-kit'\r\nimport type EditorPlug from './_plug'\r\n\r\n/**\r\n * PlugKit provides a set of methods to help you develop editor plug\r\n */\r\nexport default class PlugKit {\r\n  constructor(private plugs: PlugManager) {}\r\n\r\n  /** Use the editor */\r\n  useEditor() {\r\n    return this.plugs.editor\r\n  }\r\n\r\n  /**\r\n   * Use the context of global\r\n   *\r\n   * @deprecated The calls to this function should be reduced as much as possible\r\n   */\r\n  useGlobalCtx() {\r\n    return this.plugs.editor.ctx\r\n  }\r\n\r\n  /** Use the config of Artalk */\r\n  useConf() {\r\n    return this.plugs.editor.ctx.conf\r\n  }\r\n\r\n  /** Use the http api client */\r\n  useApi() {\r\n    return this.plugs.editor.ctx.getApi()\r\n  }\r\n\r\n  /** Use the user manager */\r\n  useUser() {\r\n    return this.plugs.editor.ctx.get('user')\r\n  }\r\n\r\n  /** Use the ui of editor */\r\n  useUI() {\r\n    return this.plugs.editor.getUI()\r\n  }\r\n\r\n  /** Use the events in editor scope */\r\n  useEvents() {\r\n    return this.plugs.getEvents()\r\n  }\r\n\r\n  /** Listen the event when plug is mounted */\r\n  useMounted(func: () => void) {\r\n    this.useEvents().on('mounted', func)\r\n  }\r\n\r\n  /** Listen the event when plug is unmounted */\r\n  useUnmounted(func: () => void) {\r\n    this.useEvents().on('unmounted', func)\r\n  }\r\n\r\n  /** Use the deps of other plug */\r\n  useDeps<T extends typeof EditorPlug>(plug: T) {\r\n    return this.plugs.get(plug)\r\n  }\r\n}\r\n","import { getEnabledPlugs } from './editor'\r\nimport EditorPlug from './editor/_plug'\r\nimport PlugKit from './editor/_kit'\r\nimport EventManager from '@/lib/event-manager'\r\nimport type { EditorApi, ArtalkPlugin } from '@/types'\r\n\r\nexport interface EditorEventPayloadMap {\r\n  mounted: undefined\r\n  unmounted: undefined\r\n  'header-input': { field: string; $input: HTMLInputElement }\r\n  'header-change': { field: string; $input: HTMLInputElement }\r\n  'content-updated': string\r\n  'panel-show': EditorPlug\r\n  'panel-hide': EditorPlug\r\n  'panel-close': undefined\r\n\r\n  'editor-close': undefined\r\n  'editor-open': undefined\r\n}\r\n\r\nexport const EditorKit: ArtalkPlugin = (ctx) => {\r\n  const editor = ctx.get('editor')\r\n\r\n  const editorPlugs = new PlugManager(editor)\r\n  ctx.inject('editorPlugs', editorPlugs)\r\n}\r\n\r\nexport class PlugManager {\r\n  private plugs: EditorPlug[] = []\r\n  private openedPlug: EditorPlug | null = null\r\n  private events = new EventManager<EditorEventPayloadMap>()\r\n\r\n  getPlugs() {\r\n    return this.plugs\r\n  }\r\n  getEvents() {\r\n    return this.events\r\n  }\r\n\r\n  private clear() {\r\n    this.plugs = []\r\n    this.events = new EventManager()\r\n    if (this.openedPlug) this.closePlugPanel()\r\n  }\r\n\r\n  constructor(public editor: EditorApi) {\r\n    let confLoaded = false // config not loaded at first time\r\n    this.editor.ctx.watchConf(\r\n      ['imgUpload', 'emoticons', 'preview', 'editorTravel', 'locale'],\r\n      (conf) => {\r\n        // trigger unmount event will call all plugs' unmount function\r\n        // (this will only be called while conf reloaded, not be called at first time)\r\n        confLoaded && this.getEvents().trigger('unmounted')\r\n\r\n        // reset the plugs\r\n        this.clear()\r\n\r\n        // init the all enabled plugs\r\n        getEnabledPlugs(conf).forEach((Plug) => {\r\n          // create the plug instance\r\n          const kit = new PlugKit(this)\r\n          this.plugs.push(new Plug(kit))\r\n        })\r\n\r\n        // trigger event for plug initialization\r\n        this.getEvents().trigger('mounted')\r\n        confLoaded = true\r\n\r\n        // refresh the plug UI\r\n        this.loadPluginUI()\r\n      },\r\n    )\r\n\r\n    this.events.on('panel-close', () => this.closePlugPanel())\r\n  }\r\n\r\n  private loadPluginUI() {\r\n    // handle ui, clear and reset the plug btns and plug panels\r\n    this.editor.getUI().$plugPanelWrap.innerHTML = ''\r\n    this.editor.getUI().$plugPanelWrap.style.display = 'none'\r\n    this.editor.getUI().$plugBtnWrap.innerHTML = ''\r\n\r\n    // load the plug UI\r\n    this.plugs.forEach((plug) => this.loadPluginItem(plug))\r\n  }\r\n\r\n  /** Load the plug btn and plug panel on editor ui */\r\n  private loadPluginItem(plug: EditorPlug) {\r\n    const $btn = plug.$btn\r\n    if (!$btn) return\r\n    this.editor.getUI().$plugBtnWrap.appendChild($btn)\r\n\r\n    // bind the event when click plug btn\r\n    !$btn.onclick &&\r\n      ($btn.onclick = () => {\r\n        // removing the active class from all the buttons\r\n        this.editor\r\n          .getUI()\r\n          .$plugBtnWrap.querySelectorAll('.active')\r\n          .forEach((item) => item.classList.remove('active'))\r\n\r\n        // if the plug is not the same as the openedPlug,\r\n        if (plug !== this.openedPlug) {\r\n          // then open the plug current clicked plug panel\r\n          this.openPlugPanel(plug)\r\n\r\n          // add active class for current plug panel\r\n          $btn.classList.add('active')\r\n        } else {\r\n          // then close the plug\r\n          this.closePlugPanel()\r\n        }\r\n      })\r\n\r\n    // initialization of plug panel\r\n    const $panel = plug.$panel\r\n    if ($panel) {\r\n      $panel.style.display = 'none'\r\n      this.editor.getUI().$plugPanelWrap.appendChild($panel)\r\n    }\r\n  }\r\n\r\n  get<T extends typeof EditorPlug>(plug: T) {\r\n    return this.plugs.find((p) => p instanceof plug) as InstanceType<T> | undefined\r\n  }\r\n\r\n  /** Open the editor plug panel */\r\n  openPlugPanel(plug: EditorPlug) {\r\n    this.plugs.forEach((aPlug) => {\r\n      const plugPanel = aPlug.$panel\r\n      if (!plugPanel) return\r\n\r\n      if (aPlug === plug) {\r\n        plugPanel.style.display = ''\r\n        this.events.trigger('panel-show', plug)\r\n      } else {\r\n        plugPanel.style.display = 'none'\r\n        this.events.trigger('panel-hide', plug)\r\n      }\r\n    })\r\n\r\n    this.editor.getUI().$plugPanelWrap.style.display = ''\r\n    this.openedPlug = plug\r\n  }\r\n\r\n  /** Close the editor plug panel */\r\n  closePlugPanel() {\r\n    if (!this.openedPlug) return\r\n\r\n    this.editor.getUI().$plugPanelWrap.style.display = 'none'\r\n    this.events.trigger('panel-hide', this.openedPlug)\r\n    this.openedPlug = null\r\n  }\r\n\r\n  /** Get the content which is transformed by plugs */\r\n  getTransformedContent(rawContent: string) {\r\n    let result = rawContent\r\n    this.plugs.forEach((aPlug) => {\r\n      if (!aPlug.contentTransformer) return\r\n      result = aPlug.contentTransformer(result)\r\n    })\r\n    return result\r\n  }\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const GotoFocus: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-goto', async (commentID) => {\r\n    // find the comment node\r\n    let comment = ctx.getCommentNodes().find((c) => c.getID() === commentID)\r\n    if (!comment) {\r\n      // fetch and insert the comment from the server\r\n      const data = (await ctx.getApi().comments.getComment(commentID)).data\r\n      ctx\r\n        .get('list')\r\n        .getListLayout({ forceFlatMode: true })\r\n        .insert(data.comment, data.reply_comment)\r\n      comment = ctx.getCommentNodes().find((c) => c.getID() === commentID)\r\n    }\r\n    if (!comment) return\r\n    comment.focus()\r\n  })\r\n}\r\n","import * as Utils from '@/lib/utils'\r\nimport * as Ui from '@/lib/ui'\r\nimport $t from '@/i18n'\r\n\r\nexport interface ErrorDialogOptions {\r\n  $err: HTMLElement\r\n\r\n  errMsg: string\r\n  errData?: any\r\n  retryFn?: () => void\r\n\r\n  onOpenSidebar?: () => void\r\n}\r\n\r\nexport function showErrorDialog(opts: ErrorDialogOptions) {\r\n  const errEl = Utils.createElement(`<span><span class=\"error-message\"></span><br/><br/></span>`)\r\n  errEl.querySelector<HTMLElement>('.error-message')!.innerText =\r\n    `${$t('listLoadFailMsg')}\\n${opts.errMsg}`\r\n\r\n  if (opts.retryFn) {\r\n    const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\r\n    $retryBtn.onclick = () => opts.retryFn && opts.retryFn()\r\n    errEl.appendChild($retryBtn)\r\n  }\r\n\r\n  if (opts.onOpenSidebar) {\r\n    const $openSidebar = Utils.createElement(\r\n      `<span atk-only-admin-show> | <span style=\"cursor:pointer;\">${$t('openName', { name: $t('ctrlCenter') })}</span></span>`,\r\n    )\r\n    errEl.appendChild($openSidebar)\r\n    $openSidebar.onclick = () => opts.onOpenSidebar && opts.onOpenSidebar()\r\n  }\r\n\r\n  Ui.setError(opts.$err, errEl)\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport { version as ARTALK_VERSION } from '~/package.json'\r\nimport type List from '~/src/list/list'\r\nimport * as Ui from '@/lib/ui'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nlet IgnoreVersionCheck = false\r\n\r\nexport const VersionCheck: ArtalkPlugin = (ctx) => {\r\n  ctx.watchConf(['apiVersion', 'versionCheck'], (conf) => {\r\n    const list = ctx.get('list')\r\n    if (conf.apiVersion && conf.versionCheck && !IgnoreVersionCheck)\r\n      versionCheck(list, ARTALK_VERSION, conf.apiVersion)\r\n  })\r\n}\r\n\r\nfunction versionCheck(list: List, feVer: string, beVer: string) {\r\n  const comp = Utils.versionCompare(feVer, beVer)\r\n  const sameVer = comp === 0\r\n  if (sameVer) return\r\n\r\n  const errEl = Utils.createElement(\r\n    `<div class=\"atk-version-check-notice\">${$t('updateMsg', {\r\n      name: comp < 0 ? $t('frontend') : $t('backend'),\r\n    })} <span class=\"atk-info\">` +\r\n      `${$t('currentVersion')}: ${$t('frontend')} ${feVer} / ${$t('backend')} ${beVer}` +\r\n      `</span></div>`,\r\n  )\r\n  const ignoreBtn = Utils.createElement(`<span class=\"atk-ignore-btn\">${$t('ignore')}</span>`)\r\n  ignoreBtn.onclick = () => {\r\n    errEl.remove()\r\n    IgnoreVersionCheck = true\r\n  }\r\n  errEl.append(ignoreBtn)\r\n  list.$el.parentElement!.prepend(errEl)\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\n// Notice: Singleton pattern needs to be loaded as lazy as possible,\r\n//         because the SSG application does not have a `window` context.\r\nlet darkModeMedia: MediaQueryList | undefined\r\n\r\nfunction updateClassnames($els: HTMLElement[], darkMode: boolean) {\r\n  const DarkModeClassName = 'atk-dark-mode'\r\n\r\n  $els.forEach(($el) => {\r\n    if (darkMode) $el.classList.add(DarkModeClassName)\r\n    else $el.classList.remove(DarkModeClassName)\r\n  })\r\n}\r\n\r\nexport const DarkMode: ArtalkPlugin = (ctx) => {\r\n  // the handler bind to Artalk instance, don't forget to remove it when Artalk instance destroyed\r\n  let darkModeAutoHandler: ((evt: MediaQueryListEvent) => void) | undefined\r\n\r\n  const sync = (darkMode: boolean | 'auto') => {\r\n    // the elements that classnames need to be updated when darkMode changed\r\n    const $els = [ctx.$root, ctx.get('layerManager').getEl()]\r\n\r\n    // init darkModeMedia if not exists, and only create once\r\n    if (!darkModeMedia) {\r\n      darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)')\r\n    }\r\n\r\n    if (darkMode === 'auto') {\r\n      // if darkMode is 'auto', add handler\r\n      if (!darkModeAutoHandler) {\r\n        // the handler that will be called when darkModeMedia changed\r\n        darkModeAutoHandler = (evt) => updateClassnames($els, evt.matches)\r\n        darkModeMedia.addEventListener('change', darkModeAutoHandler)\r\n      }\r\n\r\n      // update classnames immediately\r\n      updateClassnames($els, darkModeMedia.matches)\r\n    } else {\r\n      // if darkMode is boolean, remove handler\r\n      if (darkModeAutoHandler) {\r\n        darkModeMedia.removeEventListener('change', darkModeAutoHandler)\r\n        darkModeAutoHandler = undefined\r\n      }\r\n\r\n      // update classnames immediately\r\n      updateClassnames($els, darkMode)\r\n    }\r\n  }\r\n\r\n  ctx.watchConf(['darkMode'], (conf) => sync(conf.darkMode))\r\n  ctx.on('created', () => sync(ctx.conf.darkMode))\r\n  ctx.on('unmounted', () => {\r\n    // if handler exists, don't forget to remove it, or it will cause memory leak\r\n    darkModeAutoHandler && darkModeMedia?.removeEventListener('change', darkModeAutoHandler)\r\n    darkModeAutoHandler = undefined\r\n  })\r\n}\r\n","import { Markdown } from './markdown'\r\nimport { EditorKit } from './editor-kit'\r\nimport { ListPlugins } from './list'\r\nimport { Notifies } from './notifies'\r\nimport { PvCountWidget } from './stat'\r\nimport { VersionCheck } from './version-check'\r\nimport { AdminOnlyElem } from './admin-only-elem'\r\nimport { DarkMode } from './dark-mode'\r\nimport type { ArtalkPlugin } from '@/types'\r\n\r\nexport const DefaultPlugins: ArtalkPlugin[] = [\r\n  Markdown,\r\n  EditorKit,\r\n  AdminOnlyElem,\r\n  ...ListPlugins,\r\n  Notifies,\r\n  PvCountWidget,\r\n  VersionCheck,\r\n  DarkMode,\r\n]\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const AdminOnlyElem: ArtalkPlugin = (ctx) => {\r\n  const scanApply = () => {\r\n    applyAdminOnlyEls(\r\n      ctx.get('user').getData().isAdmin,\r\n      getAdminOnlyEls({\r\n        $root: ctx.$root,\r\n      }),\r\n    )\r\n  }\r\n\r\n  ctx.on('list-loaded', () => {\r\n    scanApply()\r\n  })\r\n\r\n  ctx.on('user-changed', (user) => {\r\n    scanApply()\r\n  })\r\n}\r\n\r\nfunction getAdminOnlyEls(opts: { $root: HTMLElement }): HTMLElement[] {\r\n  const els: HTMLElement[] = []\r\n\r\n  // elements in $root\r\n  opts.$root\r\n    .querySelectorAll<HTMLElement>(`[atk-only-admin-show]`)\r\n    .forEach((item) => els.push(item))\r\n\r\n  // TODO: provide a Artalk.conf hook to set whitelist of admin-only elements,\r\n  // and move following code to that hook (move into @artalk/artalk-sidebar)\r\n\r\n  // elements in sidebar\r\n  const $sidebarEl = document.querySelector<HTMLElement>('.atk-sidebar')\r\n  if ($sidebarEl)\r\n    $sidebarEl\r\n      .querySelectorAll<HTMLElement>(`[atk-only-admin-show]`)\r\n      .forEach((item) => els.push(item))\r\n\r\n  return els\r\n}\r\n\r\nfunction applyAdminOnlyEls(isAdmin: boolean, els: HTMLElement[]) {\r\n  els.forEach(($item: HTMLElement) => {\r\n    if (isAdmin) $item.classList.remove('atk-hide')\r\n    else $item.classList.add('atk-hide')\r\n  })\r\n}\r\n","import { WithEditor } from './with-editor'\r\nimport { Unread } from './unread'\r\nimport { Count } from './count'\r\nimport { SidebarBtn } from './sidebar-btn'\r\nimport { UnreadBadge } from './unread-badge'\r\nimport { GotoDispatcher } from './goto-dispatcher'\r\nimport { GotoFocus } from './goto-focus'\r\nimport { Copyright } from './copyright'\r\nimport { NoComment } from './no-comment'\r\nimport { Dropdown } from './dropdown'\r\nimport { TimeTicking } from './time-ticking'\r\nimport { ErrorDialog } from './error-dialog'\r\nimport { Loading } from './loading'\r\nimport { Fetch } from './fetch'\r\nimport { ReachBottom } from './reach-bottom'\r\nimport { GotoFirst } from './goto-first'\r\nimport type { ArtalkPlugin } from '@/types'\r\n\r\nconst ListPlugins: ArtalkPlugin[] = [\r\n  Fetch,\r\n  Loading,\r\n  Unread,\r\n  WithEditor,\r\n  Count,\r\n  // SidebarBtn,\r\n  UnreadBadge,\r\n  Dropdown,\r\n  GotoDispatcher,\r\n  GotoFocus,\r\n  NoComment,\r\n  Copyright,\r\n  TimeTicking,\r\n  ErrorDialog,\r\n  ReachBottom,\r\n  GotoFirst,\r\n]\r\n\r\nexport { ListPlugins }\r\n","import type { ListFetchParams, ArtalkPlugin } from '@/types'\r\n\r\nexport const Fetch: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', (_params) => {\r\n    if (ctx.getData().getLoading()) return\r\n    ctx.getData().setLoading(true)\r\n\r\n    const params: ListFetchParams = {\r\n      // default params\r\n      offset: 0,\r\n      limit: ctx.conf.pagination.pageSize,\r\n      flatMode: ctx.conf.flatMode as boolean, // always be boolean because had been handled in Artalk.init\r\n      paramsModifier: ctx.conf.listFetchParamsModifier,\r\n      ..._params,\r\n    }\r\n\r\n    // must before other function call\r\n    ctx.getData().setListLastFetch({\r\n      params,\r\n    })\r\n\r\n    // prepare params for request\r\n    const reqParams = {\r\n      limit: params.limit,\r\n      offset: params.offset,\r\n      flat_mode: params.flatMode,\r\n      page_key: ctx.getConf().pageKey,\r\n      site_name: ctx.getConf().site,\r\n    }\r\n\r\n    // call the modifier function\r\n    if (params.paramsModifier) params.paramsModifier(reqParams)\r\n\r\n    // start request\r\n    ctx\r\n      .getApi()\r\n      .comments.getComments({\r\n        ...reqParams,\r\n        ...ctx.getApi().getUserFields(),\r\n      })\r\n      .then(({ data }) => {\r\n        // Must before all other function call and event trigger,\r\n        // because it will depend on the lastData\r\n        // TODO: this is global variable, easy to use, but not good, consider to refactor.\r\n        // refactor work is hard, because it is used in many places.\r\n        ctx.getData().setListLastFetch({ params, data })\r\n\r\n        // 装置评论\r\n        ctx.getData().loadComments(data.comments)\r\n\r\n        // 更新页面数据\r\n        ctx.getData().updatePage(data.page)\r\n\r\n        // trigger events when success\r\n        params.onSuccess && params.onSuccess(data)\r\n\r\n        ctx.trigger('list-fetched', { params, data })\r\n      })\r\n      .catch((e) => {\r\n        // 显示错误对话框\r\n        const error = {\r\n          msg: e.msg || String(e),\r\n          data: e.data,\r\n        }\r\n\r\n        params.onError && params.onError(error)\r\n\r\n        // trigger events when error\r\n        ctx.trigger('list-failed', error)\r\n        ctx.trigger('list-fetched', { params, error })\r\n\r\n        throw e\r\n      })\r\n      .finally(() => {\r\n        ctx.getData().setLoading(false)\r\n      })\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Ui from '@/lib/ui'\r\n\r\nexport const Loading: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', (p) => {\r\n    const list = ctx.get('list')\r\n\r\n    if (p.offset === 0)\r\n      // only show loading when fetch first page\r\n      Ui.setLoading(true, list.$el)\r\n    // else if not first page, show loading in paginator (code not there)\r\n  })\r\n\r\n  ctx.on('list-fetched', () => {\r\n    const list = ctx.get('list')\r\n    Ui.setLoading(false, list.$el)\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport const Unread: ArtalkPlugin = (ctx) => {\r\n  ctx.on('comment-rendered', (comment) => {\r\n    // comment unread highlight\r\n    if (ctx.conf.listUnreadHighlight === true) {\r\n      const notifies = ctx.getData().getNotifies()\r\n      const notify = notifies.find((o) => o.comment_id === comment.getID())\r\n\r\n      if (notify) {\r\n        // if comment contains in unread list\r\n        comment.getRender().setUnread(true)\r\n        comment.getRender().setOpenAction(() => {\r\n          window.open(notify.read_link)\r\n\r\n          // remove notify which has been read\r\n          ctx.getData().updateNotifies(notifies.filter((o) => o.comment_id !== comment.getID()))\r\n        })\r\n      } else {\r\n        // comment not in unread list\r\n        comment.getRender().setUnread(false)\r\n      }\r\n    }\r\n  })\r\n\r\n  ctx.on('list-goto', (commentID) => {\r\n    const notifyKey = Utils.getQueryParam('atk_notify_key')\r\n    if (notifyKey) {\r\n      // mark as read\r\n      ctx\r\n        .getApi()\r\n        .notifies.markNotifyRead(commentID, notifyKey)\r\n        .then(() => {\r\n          // remove from unread list\r\n          ctx.getData().updateNotifies(\r\n            ctx\r\n              .getData()\r\n              .getNotifies()\r\n              .filter((o) => o.comment_id !== commentID),\r\n          )\r\n        })\r\n    }\r\n  })\r\n}\r\n","import type { ContextApi, ArtalkPlugin, PageData } from '@/types'\r\nimport $t from '@/i18n'\r\n\r\nexport const WithEditor: ArtalkPlugin = (ctx) => {\r\n  let $closeCommentBtn: HTMLElement | undefined\r\n\r\n  // on Artalk mounted\r\n  // (after all components had mounted)\r\n  ctx.on('mounted', () => {\r\n    const list = ctx.get('list')\r\n\r\n    $closeCommentBtn = list.$el.querySelector<HTMLElement>('[data-action=\"admin-close-comment\"]')!\r\n\r\n    // bind editor close button click event\r\n    $closeCommentBtn.addEventListener('click', () => {\r\n      const page = ctx.getData().getPage()\r\n      if (!page) throw new Error('Page data not found')\r\n\r\n      page.admin_only = !page.admin_only\r\n      adminPageEditSave(ctx, page)\r\n    })\r\n  })\r\n\r\n  // on comment list loaded (it will include page data update)\r\n  ctx.on('page-loaded', (page) => {\r\n    const editor = ctx.get('editor')\r\n\r\n    // if page comment is closed\r\n    if (page?.admin_only === true) {\r\n      // then close editor\r\n      editor.getPlugs()?.getEvents().trigger('editor-close')\r\n      $closeCommentBtn && ($closeCommentBtn.innerText = $t('openComment'))\r\n    } else {\r\n      // the open editor\r\n      editor.getPlugs()?.getEvents().trigger('editor-open')\r\n      $closeCommentBtn && ($closeCommentBtn.innerText = $t('closeComment'))\r\n    }\r\n  })\r\n\r\n  ctx.on('list-loaded', (comments) => {\r\n    // 防止评论框被吞\r\n    ctx.editorResetState()\r\n  })\r\n}\r\n\r\n/** 管理员设置页面信息 */\r\nfunction adminPageEditSave(ctx: ContextApi, page: PageData) {\r\n  ctx.editorShowLoading()\r\n  ctx\r\n    .getApi()\r\n    .pages.updatePage(page.id, page)\r\n    .then(({ data }) => {\r\n      ctx.getData().updatePage(data)\r\n    })\r\n    .catch((err) => {\r\n      ctx.editorShowNotify(`${$t('editFail')}: ${err.message || String(err)}`, 'e')\r\n    })\r\n    .finally(() => {\r\n      ctx.editorHideLoading()\r\n    })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nexport const Count: ArtalkPlugin = (ctx) => {\r\n  const refreshCountNumEl = () => {\r\n    const list = ctx.get('list')\r\n\r\n    const $count = list.$el.querySelector('.atk-comment-count .atk-text')\r\n    if (!$count) return\r\n\r\n    const text = Utils.htmlEncode(\r\n      $t('counter', {\r\n        count: `${Number(ctx.getData().getListLastFetch()?.data?.count) || 0}`,\r\n      }),\r\n    )\r\n    $count.innerHTML = text.replace(/(\\d+)/, '<span class=\"atk-comment-count-num\">$1</span>')\r\n  }\r\n\r\n  ctx.on('list-loaded', () => {\r\n    refreshCountNumEl()\r\n  })\r\n\r\n  ctx.on('comment-inserted', () => {\r\n    // 评论数增加 1\r\n    const last = ctx.getData().getListLastFetch()\r\n    if (last?.data) last.data.count += 1\r\n  })\r\n\r\n  ctx.on('comment-deleted', () => {\r\n    // 评论数减 1\r\n    const last = ctx.getData().getListLastFetch()\r\n    if (last?.data) last.data.count -= 1\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const UnreadBadge: ArtalkPlugin = (ctx) => {\r\n  let $unreadBadge: HTMLElement | null = null\r\n\r\n  const showUnreadBadge = (count: number) => {\r\n    if (!$unreadBadge) return\r\n\r\n    if (count > 0) {\r\n      $unreadBadge.innerText = `${Number(count || 0)}`\r\n      $unreadBadge.style.display = 'block'\r\n    } else {\r\n      $unreadBadge.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  ctx.on('mounted', () => {\r\n    const list = ctx.get('list')\r\n\r\n    $unreadBadge = list.$el.querySelector<HTMLElement>('.atk-unread-badge')\r\n  })\r\n\r\n  ctx.on('notifies-updated', (notifies) => {\r\n    showUnreadBadge(notifies.length || 0)\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport $t from '@/i18n'\r\n\r\nexport const Dropdown: ArtalkPlugin = (ctx) => {\r\n  const reloadUseParamsEditor = (func: (p: any) => void) => {\r\n    ctx.conf.listFetchParamsModifier = func\r\n    ctx.reload()\r\n  }\r\n\r\n  const initDropdown = ($dropdownOn: HTMLElement) => {\r\n    renderDropdown({\r\n      $dropdownWrap: $dropdownOn,\r\n      dropdownList: [\r\n        [\r\n          $t('sortLatest'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.sort_by = 'date_desc'\r\n            })\r\n          },\r\n        ],\r\n        [\r\n          $t('sortBest'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.sort_by = 'vote'\r\n            })\r\n          },\r\n        ],\r\n        [\r\n          $t('sortOldest'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.sort_by = 'date_asc'\r\n            })\r\n          },\r\n        ],\r\n        [\r\n          $t('sortAuthor'),\r\n          () => {\r\n            reloadUseParamsEditor((p) => {\r\n              p.view_only_admin = true\r\n            })\r\n          },\r\n        ],\r\n      ],\r\n    })\r\n  }\r\n\r\n  ctx.watchConf(['listSort', 'locale'], (conf) => {\r\n    const list = ctx.get('list')\r\n\r\n    const $count = list.$el.querySelector<HTMLElement>('.atk-comment-count')\r\n    if (!$count) return\r\n\r\n    // 评论列表排序 Dropdown 下拉选择层\r\n    if (conf.listSort) {\r\n      initDropdown($count)\r\n    } else {\r\n      removeDropdown({\r\n        $dropdownWrap: $count,\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n/** 评论排序方式选择下拉菜单 */\r\nfunction renderDropdown(conf: {\r\n  $dropdownWrap: HTMLElement\r\n  dropdownList: [string, () => void][]\r\n}) {\r\n  const { $dropdownWrap, dropdownList } = conf\r\n  if ($dropdownWrap.querySelector('.atk-dropdown')) return\r\n\r\n  // 修改 class\r\n  $dropdownWrap.classList.add('atk-dropdown-wrap')\r\n\r\n  // 插入图标\r\n  $dropdownWrap.append(Utils.createElement(`<span class=\"atk-arrow-down-icon\"></span>`))\r\n\r\n  // 列表项点击事件\r\n  let curtActive = 0 // 当前选中\r\n  const onItemClick = (i: number, $item: HTMLElement, name: string, action: () => void) => {\r\n    action()\r\n\r\n    // set active\r\n    curtActive = i\r\n    $dropdown.querySelectorAll('.active').forEach((e) => {\r\n      e.classList.remove('active')\r\n    })\r\n    $item.classList.add('active')\r\n\r\n    // 关闭层 (临时消失，取消 :hover)\r\n    $dropdown.style.display = 'none'\r\n    setTimeout(() => {\r\n      $dropdown.style.display = ''\r\n    }, 80)\r\n  }\r\n\r\n  // 生成列表元素\r\n  const $dropdown = Utils.createElement(`<ul class=\"atk-dropdown atk-fade-in\"></ul>`)\r\n  dropdownList.forEach((item, i) => {\r\n    const [name, action] = item\r\n\r\n    const $item = Utils.createElement(`<li class=\"atk-dropdown-item\"><span></span></li>`)\r\n    const $link = $item.querySelector<HTMLElement>('span')!\r\n    $link.innerText = name\r\n    $link.onclick = () => {\r\n      onItemClick(i, $item, name, action)\r\n    }\r\n    $dropdown.append($item)\r\n\r\n    if (i === curtActive) $item.classList.add('active') // 默认选中项\r\n  })\r\n\r\n  $dropdownWrap.append($dropdown)\r\n}\r\n\r\n/** 删除评论排序方式选择下拉菜单 */\r\nfunction removeDropdown(conf: { $dropdownWrap: HTMLElement }) {\r\n  const { $dropdownWrap } = conf\r\n  $dropdownWrap.classList.remove('atk-dropdown-wrap')\r\n  $dropdownWrap.querySelector('.atk-arrow-down-icon')?.remove()\r\n  $dropdownWrap.querySelector('.atk-dropdown')?.remove()\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\nexport const GotoDispatcher: ArtalkPlugin = (ctx) => {\r\n  let lastID = 0\r\n  const check = ({ locker }: { locker: boolean }) => {\r\n    const commentID = extractCommentID()\r\n    if (!commentID) return\r\n\r\n    if (locker && lastID === commentID) return // if the commentID is the same as the last one, do nothing\r\n    lastID = commentID // record the last commentID\r\n\r\n    ctx.trigger('list-goto', commentID) // trigger event\r\n  }\r\n\r\n  const hashChangeHandler = () => check({ locker: false })\r\n  const listLoadedHandler = () => check({ locker: true })\r\n  ctx.on('mounted', () => {\r\n    window.addEventListener('hashchange', hashChangeHandler)\r\n    ctx.on('list-loaded', listLoadedHandler)\r\n  })\r\n  ctx.on('unmounted', () => {\r\n    window.removeEventListener('hashchange', hashChangeHandler)\r\n    ctx.off('list-loaded', listLoadedHandler)\r\n  })\r\n}\r\n\r\nfunction extractCommentID(): number | null {\r\n  // Try get from hash\r\n  // Hash retrieval priority is higher than query,\r\n  // Because click goto will change hash.\r\n  const match = window.location.hash.match(/#atk-comment-([0-9]+)/)\r\n  let commentId =\r\n    match && match[1] && !Number.isNaN(parseFloat(match[1])) ? parseFloat(match[1]) : null\r\n\r\n  // Fail over to get from query\r\n  if (!commentId) {\r\n    commentId = Number(Utils.getQueryParam('atk_comment')) // same as backend GetReplyLink()\r\n  }\r\n\r\n  return commentId || null\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\nimport { sanitize } from '@/lib/sanitizer'\r\n\r\nexport const NoComment: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-loaded', (comments) => {\r\n    const list = ctx.get('list')!\r\n\r\n    // 无评论\r\n    const isNoComment = comments.length <= 0\r\n    let $noComment = list.getCommentsWrapEl().querySelector<HTMLElement>('.atk-list-no-comment')\r\n\r\n    if (isNoComment) {\r\n      if (!$noComment) {\r\n        $noComment = Utils.createElement('<div class=\"atk-list-no-comment\"></div>')\r\n\r\n        // sanitize before set innerHTML\r\n        $noComment.innerHTML = sanitize(list.ctx.conf.noComment || list.ctx.$t('noComment'))\r\n        list.getCommentsWrapEl().appendChild($noComment)\r\n      }\r\n    } else {\r\n      $noComment?.remove()\r\n    }\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport { version as ARTALK_VERSION } from '~/package.json'\r\n\r\nexport const Copyright: ArtalkPlugin = (ctx) => {\r\n  ctx.on('mounted', () => {\r\n    const list = ctx.get('list')\r\n\r\n    const $copyright = list.$el.querySelector<HTMLElement>('.atk-copyright')\r\n    if (!$copyright) return\r\n\r\n    $copyright.innerHTML =\r\n      `Powered By <a href=\"https://artalk.js.org\" ` +\r\n      `target=\"_blank\" title=\"Artalk v${ARTALK_VERSION}\">` +\r\n      `Artalk</a>`\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\n/** 评论时间自动更新 */\r\nexport const TimeTicking: ArtalkPlugin = (ctx) => {\r\n  let timer: number | null = null\r\n\r\n  ctx.on('mounted', () => {\r\n    timer = window.setInterval(() => {\r\n      const list = ctx.get('list')\r\n\r\n      list.$el.querySelectorAll<HTMLElement>('[data-atk-comment-date]').forEach((el) => {\r\n        const date = el.getAttribute('data-atk-comment-date')\r\n        el.innerText = Utils.timeAgo(new Date(Number(date)), ctx.$t)\r\n      })\r\n    }, 30 * 1000) // 30s 更新一次\r\n  })\r\n\r\n  ctx.on('unmounted', () => {\r\n    timer && window.clearInterval(timer)\r\n  })\r\n}\r\n","import * as Ui from '../../lib/ui'\r\nimport type { ArtalkPlugin, ContextApi } from '@/types'\r\nimport { showErrorDialog } from '@/components/error-dialog'\r\n\r\nexport const ErrorDialog: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', () => {\r\n    const list = ctx.get('list')\r\n\r\n    // clear the original error when a new fetch is triggered\r\n    Ui.setError(list.$el, null)\r\n  })\r\n\r\n  ctx.on('list-failed', (err) => {\r\n    showErrorDialog({\r\n      $err: ctx.get('list').$el,\r\n      errMsg: err.msg,\r\n      errData: err.data,\r\n      retryFn: () => ctx.fetch({ offset: 0 }),\r\n    })\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const ReachBottom: ArtalkPlugin = (ctx) => {\r\n  let observer: IntersectionObserver | null = null\r\n\r\n  const setupObserver = ($target: HTMLElement) => {\r\n    const scrollEvtAt = (ctx.conf.scrollRelativeTo && ctx.conf.scrollRelativeTo()) || null\r\n\r\n    observer = new IntersectionObserver(\r\n      ([entries]) => {\r\n        if (entries.isIntersecting) {\r\n          clearObserver() // clear before trigger event to avoid trigger twice `list-reach-bottom`\r\n\r\n          // note that this event will be triggered only once\r\n          // until the next list is loaded\r\n          ctx.trigger('list-reach-bottom')\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.9, // when the target is 90% visible\r\n\r\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\r\n        // If the root is null, then the bounds of the actual document viewport are used.\r\n        root: scrollEvtAt,\r\n      },\r\n    )\r\n    observer.observe($target)\r\n  }\r\n\r\n  const clearObserver = () => {\r\n    observer?.disconnect()\r\n    observer = null\r\n  }\r\n\r\n  ctx.on('list-loaded', () => {\r\n    clearObserver()\r\n\r\n    const list = ctx.get('list')\r\n\r\n    // get the second last child\r\n    const children = list.getCommentsWrapEl().childNodes\r\n    const $target = children.length > 2 ? (children[children.length - 2] as HTMLElement) : null\r\n    if (!$target) return\r\n\r\n    // check IntersectionObserver support\r\n    if (!('IntersectionObserver' in window)) {\r\n      console.warn('IntersectionObserver api not supported')\r\n      return\r\n    }\r\n\r\n    // use IntersectionObserver to detect reach bottom\r\n    setupObserver($target)\r\n  })\r\n\r\n  ctx.on('unmounted', () => {\r\n    clearObserver()\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\nimport * as Utils from '@/lib/utils'\r\n\r\n/** List scroll to the first comment */\r\nexport const GotoFirst: ArtalkPlugin = (ctx) => {\r\n  const handler = () => {\r\n    const list = ctx.get('list')\r\n\r\n    const $relative = ctx.conf.scrollRelativeTo && ctx.conf.scrollRelativeTo()\r\n    ;($relative || window).scroll({\r\n      top: Utils.getOffset(list.$el, $relative).top,\r\n      left: 0,\r\n    })\r\n  }\r\n\r\n  ctx.on('mounted', () => {\r\n    ctx.on('list-goto-first', handler)\r\n  })\r\n\r\n  ctx.on('unmounted', () => {\r\n    ctx.off('list-goto-first', handler)\r\n  })\r\n}\r\n","import type { ArtalkPlugin } from '@/types'\r\n\r\nexport const Notifies: ArtalkPlugin = (ctx) => {\r\n  ctx.on('list-fetch', (params) => {\r\n    if (params.offset !== 0) return\r\n\r\n    const user = ctx.getApi().getUserFields()\r\n    if (!user) return\r\n\r\n    // Fetch all unread notifies\r\n    ctx\r\n      .getApi()\r\n      .notifies.getNotifies(user)\r\n      .then((res) => {\r\n        ctx.getData().updateNotifies(res.data.notifies)\r\n      })\r\n  })\r\n}\r\n","import { DefaultPlugins } from './plugins'\r\nimport type { ArtalkConfig, ArtalkPlugin, ContextApi } from '@/types'\r\nimport { handleConfFormServer } from '@/config'\r\nimport { showErrorDialog } from '@/components/error-dialog'\r\n\r\n/**\r\n * Global Plugins for all Artalk instances\r\n */\r\nexport const GlobalPlugins: Set<ArtalkPlugin> = new Set([...DefaultPlugins])\r\n\r\n/**\r\n * Plugin options for plugin initialization\r\n */\r\nexport const PluginOptions: WeakMap<ArtalkPlugin, any> = new WeakMap()\r\n\r\nexport async function load(ctx: ContextApi) {\r\n  const loadedPlugins = new Set<ArtalkPlugin>()\r\n  const loadPlugins = (plugins: Set<ArtalkPlugin>) => {\r\n    plugins.forEach((plugin) => {\r\n      if (typeof plugin === 'function' && !loadedPlugins.has(plugin)) {\r\n        plugin(ctx, PluginOptions.get(plugin))\r\n        loadedPlugins.add(plugin)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Load local plugins\r\n  loadPlugins(GlobalPlugins)\r\n\r\n  // Get conf from server\r\n  const { data } = await ctx\r\n    .getApi()\r\n    .conf.conf()\r\n    .catch((err) => {\r\n      onLoadErr(ctx, err)\r\n      throw err\r\n    })\r\n\r\n  // Initial config\r\n  let conf: Partial<ArtalkConfig> = {\r\n    apiVersion: data.version?.version, // version info\r\n  }\r\n\r\n  // Reference conf from backend\r\n  if (ctx.conf.useBackendConf) {\r\n    if (!data.frontend_conf)\r\n      throw new Error(\r\n        'The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled',\r\n      )\r\n    conf = { ...conf, ...handleConfFormServer(data.frontend_conf) }\r\n  }\r\n\r\n  // Apply conf modifier\r\n  ctx.conf.remoteConfModifier && ctx.conf.remoteConfModifier(conf)\r\n\r\n  // Dynamically load network plugins\r\n  conf.pluginURLs &&\r\n    (await loadNetworkPlugins(conf.pluginURLs, ctx.conf.server)\r\n      .then((plugins) => {\r\n        loadPlugins(plugins)\r\n      })\r\n      .catch((err) => {\r\n        console.error('Failed to load plugin', err)\r\n      }))\r\n\r\n  // After all plugins are loaded\r\n  ctx.trigger('created')\r\n\r\n  // Apply conf updating\r\n  ctx.updateConf(conf)\r\n\r\n  // Trigger mounted event\r\n  ctx.trigger('mounted')\r\n\r\n  // Load comment list\r\n  if (!ctx.conf.remoteConfModifier) {\r\n    // only auto fetch when no remoteConfModifier\r\n    ctx.fetch({ offset: 0 })\r\n  }\r\n}\r\n\r\n/**\r\n * Dynamically load plugins from Network\r\n */\r\nasync function loadNetworkPlugins(scripts: string[], apiBase: string): Promise<Set<ArtalkPlugin>> {\r\n  const networkPlugins = new Set<ArtalkPlugin>()\r\n  if (!scripts || !Array.isArray(scripts)) return networkPlugins\r\n\r\n  const tasks: Promise<void>[] = []\r\n\r\n  scripts.forEach((url) => {\r\n    // check url valid\r\n    if (!/^(http|https):\\/\\//.test(url))\r\n      url = `${apiBase.replace(/\\/$/, '')}/${url.replace(/^\\//, '')}`\r\n\r\n    tasks.push(\r\n      new Promise<void>((resolve, reject) => {\r\n        // check if loaded\r\n        if (document.querySelector(`script[src=\"${url}\"]`)) {\r\n          resolve()\r\n          return\r\n        }\r\n\r\n        // load script\r\n        const script = document.createElement('script')\r\n        script.src = url\r\n        document.head.appendChild(script)\r\n        script.onload = () => resolve()\r\n        script.onerror = (err) => reject(err)\r\n      }),\r\n    )\r\n  })\r\n\r\n  await Promise.all(tasks)\r\n\r\n  // Read ArtalkPlugins object from window\r\n  Object.values(window.ArtalkPlugins || {}).forEach((plugin) => {\r\n    if (typeof plugin === 'function') networkPlugins.add(plugin)\r\n  })\r\n\r\n  return networkPlugins\r\n}\r\n\r\nexport function onLoadErr(ctx: ContextApi, err: any) {\r\n  let sidebarOpenView = ''\r\n\r\n  // if response err_no_site, modify the sidebar open view to create site\r\n  if (err.data?.err_no_site) {\r\n    const viewLoadParam = {\r\n      create_name: ctx.conf.site,\r\n      create_urls: `${window.location.protocol}//${window.location.host}`,\r\n    }\r\n    sidebarOpenView = `sites|${JSON.stringify(viewLoadParam)}`\r\n  }\r\n\r\n  showErrorDialog({\r\n    $err: ctx.get('list').$el,\r\n    errMsg: err.msg || String(err),\r\n    errData: err.data,\r\n    retryFn: () => load(ctx),\r\n    onOpenSidebar: ctx.get('user').getData().isAdmin\r\n      ? () =>\r\n          ctx.showSidebar({\r\n            view: sidebarOpenView as any,\r\n          })\r\n      : undefined, // only show open sidebar button when user is admin\r\n  })\r\n}\r\n","import './style/main.scss'\r\n\r\nimport type { EventHandler } from './lib/event-manager'\r\nimport Context from './context'\r\nimport { handelCustomConf, convertApiOptions } from './config'\r\nimport Services from './service'\r\nimport * as Stat from './plugins/stat'\r\nimport { Api } from './api'\r\nimport type { TInjectedServices } from './service'\r\nimport { GlobalPlugins, PluginOptions, load } from './load'\r\nimport type { ArtalkConfig, EventPayloadMap, ArtalkPlugin, ContextApi } from '@/types'\r\n\r\n/**\r\n * Artalk\r\n *\r\n * @see https://artalk.js.org\r\n */\r\nexport default class Artalk {\r\n  public ctx!: ContextApi\r\n\r\n  constructor(conf: Partial<ArtalkConfig>) {\r\n    // Init Config\r\n    const handledConf = handelCustomConf(conf, true)\r\n\r\n    // Init Context\r\n    this.ctx = new Context(handledConf)\r\n\r\n    // Init Services\r\n    Object.entries(Services).forEach(([name, initService]) => {\r\n      const obj = initService(this.ctx)\r\n      obj && this.ctx.inject(name as keyof TInjectedServices, obj) // auto inject deps to ctx\r\n    })\r\n\r\n    if (import.meta.env.DEV && import.meta.env.VITEST) {\r\n      global.devLoadArtalk = () => load(this.ctx)\r\n    } else {\r\n      load(this.ctx)\r\n    }\r\n  }\r\n\r\n  /** Get the config of Artalk */\r\n  public getConf() {\r\n    return this.ctx.getConf()\r\n  }\r\n\r\n  /** Get the root element of Artalk */\r\n  public getEl() {\r\n    return this.ctx.$root\r\n  }\r\n\r\n  /** Update config of Artalk */\r\n  public update(conf: Partial<ArtalkConfig>) {\r\n    this.ctx.updateConf(conf)\r\n    return this\r\n  }\r\n\r\n  /** Reload comment list of Artalk */\r\n  public reload() {\r\n    this.ctx.reload()\r\n  }\r\n\r\n  /** Destroy instance of Artalk */\r\n  public destroy() {\r\n    this.ctx.trigger('unmounted')\r\n    while (this.ctx.$root.firstChild) {\r\n      this.ctx.$root.removeChild(this.ctx.$root.firstChild)\r\n    }\r\n  }\r\n\r\n  /** Add an event listener */\r\n  public on<K extends keyof EventPayloadMap>(name: K, handler: EventHandler<EventPayloadMap[K]>) {\r\n    this.ctx.on(name, handler)\r\n  }\r\n\r\n  /** Remove an event listener */\r\n  public off<K extends keyof EventPayloadMap>(name: K, handler: EventHandler<EventPayloadMap[K]>) {\r\n    this.ctx.off(name, handler)\r\n  }\r\n\r\n  /** Trigger an event */\r\n  public trigger<K extends keyof EventPayloadMap>(name: K, payload?: EventPayloadMap[K]) {\r\n    this.ctx.trigger(name, payload)\r\n  }\r\n\r\n  /** Set dark mode */\r\n  public setDarkMode(darkMode: boolean) {\r\n    this.ctx.setDarkMode(darkMode)\r\n  }\r\n\r\n  // ===========================\r\n  //       Static Members\r\n  // ===========================\r\n\r\n  /** Init Artalk */\r\n  public static init(conf: Partial<ArtalkConfig>): Artalk {\r\n    return new Artalk(conf)\r\n  }\r\n\r\n  /** Use plugin, the plugin will be used when Artalk.init */\r\n  public static use<T = any>(plugin: ArtalkPlugin<T>, options?: T) {\r\n    GlobalPlugins.add(plugin)\r\n    PluginOptions.set(plugin, options)\r\n  }\r\n\r\n  /** Load count widget */\r\n  public static loadCountWidget(c: Partial<ArtalkConfig>) {\r\n    const conf = handelCustomConf(c, true)\r\n\r\n    Stat.initCountWidget({\r\n      getApi: () => new Api(convertApiOptions(conf)),\r\n      siteName: conf.site,\r\n      countEl: conf.countEl,\r\n      pvEl: conf.pvEl,\r\n      pageKeyAttr: conf.statPageKeyAttr,\r\n      pvAdd: false,\r\n    })\r\n  }\r\n\r\n  // ===========================\r\n  //         Deprecated\r\n  // ===========================\r\n\r\n  /** @deprecated Please use `getEl()` instead */\r\n  public get $root() {\r\n    return this.ctx.$root\r\n  }\r\n\r\n  /** @description Please use `getConf()` instead */\r\n  public get conf() {\r\n    return this.ctx.getConf()\r\n  }\r\n}\r\n","import Artalk from './artalk'\r\nimport type * as ArtalkType from './types'\r\n\r\nexport type * from './types'\r\nexport { ArtalkType }\r\n\r\nexport default Artalk\r\n\r\n// Expose the static methods from the Artalk class\r\n// because direct export of static methods is not supported\r\n// for adapting to different environments like CommonJS and browser IIFE\r\n// for example, we can use `Artalk.init()` rather than `Artalk.default.init()`\r\n// therefore, we need to manually expose the static methods in the Artalk class.\r\nexport const init = Artalk.init\r\nexport const use = Artalk.use\r\nexport const loadCountWidget = Artalk.loadCountWidget\r\n"],"names":["HttpClient","constructor","apiConfig","__publicField","this","Map","fetchParams","fetch","credentials","headers","redirect","referrerPolicy","data","securityData","input","JSON","stringify","Object","keys","reduce","formData","key","property","append","Blob","FormData","toQueryString","cancelToken","abortControllers","has","abortController","get","signal","AbortController","set","abort","delete","_a","__async","_b","body","secure","path","type","query","format","baseUrl","params","__objRest","secureParams","baseApiParams","securityWorker","requestParams","mergeRequestParams","queryString","payloadFormatter","contentFormatters","responseFormat","customFetch","__spreadProps","__spreadValues","createAbortSignal","then","response","r","error","ok","catch","e","assign","encodeQueryParam","value","encodeURIComponent","addQueryParam","addArrayQueryParam","map","v","join","rawQuery","filter","Array","isArray","addQueryParams","params1","params2","super","arguments","loginByEmail","request","method","registerByEmail","sendVerifyEmail","checkDataMerge","applyDataMerge","flushCache","warmUpCache","getCaptcha","getCaptchaStatus","verifyCaptcha","getComments","createComment","comment","getComment","id","updateComment","deleteComment","conf","getSocialLoginProviders","getDomain","getNotifies","markAllNotifyRead","options","markNotifyRead","commentId","notifyKey","getPages","fetchAllPages","getPageFetchStatus","logPv","page","updatePage","deletePage","fetchPage","sendEmail","email","getSettings","applySettings","settings","getSettingsTemplate","locale","getSites","createSite","site","updateSite","deleteSite","getStats","exportArtrans","importArtrans","uploadArtrans","upload","getUser","login","user","getUserStatus","createUser","updateUser","deleteUser","getUsers","getVersion","syncVotes","vote","targetId","Fetch","opts","init","apiToken","getApiToken","Headers","Authorization","resp","json","retry","handlers","promise","item","action","handler","Promise","resolve","code","err","FetchException","message","msg","console","createError","status","Error","Api","ApiV2","baseURL","_opts","getUserFields","userInfo","name","escapes","unescapes","rescaped","runescaped","escapeHtmlChar","match","unescapeHtmlChar","escapeHtml","text","String","replace","unescapeHtml","html","she","encode","escape","decode","unescape","version","assignment_1","assignment","result","stack","prototype","slice","call","length","shift","hasOwnProperty","toString","lowercase","string","toLowerCase","asKey","accumulator","toMap_1","list","attributes","uris","require$$0","elements","voids","he","require$$1","require$$3","rstart","rend","rattrs","rtag","rtagend","require$$2","parser","chars","lastItem","createStack","last","parsePart","substr","index","indexOf","substring","test","parseEdge","parseEndTag","parseStartTag","same","regex","tag","tagName","rest","unary","attrs","low","u","doubleQuotedValue","singleQuotedValue","unquotedValue","push","start","i","pos","end","sanitizer","buffer","context","o","ignoring","ignore","allowedTags","out","forEach","classesOk","allowedClasses","attrsOk","allowedAttributes","lkey","split","className","trim","colon","questionmark","hash","allowedSchemes","some","matches","scheme","testUrl","unignore","transformText","depth","reset","defaults","a","iframe","img","insane","strict","configuration","insaneOptions","span","node","reg","class","style","sanitize","content","exports","createCommonjsModule","fn","module","index$1","RegExp","line","source","block","defaultColors","toComment","cm","ref","colors","cache","re","m","word","color","factory","renderCode","hanabi","getRenderer","renderer","marked","Renderer","link","markedLinkRenderer","markedCodeRenderer","image","markedImageRenderer","orgLinkRenderer","href","title","isSameOriginLink","URL","origin","getLinkOrigin","window","location","lang","realLang","colorized","hljs","getLanguage","highlight","orgImageRenderer","imgLazyLoad","instance","replacers","markedOptions","gfm","breaks","async","getInstance","src","markedContent","parse","_","alt","imgSrc","simpleMarked","dest","replacer","mergeDeep","objects","isObject","obj","prev","pVal","oVal","concat","DataManager","events","getLoading","loading","setLoading","val","getListLastFetch","listLastFetch","setListLastFetch","comments","fetchComments","trigger","findComment","find","c","clearComments","loadComments","partialComments","insertComment","notifies","updateNotifies","getPage","pageData","createElement","htmlStr","div","document","innerHTML","firstElementChild","htmlEncode","str","temp","innerText","getQueryParam","exec","search","decodeURIComponent","getOffset","el","relativeTo","getOffsetRecursive","element","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","top","left","elOffset","relativeToOffset","padWithZeros","vNumber","width","numAsString","timeAgo","date","$t","n","oldTime","getTime","diffValue","Date","days","Math","floor","leave1","hours","leave2","minutes","leave3","seconds","round","vDay","getDate","vMonth","getMonth","getFullYear","dateFormat","getCorrectUserAgent","uaRaw","navigator","userAgent","userAgentData","getHighEntropyValues","uaData","uaGot","majorPlatformVersion","Number","platformVersion","platform","getURLBasedOnApi","base","en","placeholder","noComment","send","signIn","signUp","save","nick","emoticon","preview","uploadImage","uploadFail","commentFail","restoredMsg","onlyAdminCanReply","uploadLoginMsg","counter","sortLatest","sortOldest","sortBest","sortAuthor","openComment","closeComment","listLoadFailMsg","listRetry","loadMore","admin","reply","voteUp","voteDown","voteFail","readMore","actionConfirm","collapse","collapsed","collapsedMsg","expand","approved","pending","pendingMsg","edit","editCancel","deleteConfirm","pin","unpin","now","adminCheck","captchaCheck","confirm","cancel","msgCenter","ctrlCenter","noAccountPrompt","haveAccountPrompt","forgetPassword","resetPassword","verificationCode","verifySend","verifyResend","waitSeconds","emailVerified","password","username","nextStep","skipNotVerify","logoutConfirm","accountMergeNotice","accountMergeSelectOne","accountMergeConfirm","dismiss","merge","frontend","backend","loadFail","editing","editFail","deleting","deleteFail","reqGot","reqAborted","updateMsg","currentVersion","open","openName","GLOBAL_LOCALES_KEY","internal","findLocaleSet","p1","p2","toUpperCase","LocaleConf","LocaleDict","setLocale","t","args","token","Utils.htmlEncode","EventManager","on","off","evt","payload","once","pageKey","pageTitle","server","sendBtn","darkMode","editorTravel","flatMode","nestMax","nestSort","emoticons","uaBadge","listSort","countEl","pvEl","statPageKeyAttr","gravatar","mirror","pagination","pageSize","autoLoad","heightLimit","children","scrollable","imgUpload","reqTimeout","versionCheck","useBackendConf","handelCustomConf","customConf","full","Defaults","findEl","querySelector","pathname","language","matchMedia","convertApiOptions","ctx","siteName","timeout","getData","checkHasBasicUserInfo","getApiHandlers","watchConf","effect","lastVal","newVal","getConf","res","b","Context","getCommentNodes","$root","classList","add","mounted","inject","depName","getApi","apiHandlers","h","createApiHandlers","checkCaptcha","checkAdmin","createNewApiHandlers","replyComment","commentData","$comment","editor","setReply","editComment","setEditComment","reload","offset","listGotoFirst","editorShowLoading","showLoading","editorHideLoading","hideLoading","editorShowNotify","showNotify","editorResetState","resetState","showSidebar","sidebarLayer","show","hideSidebar","hide","checkerLauncher","I18n.t","setDarkMode","updateConf","nConf","getEl","getMarked","marked.getInstance","parentElem","$loading","Utils.createElement","transparentBg","background","appendChild","display","$spinner","setTimeout","isConnected","scrollIntoView","elem","enableAnim","containerRect","clientHeight","scrollY","innerHeight","height","scrollOptions","behavior","scroll","playFadeInAnim","after","onAnimEnded","remove","removeEventListener","addEventListener","playFadeAnim","setError","errorTextEl","HTMLElement","iframeBody","checker","$iframeWrap","$iframe","Ui.showLoading","getOpts","getCaptchaIframeURL","onload","Ui.hideLoading","$closeBtn","hideInteractInput","stop","queryStatus","ms","isPass","captcha","is_pass","triggerSuccess","onclick","CaptchaChecker","inputVal","render.iframeBody","imgEl","setAttribute","img_data","render.imgBody","onSuccess","formEl","onError","click","AdminChecker","inputType","update","isAdmin","onReload","Dialog","contentEl","$el","$actions","$content","setYes","btn","onBtnClick","setNo","currentTarget","wrapPromise","reject","cancelFn","onCancel","successFn","CheckerLauncher","p","fire","postFire","layer","getCtx","create","close","destroy","checkerStore","checkerCtx","$input","btnTextOrg","focus","onkeyup","keyCode","preventDefault","dialog","btnEl","btnTextRestore","btnText","tf","onfocus","clearTimeout","onMount","Component","Sel","$header","$nick","$email","$link","$textareaWrap","$textarea","$bottom","$submitBtn","$notifyWrap","$bottomLeft","$stateWrap","$plugBtnWrap","$plugPanelWrap","EditorPlug","kit","useBtn","$btn","usePanel","$panel","useContentTransformer","func","contentTransformer","usePanelShow","useEvents","aPlug","usePanelHide","useEditorStateEffect","stateName","effectFn","editorStateEffectWhen","editorStateEffect","Mover","move","afterEl","isMoved","editorEl","useUI","$travelPlace","replaceWith","back","useGlobalCtx","EditorStateManager","stateCurt","state","stateUnmountFn","getPlugs","moveAfterEl","_c","_d","$relative","scrollRelativeTo","Ui.scrollIntoView","getUI","plugin","_e","Editor","ui","entries","k","sel","render","getState","getHeaderInputEls","getContentFinal","getContentRaw","plugs","getTransformedContent","getContentMarked","setContent","getEvents","insertContent","selection","createRange","selectionStart","sStart","sEnd","selectionEnd","sT","switch","submit","next","beforeSubmit","SidebarLayer","refreshOnShow","transform","initLayer","createIframe","view","iFrameSrc","getDarkMode","includes","iframeLoad","authCheck","animTimer","is_admin","is_login","setOnAfterHide","Utils.getURLBasedOnApi","time","urlParams","URLSearchParams","createNestStrategy","import","srcData","sortBy","nodeList","rid","root","rootNode","level","parent","loadChildren","parentNode","child","childNode","sortFunc","vote_up","sortLevels","nodes","sort","ListNest.makeNestCommentNodeList","nestSortBy","rootC","createCommentNode","$commentsWrap","getRender","parentC","replyD","childD","childC","putChild","checkHeightLimit","insert","prepend","findCommentNode","getParents","heightLimitRemoveForChildren","insertMode","is_collapsed","is_allow_reply","visible","$listCommentsWrap","ListLayout","getStrategy","check","rules","max","imgCheck","maxHeight","lock","_check","Utils.getHeight","parseFloat","getComputedStyle","opt","contains","HEIGHT_LIMIT_SCROLL_CSS","applyScrollableHeightLimit","HEIGHT_LIMIT_CSS","overflow","$expandBtn","stopPropagation","disposeHeightLimit","afterExpandBtnClick","applyHeightLimit","imgs","querySelectorAll","from","renderNick","$headerNick","renderVerifyBadge","$headerBadgeWrap","badgeText","badge_name","badgeColor","badge_color","$badge","backgroundColor","is_verified","$verifiedBadge","is_pinned","$pinnedBadge","renderDate","$date","getDateFormatted","renderUABadge","ip_region","$uaWrap","$regionBadge","browser","os","getUserUA","$uaBrowser","$usOS","ActionBtn","getText","adminOnly","isMessaging","msgRecTimer","appendTo","dom","setClick","isLoading","confirmRestore","isConfirming","confirmText","confirmRecTimer","fireMsgRecTimer","clearMsgRecTimer","updateText","loadingText","setMsg","setWarn","setSuccess","duringTime","setMsgRecTimer","msgRecTimerFunc","renderVote","voteBtnUp","getActions","voteBtnDown","vote_down","renderReply","replyBtn","Renders","Avatar","$avatar","$avatarImg","avatarURLBuilder","getGravatarURL","Header","Content","collapsedInfoEl","$body","insertAdjacentElement","contentShowBtn","Ui.playFadeInAnim","ReplyAt","replyTo","$replyAt","goToReplyComment","firstChild","ReplyTo","$replyTo","replyContent","Pending","is_pending","pendingEl","Actions","Render","$main","$childrenWrap","contentMaxH","childrenMaxH","HeightLimit.check","getChildren","HeightLimit.disposeHeightLimit","playFadeAnimForBody","playFlashAnim","getChildrenWrap","setUnread","setOpenable","setOpenURL","url","setOpenAction","CommentActions","actionBtn","votes","up","down","adminEdit","btnElem","modify","setData","adminDelete","onDelete","origHash","modifyHash","dispatchEvent","Event","CommentNode","nestCurt","actionInstance","renderInstance","CommentUI","newEl","onAfterRender","getParent","getNestCurt","getIsRoot","getID","getChildrenWrapEl","$childComment","flattenParents","emailHash","email_encrypted","Utils.timeAgo","info","win","nav","osVersion","engine","device","engineMatch","Trident","Presto","WebKit","Gecko","browserMatch","Safari","Chrome","IE","Edge","Firefox","Chromium","Opera","Vivaldi","Yandex","Kindle","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","TheWorld","MIUI","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi","osMatch","Windows","Linux","macOS","Android","Ubuntu","FreeBSD","Debian","BlackBerry","MeeGo","Symbian","iOS","WebOS","deviceMatch","Mobile","Tablet","showModalDialog","chrome","arr","browserLanguage","UADetect","ua","ReadMoreBtn","origText","$text","hasMore","total","onClick","checkDisabled","showErr","errMsg","ReadMorePaginator","readMoreAutoLoad","onReachedBottom","getHasMore","getIsClearComments","dispose","Pagination","oninput","onkeydown","keydown","$prevBtn","$nextBtn","maxPage","ceil","setInput","inputTimer","isNaN","change","onChange","which","UpDownPaginator","PaginationComponent","getPageDataByLastData","count","roots_count","initListPaginatorFunc","paginator","createPaginatorByConf","$paginator","List","initCrudEvents","getCommentsWrapEl","commentNodes","getListLayout","forceFlatMode","d","bodyOrgOverflow","bodyOrgPaddingRight","getScrollbarHelper","paddingRight","unlock","barPaddingRight","parseInt","getPropertyValue","inner","outer","position","visibility","w1","offsetWidth","w2","clientWidth","removeChild","Ui.getScrollBarWidth","Layer","onAfterHide","setAllowMaskClose","allow","allowMaskClose","getAllowMaskClose","onShow","onHide","LayerWrap","$wrap","$mask","createItem","createItemElement","hideWrap","showWrap","getMask","items","getWrap","l","LayerManager","wrap","LOCAL_USER_KEY","User","localUser","localStorage","getItem","setItem","onUserChanged","logout","services","i18n","I18n.setLocale","layerManager","editorPlugs","initCountWidget","loadStatCount","containers","loadCommentCount","cacheData","pvAdd","pvCount","pages","page_key","page_title","site_name","pv","incrementPvCount","loadPvCount","els","Set","selector","retrieveElements","pageKeys","pageKeyAttr","getAttribute","getPageKeys","stats","page_keys","defaultPageKey","updateElementsText","LocalStorageKey","SubmitAddPreset","reqAdd","useApi","getSubmitAddParams","useUser","useConf","useEditor","Utils.getCorrectUserAgent","postSubmitAdd","commentNew","Submit","defaultPreset","onEditorSubmit","do","useMounted","useUnmounted","registerCustom","customs","custom","activeCond","nComment","pre","req","post","Emoticons","raw","transEmoticonImageText","loadEmoticonsData","isImgLoaded","initEmoticonsList","changeListHeight","parentElement","isListLoaded","loadingTask","handleData","Ui.setError","pushGrp","grp","remoteLoad","all","grpData","isOwOFormat","convertOwO","solveNullKey","solveSameKey","tmp","values","container","owoData","grpName","nGrp","iconStr","icon","$grpWrap","$grp","$item","$grpSwitcher","openGrp","AllowImgExts","Upload","initDragImg","$imgUploadInput","accept","onchange","files","file","uploadImg","uploadFromFileList","onDragover","onDrop","dataTransfer","onPaste","clipboardData","fileExt","insertPrefix","uploadPlaceholderTxt","customUploaderFn","imgUploader","public_url","imgURL","urlRaw","protocol","Utils.isValidURL","Preview","isPlugPanelShow","updateContent","EDITOR_PLUGS","onContentUpdated","localContent","$inputs","inputEventFns","changeEventFns","field","timer","abortFn","onInput","fetchUserInfo","api","CANCEL_TOKEN","abortRequest","onUserInfoFetched","finally","onKeydown","adaptiveHeightByContent","diff","offsetHeight","scrollHeight","cancelReply","submitPlug","useDeps","page_url","$sendReplyBtn","cancelEdit","saveData","$editCancelBtn","updateSubmitBtnText","restoreSubmitBtnText","originalSubmitBtnText","onOpen","onClose","PlugKit","plug","PlugManager","confLoaded","clear","confRefs","getEnabledPlugs","Plug","loadPluginUI","closePlugPanel","openedPlug","loadPluginItem","openPlugPanel","plugPanel","rawContent","showErrorDialog","errEl","retryFn","$retryBtn","onOpenSidebar","$openSidebar","$err","IgnoreVersionCheck","darkModeMedia","updateClassnames","$els","DarkModeClassName","DefaultPlugins","libMarked","setOptions","initMarked","markedReplacers","scanApply","$sidebarEl","getAdminOnlyEls","_params","limit","paramsModifier","listFetchParamsModifier","reqParams","flat_mode","listUnreadHighlight","notify","comment_id","read_link","commentID","Utils.getQueryParam","$closeCommentBtn","admin_only","adminPageEditSave","$count","$unreadBadge","reloadUseParamsEditor","initDropdown","$dropdownOn","$dropdownWrap","dropdownList","curtActive","onItemClick","$dropdown","renderDropdown","sort_by","view_only_admin","removeDropdown","lastID","locker","extractCommentID","hashChangeHandler","listLoadedHandler","reply_comment","isNoComment","$noComment","$copyright","ARTALK_VERSION","setInterval","clearInterval","errData","observer","clearObserver","disconnect","childNodes","$target","scrollEvtAt","IntersectionObserver","isIntersecting","threshold","observe","setupObserver","warn","Utils.getOffset","apiVersion","feVer","beVer","comp","pa","pb","na","nb","Utils.versionCompare","ignoreBtn","darkModeAutoHandler","sync","GlobalPlugins","PluginOptions","WeakMap","load","loadedPlugins","loadPlugins","plugins","sidebarOpenView","err_no_site","viewLoadParam","create_name","create_urls","host","onLoadErr","frontend_conf","ExcludedKeys","startsWith","handleConfFormServer","remoteConfModifier","pluginURLs","scripts","apiBase","networkPlugins","tasks","script","head","onerror","ArtalkPlugins","loadNetworkPlugins","Artalk","handledConf","Services","initService","use","loadCountWidget"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10,11,12,14]}